(declare-const t_alice Bool)
(declare-const t_mary Bool)
(declare-const t_john Bool)
(declare-const t_robert Bool)
(declare-const a_alice_1 Bool)
(declare-const a_alice_2 Bool)
(declare-const a_alice_3 Bool)
(declare-const a_mary_1 Bool)
(declare-const a_mary_2 Bool)
(declare-const a_mary_3 Bool)
(declare-const a_john_1 Bool)
(declare-const a_john_2 Bool)
(declare-const a_john_3 Bool)
(declare-const a_robert_1 Bool)
(declare-const a_robert_2 Bool)
(declare-const a_robert_3 Bool)
(declare-const c_algebra Bool)
(declare-const c_calculus Bool)
(declare-const c_history Bool)
(declare-const c_music Bool)
(declare-const c_arts Bool)
(declare-const c_ICT Bool)
(assert (or a_alice_1 a_mary_1 a_john_1 a_robert_1))
(assert (or a_alice_2 a_mary_2 a_john_2 a_robert_2))
(assert (or a_alice_3 a_mary_3 a_john_3 a_robert_3))
(assert (= t_alice (or a_alice_1 a_alice_2 a_alice_3)))
(assert (= t_mary (or a_mary_1 a_mary_2 a_mary_3)))
(assert (= t_john (or a_john_1 a_john_2 a_john_3)))
(assert (= t_robert (or a_robert_1 a_robert_2 a_robert_3)))
(assert (=> a_alice_1 (and (not a_mary_1) (not a_john_1) (not a_robert_1))))
(assert (=> a_alice_2 (and (not a_mary_2) (not a_john_2) (not a_robert_2))))
(assert (=> a_alice_3 (and (not a_mary_3) (not a_john_3) (not a_robert_3))))
(assert (=> a_mary_1 (and (not a_alice_1) (not a_john_1) (not a_robert_1))))
(assert (=> a_mary_2 (and (not a_alice_2) (not a_john_2) (not a_robert_2))))
(assert (=> a_mary_3 (and (not a_alice_3) (not a_john_3) (not a_robert_3))))
(assert (=> a_john_1 (and (not a_alice_1) (not a_mary_1) (not a_robert_1))))
(assert (=> a_john_2 (and (not a_alice_2) (not a_mary_2) (not a_robert_2))))
(assert (=> a_john_3 (and (not a_alice_3) (not a_mary_3) (not a_robert_3))))
(assert (=> a_robert_1 (and (not a_alice_1) (not a_mary_1) (not a_john_1))))
(assert (=> a_robert_2 (and (not a_alice_2) (not a_mary_2) (not a_john_2))))
(assert (=> a_robert_3 (and (not a_alice_3) (not a_mary_3) (not a_john_3))))
(assert (= c_algebra (or t_alice)))
(assert (= c_calculus (or t_alice)))
(assert (= c_history (or t_john t_robert)))
(assert (not c_music))
(assert (= c_arts (or t_john t_robert)))
(assert (= c_ICT (or t_alice t_mary t_john)))
(assert (and c_algebra c_calculus c_history c_music c_arts c_ICT))
(check-sat)
(get-model)
