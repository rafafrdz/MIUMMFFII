(set-option :auto-config false)
(set-option :model true)
(set-option :model.partial false)

(set-option :smt.mbqi false)

(define-sort Str () Int)
(declare-fun strLen (Str) Int)
(declare-fun subString (Str Int Int) Str)
(declare-fun concatString (Str Str) Str)
(define-sort Elt () Int)
(define-sort LSet () (Array Elt Bool))
(define-fun smt_set_emp () LSet ((as const LSet) false))
(define-fun smt_set_sng ((x Elt)) LSet (store ((as const LSet) false) x true))
(define-fun smt_set_mem ((x Elt) (s LSet)) Bool (select s x))
(define-fun smt_set_add ((s LSet) (x Elt)) LSet (store s x true))
(define-fun smt_set_cup ((s1 LSet) (s2 LSet)) LSet ((_ map or) s1 s2))
(define-fun smt_set_cap ((s1 LSet) (s2 LSet)) LSet ((_ map and) s1 s2))
(define-fun smt_set_com ((s LSet)) LSet ((_ map not) s))
(define-fun smt_set_dif ((s1 LSet) (s2 LSet)) LSet (smt_set_cap s1 (smt_set_com s2)))
(define-fun smt_set_sub ((s1 LSet) (s2 LSet)) Bool (= smt_set_emp (smt_set_dif s1 s2)))
(define-sort Map () (Array Elt Elt))
(define-fun smt_map_sel ((m Map) (k Elt)) Elt (select m k))
(define-fun smt_map_sto ((m Map) (k Elt) (v Elt)) Map (store m k v))
(define-fun smt_map_cup ((m1 Map) (m2 Map)) Map ((_ map (+ (Elt Elt) Elt)) m1 m2))
(define-fun smt_map_def ((v Elt)) Map ((as const (Map)) v))
(define-fun bool_to_int ((b Bool)) Int (ite b 1 0))
(define-fun Z3_OP_MUL ((x Int) (y Int)) Int (* x y))
(define-fun Z3_OP_DIV ((x Int) (y Int)) Int (div x y))
(declare-fun VV$35$$35$F$35$$35$28 () Int)
(declare-fun GHC.Base.id () Int)
(declare-fun fix$36$$36$krep_a3no () Int)
(declare-fun cast_as_int () Int)
(declare-fun VV$35$$35$F$35$$35$31 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806771$35$$35$d3qr () Int)
(declare-fun GHC.Real.rem () Int)
(declare-fun GHC.List.init () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806779$35$$35$d3qz () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806799$35$$35$d3qT () Int)
(declare-fun lq_tmp$36$x$35$$35$1381 () Int)
(declare-fun addrLen () Int)
(declare-fun fix$36$$36$dOrd_a3mm () Int)
(declare-fun papp5 () Int)
(declare-fun GHC.List.iterate () Int)
(declare-fun VV$35$$35$F$35$$35$13 () Int)
(declare-fun x_Tuple21 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806791$35$$35$d3qL () Int)
(declare-fun VV$35$$35$F$35$$35$57 () Str)
(declare-fun GHC.Classes.$61$$61$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806793$35$$35$d3qN () Int)
(declare-fun GHC.Types.C$35$ () Int)
(declare-fun GHC.List.drop () Int)
(declare-fun lq_tmp$36$x$35$$35$1191 () Int)
(declare-fun VV$35$$35$F$35$$35$18 () Int)
(declare-fun lit$36$src$47$Scratch$47$Sample1.hs$58$48$58$1$45$23$124$function$32$getKey () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792806752$35$$35$d3q8 () Str)
(declare-fun lq_karg$36$ds_d3oT$35$$35$k_$35$$35$1609 () Int)
(declare-fun VV$35$$35$F$35$$35$23 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806753$35$$35$d3q9 () Str)
(declare-fun Data.Foldable.length () Int)
(declare-fun x_Tuple33 () Int)
(declare-fun lq_tmp$36$x$35$$35$1247 () Int)
(declare-fun lit$36$$39$Empty () Str)
(declare-fun GHC.Types.LT () Int)
(declare-fun GHC.List.replicate () Int)
(declare-fun GHC.List.zipWith () Int)
(declare-fun lq_tmp$36$x$35$$35$725 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806787$35$$35$d3qH () Int)
(declare-fun GHC.Classes.$62$$61$ () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792806803$35$$35$d3qX$35$$35$k_$35$$35$1587 () Bool)
(declare-fun ds_d3ns () Int)
(declare-fun GHC.Num.fromInteger () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806790$35$$35$d3qK () Int)
(declare-fun papp3 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806800$35$$35$d3qU () Int)
(declare-fun GHC.List.span () Int)
(declare-fun fix$36$$36$dOrd_a3mK () Int)
(declare-fun GHC.Classes.$62$ () Int)
(declare-fun Scratch.Sample1.getKey () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806755$35$$35$d3qb () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792806802$35$$35$d3qW () Bool)
(declare-fun GHC.Types.False () Bool)
(declare-fun GHC.List.scanr1 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806798$35$$35$d3qS () Int)
(declare-fun lq_karg$36$VV$35$$35$1327$35$$35$k_$35$$35$1328 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806794$35$$35$d3qO () Str)
(declare-fun ds_d3pJ () Int)
(declare-fun GHC.Types.$58$ () Int)
(declare-fun lq_tmp$36$x$35$$35$1131 () Int)
(declare-fun GHC.Real.div () Int)
(declare-fun GHC.List.scanl () Int)
(declare-fun lit$36$error () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792806827$35$$35$d3rl () Int)
(declare-fun GHC.Tuple.$40$$44$$44$$41$ () Int)
(declare-fun papp4 () Int)
(declare-fun GHC.Types.Module () Int)
(declare-fun GHC.List.zip () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806766$35$$35$d3qm () Int)
(declare-fun lq_tmp$36$x$35$$35$1308 () Int)
(declare-fun lq_tmp$36$x$35$$35$1784 () Int)
(declare-fun VV$35$$35$F$35$$35$29 () Int)
(declare-fun GHC.Tuple.$40$$41$ () Int)
(declare-fun fix$36$$36$krep_a3nn () Int)
(declare-fun GHC.Types.I$35$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806762$35$$35$d3qi () Int)
(declare-fun GHC.Stack.Types.SrcLoc () Int)
(declare-fun GHC.Num.$36$fNumInt () Int)
(declare-fun GHC.CString.unpackCString$35$ () Int)
(declare-fun VV$35$$35$F$35$$35$30 () Str)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792806796$35$$35$d3qQ$35$$35$k_$35$$35$1609 () Int)
(declare-fun GHC.Types.KindRepFun () Int)
(declare-fun lq_karg$36$ds_d3oS$35$$35$k_$35$$35$1609 () Int)
(declare-fun lq_karg$36$a$35$$35$a3kD$35$$35$k_$35$$35$1374 () Int)
(declare-fun GHC.Types.KindRepTYPE () Int)
(declare-fun GHC.List.dropWhile () Int)
(declare-fun lq_tmp$36$x$35$$35$1161 () Int)
(declare-fun lit$36$$39$Skew () Str)
(declare-fun b$35$$35$a3kC () Int)
(declare-fun autolen () Int)
(declare-fun lq_karg$36$c$35$$35$a3kF$35$$35$k_$35$$35$1374 () Int)
(declare-fun lq_karg$36$ds_d3nJ$35$$35$k_$35$$35$1609 () Int)
(declare-fun Data.Foldable.null () Int)
(declare-fun lq_karg$36$Scratch.Sample1.algo$35$$35$k_$35$$35$1587 () Int)
(declare-fun lq_karg$36$ds_d3oV$35$$35$k_$35$$35$1587 () Int)
(declare-fun GHC.Integer.Type.$36$WJn$35$ () Int)
(declare-fun GHC.Real.$94$ () Int)
(declare-fun head () Int)
(declare-fun GHC.Real.mod () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806805$35$$35$d3qZ () Int)
(declare-fun lq_karg$36$k2$35$$35$a3kN$35$$35$k_$35$$35$1587 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806777$35$$35$d3qx () Int)
(declare-fun lit$36$Scratch.Sample1 () Str)
(declare-fun ds_d3nI () Int)
(declare-fun VV$35$$35$F$35$$35$24 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806758$35$$35$d3qe () Str)
(declare-fun lq_tmp$36$x$35$$35$1184 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806789$35$$35$d3qJ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806781$35$$35$d3qB () Int)
(declare-fun GHC.Types.$36$WKindRepTYPE () Int)
(declare-fun GHC.Real.divMod () Int)
(declare-fun Scratch.Sample1.sLeft () Int)
(declare-fun GHC.Integer.Type.Jn$35$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806785$35$$35$d3qF () Int)
(declare-fun lq_tmp$36$x$35$$35$1757 () Int)
(declare-fun GHC.Classes.compare () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806751$35$$35$d3q7 () Str)
(declare-fun Scratch.Sample1.sk () Int)
(declare-fun papp2 () Int)
(declare-fun ds_d3pl () Int)
(declare-fun k$35$$35$a3kA () Int)
(declare-fun GHC.Real.toInteger () Int)
(declare-fun GHC.Real.quotRem () Int)
(declare-fun Scratch.Sample1.algo () Int)
(declare-fun GHC.Stack.Types.EmptyCallStack () Int)
(declare-fun GHC.Types.krep$36$$42$Arr$42$ () Int)
(declare-fun GHC.Stack.Types.emptyCallStack () Int)
(declare-fun GHC.List.reverse () Int)
(declare-fun fix$36$$36$krep_a3nm () Int)
(declare-fun GHC.Integer.Type.$36$WJp$35$ () Int)
(declare-fun lq_karg$36$ds_d3ns$35$$35$k_$35$$35$1374 () Int)
(declare-fun lq_tmp$36$x$35$$35$1154 () Int)
(declare-fun Scratch.Sample1.Empty () Int)
(declare-fun lq_tmp$36$x$35$$35$768 () Int)
(declare-fun Control.Exception.Base.patError () Int)
(declare-fun GHC.List.filter () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806757$35$$35$d3qd () Str)
(declare-fun ds_d3pI () Int)
(declare-fun fromJust () Int)
(declare-fun GHC.Types.KindRepTyConApp () Int)
(declare-fun GHC.List.cycle () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806809$35$$35$d3r3 () Int)
(declare-fun k2$35$$35$a3kN () Int)
(declare-fun GHC.List.$33$$33$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806770$35$$35$d3qq () Int)
(declare-fun GHC.List.tail () Int)
(declare-fun papp7 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806778$35$$35$d3qy () Int)
(declare-fun VV$35$$35$F$35$$35$11 () Int)
(declare-fun GHC.Classes.$47$$61$ () Int)
(declare-fun lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive () Str)
(declare-fun lq_karg$36$ds_d3oR$35$$35$k_$35$$35$1609 () Int)
(declare-fun GHC.List.break () Int)
(declare-fun GHC.Types.True () Bool)
(declare-fun Scratch.Sample1.joinSk () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806815$35$$35$d3r9 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806760$35$$35$d3qg () Int)
(declare-fun VV$35$$35$F$35$$35$25 () Int)
(declare-fun GHC.Types.$91$$93$ () Int)
(declare-fun GHC.List.splitAt () Int)
(declare-fun Scratch.Sample1.isNonSkewEmpty () Int)
(declare-fun GHC.Base.$43$$43$ () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792806802$35$$35$d3qW$35$$35$k_$35$$35$1609 () Bool)
(declare-fun Scratch.Sample1.Skew () Int)
(declare-fun GHC.Real.$58$$37$ () Int)
(declare-fun lq_tmp$36$x$35$$35$970 () Int)
(declare-fun lq_tmp$36$x$35$$35$886 () Int)
(declare-fun lq_tmp$36$x$35$$35$1124 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806768$35$$35$d3qo () Int)
(declare-fun GHC.Tuple.$40$$44$$41$ () Int)
(declare-fun GHC.Real.quot () Int)
(declare-fun GHC.Real.$47$ () Int)
(declare-fun lq_tmp$36$x$35$$35$726 () Int)
(declare-fun fldList () Int)
(declare-fun lq_karg$36$VV$35$$35$1586$35$$35$k_$35$$35$1587 () Int)
(declare-fun GHC.Classes.$38$$38$ () Int)
(declare-fun ds_d3oT () Int)
(declare-fun lq_karg$36$ds_d3oR$35$$35$k_$35$$35$1587 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806803$35$$35$d3qX () Bool)
(declare-fun ds_d3p3 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806795$35$$35$d3qP () Int)
(declare-fun GHC.Types.GT () Int)
(declare-fun GHC.Classes.C$58$IP () Int)
(declare-fun GHC.Classes.$124$$124$ () Int)
(declare-fun lq_tmp$36$x$35$$35$1064 () Int)
(declare-fun Data.Either.Left () Int)
(declare-fun GHC.List.last () Int)
(declare-fun a$35$$35$a3kD () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792806802$35$$35$d3qW$35$$35$k_$35$$35$1587 () Bool)
(declare-fun lq_tmp$36$x$35$$35$762 () Int)
(declare-fun c$35$$35$a3kF () Int)
(declare-fun lq_karg$36$VV$35$$35$1608$35$$35$k_$35$$35$1609 () Int)
(declare-fun GHC.Integer.Type.S$35$ () Int)
(declare-fun lq_tmp$36$x$35$$35$1640 () Int)
(declare-fun GHC.List.scanl1 () Int)
(declare-fun Data.Either.Right () Int)
(declare-fun lq_karg$36$ds_d3ns$35$$35$k_$35$$35$1328 () Int)
(declare-fun ds_d3pH () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806769$35$$35$d3qp () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806767$35$$35$d3qn () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792806803$35$$35$d3qX$35$$35$k_$35$$35$1609 () Bool)
(declare-fun lit$36$SkewH () Str)
(declare-fun GHC.Num.$45$ () Int)
(declare-fun len () Int)
(declare-fun papp6 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806783$35$$35$d3qD () Int)
(declare-fun GHC.Base.. () Int)
(declare-fun x_Tuple22 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806763$35$$35$d3qj () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806761$35$$35$d3qh () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806765$35$$35$d3ql () Int)
(declare-fun ds_d3pX () Int)
(declare-fun lq_karg$36$VV$35$$35$607$35$$35$k_$35$$35$608 () Str)
(declare-fun VV$35$$35$F$35$$35$26 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806804$35$$35$d3qY () Int)
(declare-fun GHC.Types.KindRepTypeLitS () Int)
(declare-fun a$35$$35$a3kB () Int)
(declare-fun GHC.Real.$36$W$58$$37$ () Int)
(declare-fun lq_tmp$36$x$35$$35$1639 () Int)
(declare-fun Scratch.Sample1.refineSkew () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806759$35$$35$d3qf () Int)
(declare-fun fix$36$$36$dOrd_a3ms () Int)
(declare-fun GHC.Real.fromRational () Int)
(declare-fun isJust () Int)
(declare-fun ds_d3oR () Int)
(declare-fun lq_karg$36$ds_d3oT$35$$35$k_$35$$35$1587 () Int)
(declare-fun lq_karg$36$Scratch.Sample1.algo$35$$35$k_$35$$35$1374 () Int)
(declare-fun lq_karg$36$b$35$$35$a3kE$35$$35$k_$35$$35$1374 () Int)
(declare-fun GHC.List.takeWhile () Int)
(declare-fun GHC.Types.TrNameD () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806807$35$$35$d3r1 () Int)
(declare-fun lq_karg$36$VV$35$$35$1373$35$$35$k_$35$$35$1374 () Int)
(declare-fun lq_karg$36$ds_d3oS$35$$35$k_$35$$35$1587 () Int)
(declare-fun GHC.Types.KindRepVar () Int)
(declare-fun GHC.Stack.Types.pushCallStack () Int)
(declare-fun lq_karg$36$k2$35$$35$a3kN$35$$35$k_$35$$35$1609 () Int)
(declare-fun GHC.Types.KindRepTypeLitD () Int)
(declare-fun x_Tuple31 () Int)
(declare-fun lq_tmp$36$x$35$$35$1047 () Int)
(declare-fun GHC.Integer.Type.Jp$35$ () Int)
(declare-fun lq_tmp$36$x$35$$35$1740 () Int)
(declare-fun lq_tmp$36$x$35$$35$1641 () Int)
(declare-fun lq_karg$36$ds_d3nJ$35$$35$k_$35$$35$1587 () Int)
(declare-fun GHC.IO.Exception.IOError () Int)
(declare-fun lq_tmp$36$x$35$$35$727 () Int)
(declare-fun GHC.List.take () Int)
(declare-fun ds_d3oU () Int)
(declare-fun GHC.Stack.Types.PushCallStack () Int)
(declare-fun GHC.Classes.$60$$61$ () Int)
(declare-fun GHC.Types.TrNameS () Int)
(declare-fun GHC.Enum.C$58$Bounded () Int)
(declare-fun GHC.Base.map () Int)
(declare-fun lq_tmp$36$x$35$$35$604 () Int)
(declare-fun lq_karg$36$Scratch.Sample1.algo$35$$35$k_$35$$35$1609 () Int)
(declare-fun lq_karg$36$ds_d3oV$35$$35$k_$35$$35$1609 () Int)
(declare-fun GHC.Base.$36$ () Int)
(declare-fun papp1 () Int)
(declare-fun VV$35$$35$F$35$$35$17 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792806796$35$$35$d3qQ$35$$35$k_$35$$35$1587 () Int)
(declare-fun VV$35$$35$F$35$$35$53 () Str)
(declare-fun lq_tmp$36$x$35$$35$861 () Int)
(declare-fun GHC.Classes.$60$ () Int)
(declare-fun tail () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806756$35$$35$d3qc () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792806801$35$$35$d3qV () Int)
(declare-fun cast_as () Int)
(declare-fun lq_tmp$36$x$35$$35$1071 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806754$35$$35$d3qa () Str)
(declare-fun GHC.Types.TyCon () Int)
(declare-fun GHC.Stack.Types.FreezeCallStack () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792806795$35$$35$d3qP$35$$35$k_$35$$35$1374 () Int)
(declare-fun Scratch.Sample1.sRight () Int)
(declare-fun GHC.Num.$42$ () Int)
(declare-fun lq_karg$36$Scratch.Sample1.algo$35$$35$k_$35$$35$1328 () Int)
(declare-fun ds_d3oS () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806822$35$$35$d3rg () Int)
(declare-fun lq_karg$36$ds_d3nI$35$$35$k_$35$$35$1609 () Int)
(declare-fun lq_tmp$36$x$35$$35$1094 () Int)
(declare-fun GHC.Real.recip () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792806801$35$$35$d3qV$35$$35$k_$35$$35$1609 () Int)
(declare-fun ds_d3nJ () Int)
(declare-fun GHC.Maybe.Nothing () Int)
(declare-fun VV$35$$35$F$35$$35$27 () Int)
(declare-fun lq_karg$36$ds_d3oU$35$$35$k_$35$$35$1587 () Int)
(declare-fun Scratch.Sample1.die () Int)
(declare-fun lq_tmp$36$x$35$$35$815 () Int)
(declare-fun GHC.Types.EQ () Int)
(declare-fun lq_tmp$36$x$35$$35$1764 () Int)
(declare-fun GHC.List.scanr () Int)
(declare-fun totalityError () Int)
(declare-fun GHC.Num.negate () Int)
(declare-fun lq_tmp$36$x$35$$35$1101 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792806801$35$$35$d3qV$35$$35$k_$35$$35$1587 () Int)
(declare-fun ds_d3oV () Int)
(declare-fun GHC.Real.fromIntegral () Int)
(declare-fun GHC.Maybe.Just () Int)
(declare-fun b$35$$35$a3kE () Int)
(declare-fun GHC.Classes.min () Int)
(declare-fun fix$36$$36$dIP_a3n4 () Int)
(declare-fun lit$36$LH$45$verificacion$45$asistida$45$0.1.0.0$45$5NHMYuhgw29Gnkg9iLcbdC () Str)
(declare-fun Scratch.Sample1.size () Int)
(declare-fun lq_karg$36$ds_d3oU$35$$35$k_$35$$35$1609 () Int)
(declare-fun GHC.Types.$36$WKindRepVar () Int)
(declare-fun fix$36$$36$dOrd_a3mG () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806796$35$$35$d3qQ () Int)
(declare-fun lq_karg$36$ds_d3nI$35$$35$k_$35$$35$1587 () Int)
(declare-fun x_Tuple32 () Int)
(declare-fun GHC.List.repeat () Int)
(declare-fun lit$36$src$47$Scratch$47$Sample1.hs () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792806782$35$$35$d3qC () Int)
(declare-fun GHC.Classes.not () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792806795$35$$35$d3qP$35$$35$k_$35$$35$1328 () Int)
(declare-fun GHC.Num.$43$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806788$35$$35$d3qI () Int)
(declare-fun Data.Tuple.fst () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806786$35$$35$d3qG () Int)
(declare-fun GHC.Types.KindRepApp () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806764$35$$35$d3qk () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806784$35$$35$d3qE () Int)
(declare-fun lq_tmp$36$x$35$$35$996 () Int)
(declare-fun VV$35$$35$F$35$$35$16 () Int)
(declare-fun GHC.Err.error () Int)
(declare-fun snd () Int)
(declare-fun fst () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806780$35$$35$d3qA () Int)
(declare-fun Data.Tuple.snd () Int)
(declare-fun msg$35$$35$a3ky () Str)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792806804$35$$35$d3qY$35$$35$k_$35$$35$1609 () Int)
(declare-fun apply$35$$35$13 (Int (_ BitVec 32)) Bool)
(declare-fun apply$35$$35$9 (Int Str) Bool)
(declare-fun apply$35$$35$6 (Int Bool) Str)
(declare-fun apply$35$$35$11 (Int Str) (_ BitVec 32))
(declare-fun apply$35$$35$15 (Int (_ BitVec 32)) (_ BitVec 32))
(declare-fun apply$35$$35$0 (Int Int) Int)
(declare-fun apply$35$$35$8 (Int Str) Int)
(declare-fun apply$35$$35$1 (Int Int) Bool)
(declare-fun apply$35$$35$7 (Int Bool) (_ BitVec 32))
(declare-fun apply$35$$35$14 (Int (_ BitVec 32)) Str)
(declare-fun apply$35$$35$10 (Int Str) Str)
(declare-fun apply$35$$35$5 (Int Bool) Bool)
(declare-fun apply$35$$35$2 (Int Int) Str)
(declare-fun apply$35$$35$12 (Int (_ BitVec 32)) Int)
(declare-fun apply$35$$35$3 (Int Int) (_ BitVec 32))
(declare-fun apply$35$$35$4 (Int Bool) Int)
(declare-fun coerce$35$$35$13 ((_ BitVec 32)) Bool)
(declare-fun coerce$35$$35$9 (Str) Bool)
(declare-fun coerce$35$$35$6 (Bool) Str)
(declare-fun coerce$35$$35$11 (Str) (_ BitVec 32))
(declare-fun coerce$35$$35$15 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun coerce$35$$35$0 (Int) Int)
(declare-fun coerce$35$$35$8 (Str) Int)
(declare-fun coerce$35$$35$1 (Int) Bool)
(declare-fun coerce$35$$35$7 (Bool) (_ BitVec 32))
(declare-fun coerce$35$$35$14 ((_ BitVec 32)) Str)
(declare-fun coerce$35$$35$10 (Str) Str)
(declare-fun coerce$35$$35$5 (Bool) Bool)
(declare-fun coerce$35$$35$2 (Int) Str)
(declare-fun coerce$35$$35$12 ((_ BitVec 32)) Int)
(declare-fun coerce$35$$35$3 (Int) (_ BitVec 32))
(declare-fun coerce$35$$35$4 (Bool) Int)
(declare-fun smt_lambda$35$$35$13 ((_ BitVec 32) Bool) Int)
(declare-fun smt_lambda$35$$35$9 (Str Bool) Int)
(declare-fun smt_lambda$35$$35$6 (Bool Str) Int)
(declare-fun smt_lambda$35$$35$11 (Str (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$15 ((_ BitVec 32) (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$0 (Int Int) Int)
(declare-fun smt_lambda$35$$35$8 (Str Int) Int)
(declare-fun smt_lambda$35$$35$1 (Int Bool) Int)
(declare-fun smt_lambda$35$$35$7 (Bool (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$14 ((_ BitVec 32) Str) Int)
(declare-fun smt_lambda$35$$35$10 (Str Str) Int)
(declare-fun smt_lambda$35$$35$5 (Bool Bool) Int)
(declare-fun smt_lambda$35$$35$2 (Int Str) Int)
(declare-fun smt_lambda$35$$35$12 ((_ BitVec 32) Int) Int)
(declare-fun smt_lambda$35$$35$3 (Int (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$4 (Bool Int) Int)
(declare-fun lam_arg$35$$35$1$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$2$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$3$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$4$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$5$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$6$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$7$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$1$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$2$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$3$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$4$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$5$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$6$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$7$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$1$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$2$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$3$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$4$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$5$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$6$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$7$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$1$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$2$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$3$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$4$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$5$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$6$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$7$35$$35$4 () Bool)


(assert (distinct lit$36$src$47$Scratch$47$Sample1.hs lit$36$LH$45$verificacion$45$asistida$45$0.1.0.0$45$5NHMYuhgw29Gnkg9iLcbdC lit$36$SkewH lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive lit$36$Scratch.Sample1 lit$36$$39$Skew lit$36$error lit$36$$39$Empty lit$36$src$47$Scratch$47$Sample1.hs$58$48$58$1$45$23$124$function$32$getKey))

(assert (distinct GHC.Types.True GHC.Types.False))
(assert (distinct GHC.Types.EQ GHC.Types.GT GHC.Types.LT))
(assert (= (strLen lit$36$src$47$Scratch$47$Sample1.hs$58$48$58$1$45$23$124$function$32$getKey) 46))
(assert (= (strLen lit$36$$39$Empty) 6))
(assert (= (strLen lit$36$error) 5))
(assert (= (strLen lit$36$$39$Skew) 5))
(assert (= (strLen lit$36$Scratch.Sample1) 15))
(assert (= (strLen lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive) 36))
(assert (= (strLen lit$36$SkewH) 5))
(assert (= (strLen lit$36$LH$45$verificacion$45$asistida$45$0.1.0.0$45$5NHMYuhgw29Gnkg9iLcbdC) 55))
(assert (= (strLen lit$36$src$47$Scratch$47$Sample1.hs) 22))
(push 1)
(define-fun b$36$$35$$35$336 () Bool (and (= (apply$35$$35$0 (as Scratch.Sample1.size Int) VV$35$$35$F$35$$35$31) (+ 1 (apply$35$$35$0 (as Scratch.Sample1.size Int) lq_anf$36$$35$$35$7205759403792806791$35$$35$d3qL))) (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$31) lq_anf$36$$35$$35$7205759403792806778$35$$35$d3qy) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$31) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792806791$35$$35$d3qL))) (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$31) lq_anf$36$$35$$35$7205759403792806791$35$$35$d3qL) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$31) 0)))
(define-fun b$36$$35$$35$128 () Bool (= lq_anf$36$$35$$35$7205759403792806764$35$$35$d3qk lq_anf$36$$35$$35$7205759403792806763$35$$35$d3qj))
(define-fun b$36$$35$$35$160 () Bool (= lq_anf$36$$35$$35$7205759403792806784$35$$35$d3qE lq_anf$36$$35$$35$7205759403792806783$35$$35$d3qD))
(define-fun b$36$$35$$35$224 () Bool (= lq_anf$36$$35$$35$7205759403792806796$35$$35$d3qQ ds_d3nI))
(define-fun b$36$$35$$35$129 () Bool (= lq_anf$36$$35$$35$7205759403792806765$35$$35$d3ql 20))
(define-fun b$36$$35$$35$161 () Bool (= lq_anf$36$$35$$35$7205759403792806785$35$$35$d3qF 5))
(define-fun b$36$$35$$35$241 () Bool (and (= lq_anf$36$$35$$35$7205759403792806803$35$$35$d3qX (<= ds_d3oR k2$35$$35$a3kN)) (= lq_anf$36$$35$$35$7205759403792806803$35$$35$d3qX lq_anf$36$$35$$35$7205759403792806802$35$$35$d3qW)))
(define-fun b$36$$35$$35$322 () Bool (<= ds_d3oR VV$35$$35$F$35$$35$17))
(define-fun b$36$$35$$35$130 () Bool (= lq_anf$36$$35$$35$7205759403792806766$35$$35$d3qm lq_anf$36$$35$$35$7205759403792806765$35$$35$d3ql))
(define-fun b$36$$35$$35$162 () Bool (= lq_anf$36$$35$$35$7205759403792806786$35$$35$d3qG lq_anf$36$$35$$35$7205759403792806785$35$$35$d3qF))
(define-fun b$36$$35$$35$242 () Bool (and lq_anf$36$$35$$35$7205759403792806803$35$$35$d3qX (= lq_anf$36$$35$$35$7205759403792806803$35$$35$d3qX (<= ds_d3oR k2$35$$35$a3kN)) (= lq_anf$36$$35$$35$7205759403792806803$35$$35$d3qX lq_anf$36$$35$$35$7205759403792806802$35$$35$d3qW)))
(define-fun b$36$$35$$35$115 () Bool (= lq_anf$36$$35$$35$7205759403792806751$35$$35$d3q7 lit$36$error))
(define-fun b$36$$35$$35$324 () Bool false)
(define-fun b$36$$35$$35$116 () Bool (and (= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792806752$35$$35$d3q8) (strLen lq_anf$36$$35$$35$7205759403792806751$35$$35$d3q7)) (>= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792806752$35$$35$d3q8) 0) (= lq_anf$36$$35$$35$7205759403792806752$35$$35$d3q8 lq_anf$36$$35$$35$7205759403792806751$35$$35$d3q7)))
(define-fun b$36$$35$$35$164 () Bool (and (= (apply$35$$35$0 (as Scratch.Sample1.size Int) lq_anf$36$$35$$35$7205759403792806787$35$$35$d3qH) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792806787$35$$35$d3qH) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792806787$35$$35$d3qH) 0)))
(define-fun b$36$$35$$35$228 () Bool (and (apply$35$$35$1 (as Scratch.Sample1.isNonSkewEmpty Int) lq_anf$36$$35$$35$7205759403792806796$35$$35$d3qQ) (= lq_anf$36$$35$$35$7205759403792806796$35$$35$d3qQ ds_d3nI) (= lq_anf$36$$35$$35$7205759403792806796$35$$35$d3qQ (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Scratch.Sample1.Skew Int) ds_d3oR) ds_d3oS) ds_d3oT)) (= (apply$35$$35$0 (as Scratch.Sample1.getKey Int) lq_anf$36$$35$$35$7205759403792806796$35$$35$d3qQ) ds_d3oR) (= (apply$35$$35$0 (as Scratch.Sample1.sLeft Int) lq_anf$36$$35$$35$7205759403792806796$35$$35$d3qQ) ds_d3oS) (= (apply$35$$35$0 (as Scratch.Sample1.sRight Int) lq_anf$36$$35$$35$7205759403792806796$35$$35$d3qQ) ds_d3oT) (= (apply$35$$35$0 (as Scratch.Sample1.sk Int) lq_anf$36$$35$$35$7205759403792806796$35$$35$d3qQ) ds_d3oR)))
(define-fun b$36$$35$$35$117 () Bool (= lq_anf$36$$35$$35$7205759403792806753$35$$35$d3q9 lit$36$LH$45$verificacion$45$asistida$45$0.1.0.0$45$5NHMYuhgw29Gnkg9iLcbdC))
(define-fun b$36$$35$$35$133 () Bool (and (= (apply$35$$35$2 (as fst Int) lq_anf$36$$35$$35$7205759403792806768$35$$35$d3qo) lq_anf$36$$35$$35$7205759403792806752$35$$35$d3q8) (= (apply$35$$35$0 (as snd Int) lq_anf$36$$35$$35$7205759403792806768$35$$35$d3qo) lq_anf$36$$35$$35$7205759403792806767$35$$35$d3qn) (= (apply$35$$35$2 (as x_Tuple21 Int) lq_anf$36$$35$$35$7205759403792806768$35$$35$d3qo) lq_anf$36$$35$$35$7205759403792806752$35$$35$d3q8) (= (apply$35$$35$0 (as x_Tuple22 Int) lq_anf$36$$35$$35$7205759403792806768$35$$35$d3qo) lq_anf$36$$35$$35$7205759403792806767$35$$35$d3qn)))
(define-fun b$36$$35$$35$213 () Bool (= lq_anf$36$$35$$35$7205759403792806796$35$$35$d3qQ ds_d3nI))
(define-fun b$36$$35$$35$229 () Bool (= lq_anf$36$$35$$35$7205759403792806801$35$$35$d3qV ds_d3nJ))
(define-fun b$36$$35$$35$326 () Bool (<= a$35$$35$a3kD VV$35$$35$F$35$$35$24))
(define-fun b$36$$35$$35$118 () Bool (and (= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792806754$35$$35$d3qa) (strLen lq_anf$36$$35$$35$7205759403792806753$35$$35$d3q9)) (>= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792806754$35$$35$d3qa) 0) (= lq_anf$36$$35$$35$7205759403792806754$35$$35$d3qa lq_anf$36$$35$$35$7205759403792806753$35$$35$d3q9)))
(define-fun b$36$$35$$35$166 () Bool (and (= (apply$35$$35$0 (as Scratch.Sample1.size Int) lq_anf$36$$35$$35$7205759403792806788$35$$35$d3qI) (+ 1 (apply$35$$35$0 (as Scratch.Sample1.size Int) lq_anf$36$$35$$35$7205759403792806787$35$$35$d3qH))) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792806788$35$$35$d3qI) lq_anf$36$$35$$35$7205759403792806786$35$$35$d3qG) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792806788$35$$35$d3qI) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792806787$35$$35$d3qH))) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792806788$35$$35$d3qI) lq_anf$36$$35$$35$7205759403792806787$35$$35$d3qH) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792806788$35$$35$d3qI) 0)))
(define-fun b$36$$35$$35$327 () Bool (<= a$35$$35$a3kD VV$35$$35$F$35$$35$25))
(define-fun b$36$$35$$35$119 () Bool (= lq_anf$36$$35$$35$7205759403792806755$35$$35$d3qb lit$36$Scratch.Sample1))
(define-fun b$36$$35$$35$135 () Bool (= lq_anf$36$$35$$35$7205759403792806770$35$$35$d3qq lq_anf$36$$35$$35$7205759403792806769$35$$35$d3qp))
(define-fun b$36$$35$$35$120 () Bool (and (= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792806756$35$$35$d3qc) (strLen lq_anf$36$$35$$35$7205759403792806755$35$$35$d3qb)) (>= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792806756$35$$35$d3qc) 0) (= lq_anf$36$$35$$35$7205759403792806756$35$$35$d3qc lq_anf$36$$35$$35$7205759403792806755$35$$35$d3qb)))
(define-fun b$36$$35$$35$168 () Bool (and (= (apply$35$$35$0 (as Scratch.Sample1.size Int) lq_anf$36$$35$$35$7205759403792806789$35$$35$d3qJ) (+ 1 (apply$35$$35$0 (as Scratch.Sample1.size Int) lq_anf$36$$35$$35$7205759403792806788$35$$35$d3qI))) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792806789$35$$35$d3qJ) lq_anf$36$$35$$35$7205759403792806784$35$$35$d3qE) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792806789$35$$35$d3qJ) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792806788$35$$35$d3qI))) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792806789$35$$35$d3qJ) lq_anf$36$$35$$35$7205759403792806788$35$$35$d3qI) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792806789$35$$35$d3qJ) 0)))
(define-fun b$36$$35$$35$200 () Bool (= lq_anf$36$$35$$35$7205759403792806795$35$$35$d3qP ds_d3ns))
(define-fun b$36$$35$$35$232 () Bool (= lq_anf$36$$35$$35$7205759403792806801$35$$35$d3qV ds_d3nJ))
(define-fun b$36$$35$$35$41 () Bool (not GHC.Types.False))
(define-fun b$36$$35$$35$329 () Bool (<= a$35$$35$a3kD VV$35$$35$F$35$$35$26))
(define-fun b$36$$35$$35$121 () Bool (= lq_anf$36$$35$$35$7205759403792806757$35$$35$d3qd lit$36$src$47$Scratch$47$Sample1.hs))
(define-fun b$36$$35$$35$153 () Bool (= lq_anf$36$$35$$35$7205759403792806777$35$$35$d3qx 1))
(define-fun b$36$$35$$35$201 () Bool (= lq_anf$36$$35$$35$7205759403792806795$35$$35$d3qP ds_d3ns))
(define-fun b$36$$35$$35$330 () Bool (<= ds_d3oR VV$35$$35$F$35$$35$11))
(define-fun b$36$$35$$35$122 () Bool (and (= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792806758$35$$35$d3qe) (strLen lq_anf$36$$35$$35$7205759403792806757$35$$35$d3qd)) (>= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792806758$35$$35$d3qe) 0) (= lq_anf$36$$35$$35$7205759403792806758$35$$35$d3qe lq_anf$36$$35$$35$7205759403792806757$35$$35$d3qd)))
(define-fun b$36$$35$$35$154 () Bool (= lq_anf$36$$35$$35$7205759403792806778$35$$35$d3qy lq_anf$36$$35$$35$7205759403792806777$35$$35$d3qx))
(define-fun b$36$$35$$35$170 () Bool (and (= (apply$35$$35$0 (as Scratch.Sample1.size Int) lq_anf$36$$35$$35$7205759403792806790$35$$35$d3qK) (+ 1 (apply$35$$35$0 (as Scratch.Sample1.size Int) lq_anf$36$$35$$35$7205759403792806789$35$$35$d3qJ))) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792806790$35$$35$d3qK) lq_anf$36$$35$$35$7205759403792806782$35$$35$d3qC) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792806790$35$$35$d3qK) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792806789$35$$35$d3qJ))) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792806790$35$$35$d3qK) lq_anf$36$$35$$35$7205759403792806789$35$$35$d3qJ) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792806790$35$$35$d3qK) 0)))
(define-fun b$36$$35$$35$202 () Bool (and (not (apply$35$$35$1 (as Scratch.Sample1.isNonSkewEmpty Int) lq_anf$36$$35$$35$7205759403792806795$35$$35$d3qP)) (= lq_anf$36$$35$$35$7205759403792806795$35$$35$d3qP (as Scratch.Sample1.Empty Int)) (= lq_anf$36$$35$$35$7205759403792806795$35$$35$d3qP ds_d3ns)))
(define-fun b$36$$35$$35$331 () Bool (<= a$35$$35$a3kD VV$35$$35$F$35$$35$27))
(define-fun b$36$$35$$35$123 () Bool (= lq_anf$36$$35$$35$7205759403792806759$35$$35$d3qf 9))
(define-fun b$36$$35$$35$155 () Bool (= lq_anf$36$$35$$35$7205759403792806779$35$$35$d3qz 2))
(define-fun b$36$$35$$35$187 () Bool (apply$35$$35$1 (as Scratch.Sample1.isNonSkewEmpty Int) ds_d3p3))
(define-fun b$36$$35$$35$203 () Bool (= lq_anf$36$$35$$35$7205759403792806795$35$$35$d3qP ds_d3ns))
(define-fun b$36$$35$$35$44 () Bool GHC.Types.True)
(define-fun b$36$$35$$35$332 () Bool (= VV$35$$35$F$35$$35$28 a$35$$35$a3kD))
(define-fun b$36$$35$$35$124 () Bool (= lq_anf$36$$35$$35$7205759403792806760$35$$35$d3qg lq_anf$36$$35$$35$7205759403792806759$35$$35$d3qf))
(define-fun b$36$$35$$35$156 () Bool (= lq_anf$36$$35$$35$7205759403792806780$35$$35$d3qA lq_anf$36$$35$$35$7205759403792806779$35$$35$d3qz))
(define-fun b$36$$35$$35$172 () Bool (and (= (apply$35$$35$0 (as Scratch.Sample1.size Int) lq_anf$36$$35$$35$7205759403792806791$35$$35$d3qL) (+ 1 (apply$35$$35$0 (as Scratch.Sample1.size Int) lq_anf$36$$35$$35$7205759403792806790$35$$35$d3qK))) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792806791$35$$35$d3qL) lq_anf$36$$35$$35$7205759403792806780$35$$35$d3qA) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792806791$35$$35$d3qL) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792806790$35$$35$d3qK))) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792806791$35$$35$d3qL) lq_anf$36$$35$$35$7205759403792806790$35$$35$d3qK) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792806791$35$$35$d3qL) 0)))
(define-fun b$36$$35$$35$188 () Bool (and (apply$35$$35$1 (as Scratch.Sample1.isNonSkewEmpty Int) lq_anf$36$$35$$35$7205759403792806793$35$$35$d3qN) (= lq_anf$36$$35$$35$7205759403792806793$35$$35$d3qN ds_d3p3)))
(define-fun b$36$$35$$35$236 () Bool (and (apply$35$$35$1 (as Scratch.Sample1.isNonSkewEmpty Int) lq_anf$36$$35$$35$7205759403792806801$35$$35$d3qV) (= lq_anf$36$$35$$35$7205759403792806801$35$$35$d3qV ds_d3nJ) (= lq_anf$36$$35$$35$7205759403792806801$35$$35$d3qV (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Scratch.Sample1.Skew Int) k2$35$$35$a3kN) ds_d3oU) ds_d3oV)) (= (apply$35$$35$0 (as Scratch.Sample1.getKey Int) lq_anf$36$$35$$35$7205759403792806801$35$$35$d3qV) k2$35$$35$a3kN) (= (apply$35$$35$0 (as Scratch.Sample1.sLeft Int) lq_anf$36$$35$$35$7205759403792806801$35$$35$d3qV) ds_d3oU) (= (apply$35$$35$0 (as Scratch.Sample1.sRight Int) lq_anf$36$$35$$35$7205759403792806801$35$$35$d3qV) ds_d3oV) (= (apply$35$$35$0 (as Scratch.Sample1.sk Int) lq_anf$36$$35$$35$7205759403792806801$35$$35$d3qV) k2$35$$35$a3kN)))
(define-fun b$36$$35$$35$125 () Bool (= lq_anf$36$$35$$35$7205759403792806761$35$$35$d3qh 11))
(define-fun b$36$$35$$35$157 () Bool (= lq_anf$36$$35$$35$7205759403792806781$35$$35$d3qB 3))
(define-fun b$36$$35$$35$189 () Bool (and (apply$35$$35$1 (as Scratch.Sample1.isNonSkewEmpty Int) lq_anf$36$$35$$35$7205759403792806793$35$$35$d3qN) (= lq_anf$36$$35$$35$7205759403792806793$35$$35$d3qN ds_d3p3)))
(define-fun b$36$$35$$35$237 () Bool (= lq_anf$36$$35$$35$7205759403792806802$35$$35$d3qW (<= ds_d3oR k2$35$$35$a3kN)))
(define-fun b$36$$35$$35$126 () Bool (= lq_anf$36$$35$$35$7205759403792806762$35$$35$d3qi lq_anf$36$$35$$35$7205759403792806761$35$$35$d3qh))
(define-fun b$36$$35$$35$158 () Bool (= lq_anf$36$$35$$35$7205759403792806782$35$$35$d3qC lq_anf$36$$35$$35$7205759403792806781$35$$35$d3qB))
(define-fun b$36$$35$$35$174 () Bool (and (>= (apply$35$$35$0 (as len Int) Scratch.Sample1.algo) 0) (< 0 (apply$35$$35$0 (as Scratch.Sample1.size Int) Scratch.Sample1.algo))))
(define-fun b$36$$35$$35$190 () Bool (and (apply$35$$35$1 (as Scratch.Sample1.isNonSkewEmpty Int) lq_anf$36$$35$$35$7205759403792806793$35$$35$d3qN) (not (apply$35$$35$1 (as Scratch.Sample1.isNonSkewEmpty Int) lq_anf$36$$35$$35$7205759403792806793$35$$35$d3qN)) (= lq_anf$36$$35$$35$7205759403792806793$35$$35$d3qN (as Scratch.Sample1.Empty Int)) (= lq_anf$36$$35$$35$7205759403792806793$35$$35$d3qN ds_d3p3)))
(define-fun b$36$$35$$35$238 () Bool (and (= lq_anf$36$$35$$35$7205759403792806803$35$$35$d3qX (<= ds_d3oR k2$35$$35$a3kN)) (= lq_anf$36$$35$$35$7205759403792806803$35$$35$d3qX lq_anf$36$$35$$35$7205759403792806802$35$$35$d3qW)))
(define-fun b$36$$35$$35$335 () Bool (and (= VV$35$$35$F$35$$35$30 lit$36$src$47$Scratch$47$Sample1.hs$58$48$58$1$45$23$124$function$32$getKey) (= VV$35$$35$F$35$$35$30 lq_anf$36$$35$$35$7205759403792806794$35$$35$d3qO)))
(define-fun b$36$$35$$35$127 () Bool (= lq_anf$36$$35$$35$7205759403792806763$35$$35$d3qj 9))
(define-fun b$36$$35$$35$159 () Bool (= lq_anf$36$$35$$35$7205759403792806783$35$$35$d3qD 4))
(define-fun b$36$$35$$35$191 () Bool (= lq_anf$36$$35$$35$7205759403792806794$35$$35$d3qO lit$36$src$47$Scratch$47$Sample1.hs$58$48$58$1$45$23$124$function$32$getKey))
(define-fun b$36$$35$$35$207 () Bool (and (apply$35$$35$1 (as Scratch.Sample1.isNonSkewEmpty Int) lq_anf$36$$35$$35$7205759403792806795$35$$35$d3qP) (= lq_anf$36$$35$$35$7205759403792806795$35$$35$d3qP ds_d3ns) (= lq_anf$36$$35$$35$7205759403792806795$35$$35$d3qP (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Scratch.Sample1.Skew Int) a$35$$35$a3kD) b$35$$35$a3kE) c$35$$35$a3kF)) (= (apply$35$$35$0 (as Scratch.Sample1.getKey Int) lq_anf$36$$35$$35$7205759403792806795$35$$35$d3qP) a$35$$35$a3kD) (= (apply$35$$35$0 (as Scratch.Sample1.sLeft Int) lq_anf$36$$35$$35$7205759403792806795$35$$35$d3qP) b$35$$35$a3kE) (= (apply$35$$35$0 (as Scratch.Sample1.sRight Int) lq_anf$36$$35$$35$7205759403792806795$35$$35$d3qP) c$35$$35$a3kF) (= (apply$35$$35$0 (as Scratch.Sample1.sk Int) lq_anf$36$$35$$35$7205759403792806795$35$$35$d3qP) a$35$$35$a3kD)))
(push 1)
(assert (and true b$36$$35$$35$324 b$36$$35$$35$41 b$36$$35$$35$44))
(push 1)
(assert (not false))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$8 (as Scratch.Sample1.size Int) VV$35$$35$F$35$$35$53) 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$8 (as len Int) VV$35$$35$F$35$$35$53) 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$8 (as len Int) VV$35$$35$F$35$$35$53) 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$8 (as len Int) VV$35$$35$F$35$$35$53) 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
(pop 1)
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
(pop 1)
(push 1)
(push 1)
(assert (and (or (exists ((lq_karg$36$a$35$$35$a3kD$35$$35$k_$35$$35$1374 Int) (lq_karg$36$c$35$$35$a3kF$35$$35$k_$35$$35$1374 Int) (lq_karg$36$ds_d3ns$35$$35$k_$35$$35$1374 Int) (lq_karg$36$Scratch.Sample1.algo$35$$35$k_$35$$35$1374 Int) (lq_karg$36$b$35$$35$a3kE$35$$35$k_$35$$35$1374 Int) (lq_karg$36$VV$35$$35$1373$35$$35$k_$35$$35$1374 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792806795$35$$35$d3qP$35$$35$k_$35$$35$1374 Int)) (and (= lq_karg$36$Scratch.Sample1.algo$35$$35$k_$35$$35$1374 Scratch.Sample1.algo) (= lq_karg$36$VV$35$$35$1373$35$$35$k_$35$$35$1374 VV$35$$35$F$35$$35$23) (= lq_karg$36$a$35$$35$a3kD$35$$35$k_$35$$35$1374 a$35$$35$a3kD) (= lq_karg$36$b$35$$35$a3kE$35$$35$k_$35$$35$1374 b$35$$35$a3kE) (= lq_karg$36$c$35$$35$a3kF$35$$35$k_$35$$35$1374 c$35$$35$a3kF) (= lq_karg$36$ds_d3ns$35$$35$k_$35$$35$1374 ds_d3ns) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792806795$35$$35$d3qP$35$$35$k_$35$$35$1374 lq_anf$36$$35$$35$7205759403792806795$35$$35$d3qP) (exists ((VV$35$$35$F$35$$35$28 Int)) (and (= VV$35$$35$F$35$$35$28 a$35$$35$a3kD) (= lq_karg$36$Scratch.Sample1.algo$35$$35$k_$35$$35$1374 Scratch.Sample1.algo) (= lq_karg$36$VV$35$$35$1373$35$$35$k_$35$$35$1374 VV$35$$35$F$35$$35$28) (= lq_karg$36$a$35$$35$a3kD$35$$35$k_$35$$35$1374 a$35$$35$a3kD) (= lq_karg$36$b$35$$35$a3kE$35$$35$k_$35$$35$1374 b$35$$35$a3kE) (= lq_karg$36$c$35$$35$a3kF$35$$35$k_$35$$35$1374 c$35$$35$a3kF) (= lq_karg$36$ds_d3ns$35$$35$k_$35$$35$1374 ds_d3ns) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792806795$35$$35$d3qP$35$$35$k_$35$$35$1374 lq_anf$36$$35$$35$7205759403792806795$35$$35$d3qP))))) (exists ((lq_karg$36$a$35$$35$a3kD$35$$35$k_$35$$35$1374 Int) (lq_karg$36$c$35$$35$a3kF$35$$35$k_$35$$35$1374 Int) (lq_karg$36$ds_d3ns$35$$35$k_$35$$35$1374 Int) (lq_karg$36$Scratch.Sample1.algo$35$$35$k_$35$$35$1374 Int) (lq_karg$36$b$35$$35$a3kE$35$$35$k_$35$$35$1374 Int) (lq_karg$36$VV$35$$35$1373$35$$35$k_$35$$35$1374 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792806795$35$$35$d3qP$35$$35$k_$35$$35$1374 Int)) (and (= lq_karg$36$Scratch.Sample1.algo$35$$35$k_$35$$35$1374 Scratch.Sample1.algo) (= lq_karg$36$VV$35$$35$1373$35$$35$k_$35$$35$1374 VV$35$$35$F$35$$35$23) (= lq_karg$36$a$35$$35$a3kD$35$$35$k_$35$$35$1374 a$35$$35$a3kD) (= lq_karg$36$b$35$$35$a3kE$35$$35$k_$35$$35$1374 b$35$$35$a3kE) (= lq_karg$36$c$35$$35$a3kF$35$$35$k_$35$$35$1374 c$35$$35$a3kF) (= lq_karg$36$ds_d3ns$35$$35$k_$35$$35$1374 ds_d3ns) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792806795$35$$35$d3qP$35$$35$k_$35$$35$1374 lq_anf$36$$35$$35$7205759403792806795$35$$35$d3qP) (exists ((VV$35$$35$F$35$$35$27 Int)) (and (<= a$35$$35$a3kD VV$35$$35$F$35$$35$27) (= lq_karg$36$Scratch.Sample1.algo$35$$35$k_$35$$35$1374 Scratch.Sample1.algo) (= lq_karg$36$VV$35$$35$1373$35$$35$k_$35$$35$1374 VV$35$$35$F$35$$35$27) (= lq_karg$36$a$35$$35$a3kD$35$$35$k_$35$$35$1374 a$35$$35$a3kD) (= lq_karg$36$b$35$$35$a3kE$35$$35$k_$35$$35$1374 b$35$$35$a3kE) (= lq_karg$36$c$35$$35$a3kF$35$$35$k_$35$$35$1374 c$35$$35$a3kF) (= lq_karg$36$ds_d3ns$35$$35$k_$35$$35$1374 ds_d3ns) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792806795$35$$35$d3qP$35$$35$k_$35$$35$1374 lq_anf$36$$35$$35$7205759403792806795$35$$35$d3qP))))) (exists ((lq_karg$36$a$35$$35$a3kD$35$$35$k_$35$$35$1374 Int) (lq_karg$36$c$35$$35$a3kF$35$$35$k_$35$$35$1374 Int) (lq_karg$36$ds_d3ns$35$$35$k_$35$$35$1374 Int) (lq_karg$36$Scratch.Sample1.algo$35$$35$k_$35$$35$1374 Int) (lq_karg$36$b$35$$35$a3kE$35$$35$k_$35$$35$1374 Int) (lq_karg$36$VV$35$$35$1373$35$$35$k_$35$$35$1374 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792806795$35$$35$d3qP$35$$35$k_$35$$35$1374 Int)) (and (= lq_karg$36$Scratch.Sample1.algo$35$$35$k_$35$$35$1374 Scratch.Sample1.algo) (= lq_karg$36$VV$35$$35$1373$35$$35$k_$35$$35$1374 VV$35$$35$F$35$$35$23) (= lq_karg$36$a$35$$35$a3kD$35$$35$k_$35$$35$1374 a$35$$35$a3kD) (= lq_karg$36$b$35$$35$a3kE$35$$35$k_$35$$35$1374 b$35$$35$a3kE) (= lq_karg$36$c$35$$35$a3kF$35$$35$k_$35$$35$1374 c$35$$35$a3kF) (= lq_karg$36$ds_d3ns$35$$35$k_$35$$35$1374 ds_d3ns) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792806795$35$$35$d3qP$35$$35$k_$35$$35$1374 lq_anf$36$$35$$35$7205759403792806795$35$$35$d3qP) (exists ((VV$35$$35$F$35$$35$25 Int)) (and (<= a$35$$35$a3kD VV$35$$35$F$35$$35$25) (= lq_karg$36$Scratch.Sample1.algo$35$$35$k_$35$$35$1374 Scratch.Sample1.algo) (= lq_karg$36$VV$35$$35$1373$35$$35$k_$35$$35$1374 VV$35$$35$F$35$$35$25) (= lq_karg$36$a$35$$35$a3kD$35$$35$k_$35$$35$1374 a$35$$35$a3kD) (= lq_karg$36$b$35$$35$a3kE$35$$35$k_$35$$35$1374 b$35$$35$a3kE) (= lq_karg$36$c$35$$35$a3kF$35$$35$k_$35$$35$1374 c$35$$35$a3kF) (= lq_karg$36$ds_d3ns$35$$35$k_$35$$35$1374 ds_d3ns) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792806795$35$$35$d3qP$35$$35$k_$35$$35$1374 lq_anf$36$$35$$35$7205759403792806795$35$$35$d3qP)))))) b$36$$35$$35$200 b$36$$35$$35$41 b$36$$35$$35$203 b$36$$35$$35$44 b$36$$35$$35$174 b$36$$35$$35$207))
(push 1)
(assert (not (<= (apply$35$$35$0 (as Scratch.Sample1.getKey Int) ds_d3ns) VV$35$$35$F$35$$35$23)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$326 b$36$$35$$35$200 b$36$$35$$35$41 b$36$$35$$35$203 b$36$$35$$35$44 b$36$$35$$35$174 b$36$$35$$35$207))
(push 1)
(assert (not (<= a$35$$35$a3kD VV$35$$35$F$35$$35$24)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and false b$36$$35$$35$128 b$36$$35$$35$129 b$36$$35$$35$130 b$36$$35$$35$115 b$36$$35$$35$116 b$36$$35$$35$117 b$36$$35$$35$133 b$36$$35$$35$118 b$36$$35$$35$119 b$36$$35$$35$135 (and (= VV$35$$35$F$35$$35$57 msg$35$$35$a3ky) (>= (apply$35$$35$8 (as len Int) VV$35$$35$F$35$$35$57) 0)) b$36$$35$$35$120 b$36$$35$$35$41 b$36$$35$$35$121 b$36$$35$$35$122 (>= (apply$35$$35$8 (as len Int) msg$35$$35$a3ky) 0) b$36$$35$$35$123 b$36$$35$$35$44 b$36$$35$$35$124 b$36$$35$$35$125 b$36$$35$$35$126 b$36$$35$$35$127))
(push 1)
(assert (not false))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$200 b$36$$35$$35$41 b$36$$35$$35$329 b$36$$35$$35$203 b$36$$35$$35$44 b$36$$35$$35$174 b$36$$35$$35$207))
(push 1)
(assert (not (<= a$35$$35$a3kD VV$35$$35$F$35$$35$26)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$224 b$36$$35$$35$241 b$36$$35$$35$242 b$36$$35$$35$228 b$36$$35$$35$213 b$36$$35$$35$229 b$36$$35$$35$232 b$36$$35$$35$41 b$36$$35$$35$330 b$36$$35$$35$44 b$36$$35$$35$236 b$36$$35$$35$237 b$36$$35$$35$174 b$36$$35$$35$238))
(push 1)
(assert (not (<= ds_d3oR VV$35$$35$F$35$$35$11)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (or (exists ((lq_karg$36$ds_d3oT$35$$35$k_$35$$35$1609 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792806796$35$$35$d3qQ$35$$35$k_$35$$35$1609 Int) (lq_karg$36$ds_d3oS$35$$35$k_$35$$35$1609 Int) (lq_karg$36$ds_d3nJ$35$$35$k_$35$$35$1609 Int) (lq_karg$36$ds_d3oR$35$$35$k_$35$$35$1609 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792806802$35$$35$d3qW$35$$35$k_$35$$35$1609 Bool) (lq_karg$36$VV$35$$35$1608$35$$35$k_$35$$35$1609 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792806803$35$$35$d3qX$35$$35$k_$35$$35$1609 Bool) (lq_karg$36$k2$35$$35$a3kN$35$$35$k_$35$$35$1609 Int) (lq_karg$36$Scratch.Sample1.algo$35$$35$k_$35$$35$1609 Int) (lq_karg$36$ds_d3oV$35$$35$k_$35$$35$1609 Int) (lq_karg$36$ds_d3nI$35$$35$k_$35$$35$1609 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792806801$35$$35$d3qV$35$$35$k_$35$$35$1609 Int) (lq_karg$36$ds_d3oU$35$$35$k_$35$$35$1609 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792806804$35$$35$d3qY$35$$35$k_$35$$35$1609 Int)) (and (= lq_karg$36$Scratch.Sample1.algo$35$$35$k_$35$$35$1609 Scratch.Sample1.algo) (= lq_karg$36$VV$35$$35$1608$35$$35$k_$35$$35$1609 VV$35$$35$F$35$$35$13) (= lq_karg$36$ds_d3nI$35$$35$k_$35$$35$1609 ds_d3nI) (= lq_karg$36$ds_d3nJ$35$$35$k_$35$$35$1609 ds_d3nJ) (= lq_karg$36$ds_d3oR$35$$35$k_$35$$35$1609 ds_d3oR) (= lq_karg$36$ds_d3oS$35$$35$k_$35$$35$1609 ds_d3oS) (= lq_karg$36$ds_d3oT$35$$35$k_$35$$35$1609 ds_d3oT) (= lq_karg$36$ds_d3oU$35$$35$k_$35$$35$1609 ds_d3oU) (= lq_karg$36$ds_d3oV$35$$35$k_$35$$35$1609 ds_d3oV) (= lq_karg$36$k2$35$$35$a3kN$35$$35$k_$35$$35$1609 k2$35$$35$a3kN) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792806796$35$$35$d3qQ$35$$35$k_$35$$35$1609 lq_anf$36$$35$$35$7205759403792806796$35$$35$d3qQ) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792806801$35$$35$d3qV$35$$35$k_$35$$35$1609 lq_anf$36$$35$$35$7205759403792806801$35$$35$d3qV) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792806802$35$$35$d3qW$35$$35$k_$35$$35$1609 lq_anf$36$$35$$35$7205759403792806802$35$$35$d3qW) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792806803$35$$35$d3qX$35$$35$k_$35$$35$1609 lq_anf$36$$35$$35$7205759403792806803$35$$35$d3qX) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792806804$35$$35$d3qY$35$$35$k_$35$$35$1609 lq_anf$36$$35$$35$7205759403792806804$35$$35$d3qY) (exists ((VV$35$$35$F$35$$35$17 Int)) (and (<= ds_d3oR VV$35$$35$F$35$$35$17) (= lq_karg$36$Scratch.Sample1.algo$35$$35$k_$35$$35$1609 Scratch.Sample1.algo) (= lq_karg$36$VV$35$$35$1608$35$$35$k_$35$$35$1609 VV$35$$35$F$35$$35$17) (= lq_karg$36$ds_d3nI$35$$35$k_$35$$35$1609 ds_d3nI) (= lq_karg$36$ds_d3nJ$35$$35$k_$35$$35$1609 ds_d3nJ) (= lq_karg$36$ds_d3oR$35$$35$k_$35$$35$1609 ds_d3oR) (= lq_karg$36$ds_d3oS$35$$35$k_$35$$35$1609 ds_d3oS) (= lq_karg$36$ds_d3oT$35$$35$k_$35$$35$1609 ds_d3oT) (= lq_karg$36$ds_d3oU$35$$35$k_$35$$35$1609 ds_d3oU) (= lq_karg$36$ds_d3oV$35$$35$k_$35$$35$1609 ds_d3oV) (= lq_karg$36$k2$35$$35$a3kN$35$$35$k_$35$$35$1609 k2$35$$35$a3kN) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792806796$35$$35$d3qQ$35$$35$k_$35$$35$1609 lq_anf$36$$35$$35$7205759403792806796$35$$35$d3qQ) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792806801$35$$35$d3qV$35$$35$k_$35$$35$1609 lq_anf$36$$35$$35$7205759403792806801$35$$35$d3qV) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792806802$35$$35$d3qW$35$$35$k_$35$$35$1609 lq_anf$36$$35$$35$7205759403792806802$35$$35$d3qW) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792806803$35$$35$d3qX$35$$35$k_$35$$35$1609 lq_anf$36$$35$$35$7205759403792806803$35$$35$d3qX) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792806804$35$$35$d3qY$35$$35$k_$35$$35$1609 lq_anf$36$$35$$35$7205759403792806804$35$$35$d3qY))))) (exists ((lq_karg$36$ds_d3oT$35$$35$k_$35$$35$1609 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792806796$35$$35$d3qQ$35$$35$k_$35$$35$1609 Int) (lq_karg$36$ds_d3oS$35$$35$k_$35$$35$1609 Int) (lq_karg$36$ds_d3nJ$35$$35$k_$35$$35$1609 Int) (lq_karg$36$ds_d3oR$35$$35$k_$35$$35$1609 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792806802$35$$35$d3qW$35$$35$k_$35$$35$1609 Bool) (lq_karg$36$VV$35$$35$1608$35$$35$k_$35$$35$1609 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792806803$35$$35$d3qX$35$$35$k_$35$$35$1609 Bool) (lq_karg$36$k2$35$$35$a3kN$35$$35$k_$35$$35$1609 Int) (lq_karg$36$Scratch.Sample1.algo$35$$35$k_$35$$35$1609 Int) (lq_karg$36$ds_d3oV$35$$35$k_$35$$35$1609 Int) (lq_karg$36$ds_d3nI$35$$35$k_$35$$35$1609 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792806801$35$$35$d3qV$35$$35$k_$35$$35$1609 Int) (lq_karg$36$ds_d3oU$35$$35$k_$35$$35$1609 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792806804$35$$35$d3qY$35$$35$k_$35$$35$1609 Int)) (and (= lq_karg$36$Scratch.Sample1.algo$35$$35$k_$35$$35$1609 Scratch.Sample1.algo) (= lq_karg$36$VV$35$$35$1608$35$$35$k_$35$$35$1609 VV$35$$35$F$35$$35$13) (= lq_karg$36$ds_d3nI$35$$35$k_$35$$35$1609 ds_d3nI) (= lq_karg$36$ds_d3nJ$35$$35$k_$35$$35$1609 ds_d3nJ) (= lq_karg$36$ds_d3oR$35$$35$k_$35$$35$1609 ds_d3oR) (= lq_karg$36$ds_d3oS$35$$35$k_$35$$35$1609 ds_d3oS) (= lq_karg$36$ds_d3oT$35$$35$k_$35$$35$1609 ds_d3oT) (= lq_karg$36$ds_d3oU$35$$35$k_$35$$35$1609 ds_d3oU) (= lq_karg$36$ds_d3oV$35$$35$k_$35$$35$1609 ds_d3oV) (= lq_karg$36$k2$35$$35$a3kN$35$$35$k_$35$$35$1609 k2$35$$35$a3kN) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792806796$35$$35$d3qQ$35$$35$k_$35$$35$1609 lq_anf$36$$35$$35$7205759403792806796$35$$35$d3qQ) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792806801$35$$35$d3qV$35$$35$k_$35$$35$1609 lq_anf$36$$35$$35$7205759403792806801$35$$35$d3qV) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792806802$35$$35$d3qW$35$$35$k_$35$$35$1609 lq_anf$36$$35$$35$7205759403792806802$35$$35$d3qW) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792806803$35$$35$d3qX$35$$35$k_$35$$35$1609 lq_anf$36$$35$$35$7205759403792806803$35$$35$d3qX) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792806804$35$$35$d3qY$35$$35$k_$35$$35$1609 lq_anf$36$$35$$35$7205759403792806804$35$$35$d3qY) (exists ((VV$35$$35$F$35$$35$16 Int)) (and (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403792806803$35$$35$d3qX$35$$35$k_$35$$35$1587 Bool) (lq_karg$36$Scratch.Sample1.algo$35$$35$k_$35$$35$1587 Int) (lq_karg$36$ds_d3oV$35$$35$k_$35$$35$1587 Int) (lq_karg$36$k2$35$$35$a3kN$35$$35$k_$35$$35$1587 Int) (lq_karg$36$VV$35$$35$1586$35$$35$k_$35$$35$1587 Int) (lq_karg$36$ds_d3oR$35$$35$k_$35$$35$1587 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792806802$35$$35$d3qW$35$$35$k_$35$$35$1587 Bool) (lq_karg$36$ds_d3oT$35$$35$k_$35$$35$1587 Int) (lq_karg$36$ds_d3oS$35$$35$k_$35$$35$1587 Int) (lq_karg$36$ds_d3nJ$35$$35$k_$35$$35$1587 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792806796$35$$35$d3qQ$35$$35$k_$35$$35$1587 Int) (lq_karg$36$ds_d3oU$35$$35$k_$35$$35$1587 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792806801$35$$35$d3qV$35$$35$k_$35$$35$1587 Int) (lq_karg$36$ds_d3nI$35$$35$k_$35$$35$1587 Int)) (and (= lq_karg$36$Scratch.Sample1.algo$35$$35$k_$35$$35$1587 Scratch.Sample1.algo) (= lq_karg$36$VV$35$$35$1586$35$$35$k_$35$$35$1587 VV$35$$35$F$35$$35$16) (= lq_karg$36$ds_d3nI$35$$35$k_$35$$35$1587 ds_d3nI) (= lq_karg$36$ds_d3nJ$35$$35$k_$35$$35$1587 ds_d3nJ) (= lq_karg$36$ds_d3oR$35$$35$k_$35$$35$1587 ds_d3oR) (= lq_karg$36$ds_d3oS$35$$35$k_$35$$35$1587 ds_d3oS) (= lq_karg$36$ds_d3oT$35$$35$k_$35$$35$1587 ds_d3oT) (= lq_karg$36$ds_d3oU$35$$35$k_$35$$35$1587 ds_d3oU) (= lq_karg$36$ds_d3oV$35$$35$k_$35$$35$1587 ds_d3oV) (= lq_karg$36$k2$35$$35$a3kN$35$$35$k_$35$$35$1587 k2$35$$35$a3kN) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792806796$35$$35$d3qQ$35$$35$k_$35$$35$1587 lq_anf$36$$35$$35$7205759403792806796$35$$35$d3qQ) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792806801$35$$35$d3qV$35$$35$k_$35$$35$1587 lq_anf$36$$35$$35$7205759403792806801$35$$35$d3qV) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792806802$35$$35$d3qW$35$$35$k_$35$$35$1587 lq_anf$36$$35$$35$7205759403792806802$35$$35$d3qW) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792806803$35$$35$d3qX$35$$35$k_$35$$35$1587 lq_anf$36$$35$$35$7205759403792806803$35$$35$d3qX) (exists ((VV$35$$35$F$35$$35$18 Int)) (and (= lq_karg$36$Scratch.Sample1.algo$35$$35$k_$35$$35$1587 Scratch.Sample1.algo) (= lq_karg$36$VV$35$$35$1586$35$$35$k_$35$$35$1587 VV$35$$35$F$35$$35$18) (= lq_karg$36$ds_d3nI$35$$35$k_$35$$35$1587 ds_d3nI) (= lq_karg$36$ds_d3nJ$35$$35$k_$35$$35$1587 ds_d3nJ) (= lq_karg$36$ds_d3oR$35$$35$k_$35$$35$1587 ds_d3oR) (= lq_karg$36$ds_d3oS$35$$35$k_$35$$35$1587 ds_d3oS) (= lq_karg$36$ds_d3oT$35$$35$k_$35$$35$1587 ds_d3oT) (= lq_karg$36$ds_d3oU$35$$35$k_$35$$35$1587 ds_d3oU) (= lq_karg$36$ds_d3oV$35$$35$k_$35$$35$1587 ds_d3oV) (= lq_karg$36$k2$35$$35$a3kN$35$$35$k_$35$$35$1587 k2$35$$35$a3kN) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792806796$35$$35$d3qQ$35$$35$k_$35$$35$1587 lq_anf$36$$35$$35$7205759403792806796$35$$35$d3qQ) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792806801$35$$35$d3qV$35$$35$k_$35$$35$1587 lq_anf$36$$35$$35$7205759403792806801$35$$35$d3qV) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792806802$35$$35$d3qW$35$$35$k_$35$$35$1587 lq_anf$36$$35$$35$7205759403792806802$35$$35$d3qW) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792806803$35$$35$d3qX$35$$35$k_$35$$35$1587 lq_anf$36$$35$$35$7205759403792806803$35$$35$d3qX))))) (<= (apply$35$$35$0 (as Scratch.Sample1.getKey Int) ds_d3nJ) VV$35$$35$F$35$$35$16) (= lq_karg$36$Scratch.Sample1.algo$35$$35$k_$35$$35$1609 Scratch.Sample1.algo) (= lq_karg$36$VV$35$$35$1608$35$$35$k_$35$$35$1609 VV$35$$35$F$35$$35$16) (= lq_karg$36$ds_d3nI$35$$35$k_$35$$35$1609 ds_d3nI) (= lq_karg$36$ds_d3nJ$35$$35$k_$35$$35$1609 ds_d3nJ) (= lq_karg$36$ds_d3oR$35$$35$k_$35$$35$1609 ds_d3oR) (= lq_karg$36$ds_d3oS$35$$35$k_$35$$35$1609 ds_d3oS) (= lq_karg$36$ds_d3oT$35$$35$k_$35$$35$1609 ds_d3oT) (= lq_karg$36$ds_d3oU$35$$35$k_$35$$35$1609 ds_d3oU) (= lq_karg$36$ds_d3oV$35$$35$k_$35$$35$1609 ds_d3oV) (= lq_karg$36$k2$35$$35$a3kN$35$$35$k_$35$$35$1609 k2$35$$35$a3kN) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792806796$35$$35$d3qQ$35$$35$k_$35$$35$1609 lq_anf$36$$35$$35$7205759403792806796$35$$35$d3qQ) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792806801$35$$35$d3qV$35$$35$k_$35$$35$1609 lq_anf$36$$35$$35$7205759403792806801$35$$35$d3qV) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792806802$35$$35$d3qW$35$$35$k_$35$$35$1609 lq_anf$36$$35$$35$7205759403792806802$35$$35$d3qW) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792806803$35$$35$d3qX$35$$35$k_$35$$35$1609 lq_anf$36$$35$$35$7205759403792806803$35$$35$d3qX) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792806804$35$$35$d3qY$35$$35$k_$35$$35$1609 lq_anf$36$$35$$35$7205759403792806804$35$$35$d3qY)))))) b$36$$35$$35$224 b$36$$35$$35$241 b$36$$35$$35$242 b$36$$35$$35$228 b$36$$35$$35$213 b$36$$35$$35$229 b$36$$35$$35$232 b$36$$35$$35$41 b$36$$35$$35$44 b$36$$35$$35$236 b$36$$35$$35$237 b$36$$35$$35$174 b$36$$35$$35$238))
(push 1)
(assert (not (<= ds_d3oR VV$35$$35$F$35$$35$13)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and false b$36$$35$$35$200 b$36$$35$$35$41 b$36$$35$$35$201 b$36$$35$$35$202 b$36$$35$$35$44 b$36$$35$$35$174))
(push 1)
(assert (not (<= (apply$35$$35$0 (as Scratch.Sample1.getKey Int) ds_d3ns) VV$35$$35$F$35$$35$29)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$41 b$36$$35$$35$187 b$36$$35$$35$44 b$36$$35$$35$188 b$36$$35$$35$189 b$36$$35$$35$174 b$36$$35$$35$190 b$36$$35$$35$335 b$36$$35$$35$191))
(push 1)
(assert (not (apply$35$$35$9 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$336 b$36$$35$$35$160 b$36$$35$$35$161 b$36$$35$$35$162 b$36$$35$$35$164 b$36$$35$$35$166 b$36$$35$$35$168 b$36$$35$$35$41 b$36$$35$$35$153 b$36$$35$$35$154 b$36$$35$$35$170 b$36$$35$$35$155 b$36$$35$$35$44 b$36$$35$$35$156 b$36$$35$$35$172 b$36$$35$$35$157 b$36$$35$$35$158 b$36$$35$$35$159))
(push 1)
(assert (not (< 0 (apply$35$$35$0 (as Scratch.Sample1.size Int) VV$35$$35$F$35$$35$31))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(pop 1)
(pop 1)
(exit)
