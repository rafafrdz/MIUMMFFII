(set-option :auto-config false)
(set-option :model true)
(set-option :model.partial false)

(set-option :smt.mbqi false)

(define-sort Str () Int)
(declare-fun strLen (Str) Int)
(declare-fun subString (Str Int Int) Str)
(declare-fun concatString (Str Str) Str)
(define-sort Elt () Int)
(define-sort LSet () (Array Elt Bool))
(define-fun smt_set_emp () LSet ((as const LSet) false))
(define-fun smt_set_sng ((x Elt)) LSet (store ((as const LSet) false) x true))
(define-fun smt_set_mem ((x Elt) (s LSet)) Bool (select s x))
(define-fun smt_set_add ((s LSet) (x Elt)) LSet (store s x true))
(define-fun smt_set_cup ((s1 LSet) (s2 LSet)) LSet ((_ map or) s1 s2))
(define-fun smt_set_cap ((s1 LSet) (s2 LSet)) LSet ((_ map and) s1 s2))
(define-fun smt_set_com ((s LSet)) LSet ((_ map not) s))
(define-fun smt_set_dif ((s1 LSet) (s2 LSet)) LSet (smt_set_cap s1 (smt_set_com s2)))
(define-fun smt_set_sub ((s1 LSet) (s2 LSet)) Bool (= smt_set_emp (smt_set_dif s1 s2)))
(define-sort Map () (Array Elt Elt))
(define-fun smt_map_sel ((m Map) (k Elt)) Elt (select m k))
(define-fun smt_map_sto ((m Map) (k Elt) (v Elt)) Map (store m k v))
(define-fun smt_map_cup ((m1 Map) (m2 Map)) Map ((_ map (+ (Elt Elt) Elt)) m1 m2))
(define-fun smt_map_def ((v Elt)) Map ((as const (Map)) v))
(define-fun bool_to_int ((b Bool)) Int (ite b 1 0))
(define-fun Z3_OP_MUL ((x Int) (y Int)) Int (* x y))
(define-fun Z3_OP_DIV ((x Int) (y Int)) Int (div x y))
(declare-fun GHC.Base.id () Int)
(declare-fun cast_as_int () Int)
(declare-fun lq_tmp$36$x$35$$35$1211 () Int)
(declare-fun VV$35$$35$F$35$$35$31 () Int)
(declare-fun GHC.Real.rem () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792808964$35$$35$d3ZO$35$$35$k_$35$$35$1060 () Bool)
(declare-fun fix$36$$36$dIP_a3XX () Int)
(declare-fun GHC.List.init () Int)
(declare-fun lq_karg$36$VV$35$$35$920$35$$35$k_$35$$35$921 () Int)
(declare-fun addrLen () Int)
(declare-fun Scratch.Sample2.hd () Int)
(declare-fun papp5 () Int)
(declare-fun GHC.List.iterate () Int)
(declare-fun x_Tuple21 () Int)
(declare-fun lit$36$$39$$58$$60$ () Str)
(declare-fun GHC.Classes.$61$$61$ () Int)
(declare-fun GHC.Types.C$35$ () Int)
(declare-fun GHC.List.drop () Int)
(declare-fun Scratch.Sample2.insert () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792808958$35$$35$d3ZI$35$$35$k_$35$$35$937 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792808962$35$$35$d3ZM$35$$35$k_$35$$35$1098 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792808956$35$$35$d3ZG$35$$35$k_$35$$35$937 () Int)
(declare-fun lq_tmp$36$x$35$$35$1119 () Int)
(declare-fun Data.Foldable.length () Int)
(declare-fun x_Tuple33 () Int)
(declare-fun GHC.Types.LT () Int)
(declare-fun VV$35$$35$F$35$$35$45 () Int)
(declare-fun y$35$$35$a3Vj () Int)
(declare-fun fix$36$$36$dOrd_a3Xk () Int)
(declare-fun lq_karg$36$VV$35$$35$1059$35$$35$k_$35$$35$1060 () Int)
(declare-fun GHC.List.replicate () Int)
(declare-fun GHC.List.zipWith () Int)
(declare-fun GHC.Classes.$62$$61$ () Int)
(declare-fun fix$36$$36$dOrd_a3WQ () Int)
(declare-fun GHC.Num.fromInteger () Int)
(declare-fun papp3 () Int)
(declare-fun GHC.List.span () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808992$35$$35$d40g () Int)
(declare-fun GHC.Classes.$62$ () Int)
(declare-fun Scratch.Sample2.insertSort$39$ () Int)
(declare-fun VV$35$$35$F$35$$35$37 () Int)
(declare-fun GHC.Types.False () Bool)
(declare-fun lit$36$$39$Emp () Str)
(declare-fun lq_karg$36$x$35$$35$a3Vl$35$$35$k_$35$$35$1060 () Int)
(declare-fun GHC.List.scanr1 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808962$35$$35$d3ZM () Int)
(declare-fun lq_karg$36$VV$35$$35$907$35$$35$k_$35$$35$908 () Int)
(declare-fun lq_karg$36$VV$35$$35$1097$35$$35$k_$35$$35$1098 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792808959$35$$35$d3ZJ$35$$35$k_$35$$35$921 () Int)
(declare-fun GHC.Types.$58$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808951$35$$35$d3ZB () Int)
(declare-fun GHC.Real.div () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808955$35$$35$d3ZF () Int)
(declare-fun GHC.List.scanl () Int)
(declare-fun lit$36$error () Str)
(declare-fun Control.Exception.Base.recSelError () Int)
(declare-fun lq_karg$36$y$35$$35$a3Vj$35$$35$k_$35$$35$1060 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808959$35$$35$d3ZJ () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792808957$35$$35$d3ZH$35$$35$k_$35$$35$908 () Int)
(declare-fun GHC.Tuple.$40$$44$$44$$41$ () Int)
(declare-fun papp4 () Int)
(declare-fun GHC.Types.Module () Int)
(declare-fun GHC.List.zip () Int)
(declare-fun GHC.Tuple.$40$$41$ () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792808965$35$$35$d3ZP$35$$35$k_$35$$35$1098 () Bool)
(declare-fun GHC.Types.I$35$ () Int)
(declare-fun GHC.Stack.Types.SrcLoc () Int)
(declare-fun f$35$$35$a3Vo () Int)
(declare-fun lq_karg$36$ds_d3Yn$35$$35$k_$35$$35$1098 () Int)
(declare-fun GHC.CString.unpackCString$35$ () Int)
(declare-fun VV$35$$35$F$35$$35$30 () Int)
(declare-fun GHC.Types.KindRepFun () Int)
(declare-fun lit$36$tl () Str)
(declare-fun Scratch.Sample2.die () Int)
(declare-fun VV$35$$35$F$35$$35$42 () Int)
(declare-fun GHC.Types.KindRepTYPE () Int)
(declare-fun lq_tmp$36$x$35$$35$1125 () Int)
(declare-fun GHC.List.dropWhile () Int)
(declare-fun lq_karg$36$xs$35$$35$a3Vm$35$$35$k_$35$$35$1060 () Int)
(declare-fun Scratch.Sample2.Emp () Int)
(declare-fun x$35$$35$a3Vl () Int)
(declare-fun autolen () Int)
(declare-fun Data.Foldable.null () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808967$35$$35$d3ZR () Int)
(declare-fun GHC.Integer.Type.$36$WJn$35$ () Int)
(declare-fun GHC.Real.$94$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808943$35$$35$d3Zt () Int)
(declare-fun head () Int)
(declare-fun lq_rnm$36$fldList$35$$35$254 () Int)
(declare-fun GHC.Real.mod () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808965$35$$35$d3ZP () Bool)
(declare-fun VV$35$$35$F$35$$35$24 () Int)
(declare-fun lq_karg$36$Scratch.Sample2.okList$35$$35$k_$35$$35$1098 () Int)
(declare-fun lq_tmp$36$x$35$$35$1173 () Int)
(declare-fun GHC.Types.$36$WKindRepTYPE () Int)
(declare-fun GHC.Real.divMod () Int)
(declare-fun GHC.Integer.Type.Jn$35$ () Int)
(declare-fun GHC.Classes.compare () Int)
(declare-fun fix$36$$36$krep_a3Yg () Int)
(declare-fun lq_tmp$36$x$35$$35$783 () Int)
(declare-fun papp2 () Int)
(declare-fun VV$35$$35$F$35$$35$50 () Str)
(declare-fun GHC.Real.toInteger () Int)
(declare-fun GHC.Real.quotRem () Int)
(declare-fun GHC.Stack.Types.EmptyCallStack () Int)
(declare-fun GHC.Types.krep$36$$42$Arr$42$ () Int)
(declare-fun GHC.Stack.Types.emptyCallStack () Int)
(declare-fun GHC.List.reverse () Int)
(declare-fun GHC.Integer.Type.$36$WJp$35$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808960$35$$35$d3ZK () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792808960$35$$35$d3ZK$35$$35$k_$35$$35$937 () Int)
(declare-fun GHC.List.filter () Int)
(declare-fun fromJust () Int)
(declare-fun GHC.Types.KindRepTyConApp () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808968$35$$35$d3ZS () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792808962$35$$35$d3ZM$35$$35$k_$35$$35$980 () Int)
(declare-fun GHC.List.cycle () Int)
(declare-fun GHC.List.$33$$33$ () Int)
(declare-fun GHC.List.tail () Int)
(declare-fun lit$36$Use$32$of$32$partial$32$record$32$field$32$selector () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792808964$35$$35$d3ZO () Bool)
(declare-fun papp7 () Int)
(declare-fun GHC.Classes.$47$$61$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808974$35$$35$d3ZY () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808939$35$$35$d3Zp () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792808935$35$$35$d3Zl () Str)
(declare-fun GHC.List.break () Int)
(declare-fun GHC.Types.True () Bool)
(declare-fun lq_tmp$36$x$35$$35$619 () Int)
(declare-fun VV$35$$35$F$35$$35$25 () Int)
(declare-fun GHC.Types.$91$$93$ () Int)
(declare-fun GHC.List.splitAt () Int)
(declare-fun GHC.Base.$43$$43$ () Int)
(declare-fun VV$35$$35$F$35$$35$43 () Int)
(declare-fun GHC.Real.$58$$37$ () Int)
(declare-fun lq_tmp$36$x$35$$35$1447 () Int)
(declare-fun GHC.Tuple.$40$$44$$41$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808937$35$$35$d3Zn () Str)
(declare-fun GHC.Real.quot () Int)
(declare-fun GHC.Real.$47$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808957$35$$35$d3ZH () Int)
(declare-fun lq_karg$36$ds_d3Yn$35$$35$k_$35$$35$980 () Int)
(declare-fun fldList () Int)
(declare-fun lq_karg$36$VV$35$$35$936$35$$35$k_$35$$35$937 () Int)
(declare-fun GHC.Classes.$38$$38$ () Int)
(declare-fun lq_karg$36$VV$35$$35$622$35$$35$k_$35$$35$623 () Str)
(declare-fun fix$36$$36$krep_a3Yh () Int)
(declare-fun lq_tmp$36$x$35$$35$1291 () Int)
(declare-fun x$35$$35$a3Vh () Int)
(declare-fun lq_tmp$36$x$35$$35$740 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808949$35$$35$d3Zz () Int)
(declare-fun Data.Foldable.$36$fFoldable$91$$93$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808945$35$$35$d3Zv () Int)
(declare-fun GHC.Types.GT () Int)
(declare-fun GHC.Classes.C$58$IP () Int)
(declare-fun GHC.Classes.$124$$124$ () Int)
(declare-fun lq_tmp$36$x$35$$35$830 () Int)
(declare-fun Data.Either.Left () Int)
(declare-fun GHC.List.last () Int)
(declare-fun VV$35$$35$F$35$$35$46 () Str)
(declare-fun lq_karg$36$Scratch.Sample2.okList$35$$35$k_$35$$35$1060 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808941$35$$35$d3Zr () Str)
(declare-fun GHC.Integer.Type.S$35$ () Int)
(declare-fun lq_tmp$36$x$35$$35$1121 () Int)
(declare-fun GHC.List.scanl1 () Int)
(declare-fun Data.Either.Right () Int)
(declare-fun fix$36$$36$dOrd_a3WD () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808956$35$$35$d3ZG () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808938$35$$35$d3Zo () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792808954$35$$35$d3ZE () Int)
(declare-fun GHC.Num.$45$ () Int)
(declare-fun len () Int)
(declare-fun papp6 () Int)
(declare-fun GHC.Base.. () Int)
(declare-fun x_Tuple22 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808958$35$$35$d3ZI () Int)
(declare-fun lq_karg$36$xs$35$$35$a3Vm$35$$35$k_$35$$35$1098 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808952$35$$35$d3ZC () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808950$35$$35$d3ZA () Int)
(declare-fun VV$35$$35$F$35$$35$26 () Int)
(declare-fun xs$35$$35$a3Vm () Int)
(declare-fun GHC.Types.KindRepTypeLitS () Int)
(declare-fun GHC.Real.$36$W$58$$37$ () Int)
(declare-fun VV$35$$35$F$35$$35$40 () Int)
(declare-fun lq_karg$36$ds_d3Yn$35$$35$k_$35$$35$1060 () Int)
(declare-fun msg$35$$35$a3Vg () Str)
(declare-fun GHC.Real.fromRational () Int)
(declare-fun isJust () Int)
(declare-fun lit$36$src$47$Scratch$47$Sample2.hs () Str)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792808965$35$$35$d3ZP$35$$35$k_$35$$35$1060 () Bool)
(declare-fun lq_anf$36$$35$$35$7205759403792808966$35$$35$d3ZQ () Int)
(declare-fun GHC.List.takeWhile () Int)
(declare-fun GHC.Types.TrNameD () Int)
(declare-fun lq_karg$36$Scratch.Sample2.okList$35$$35$k_$35$$35$980 () Int)
(declare-fun lq_karg$36$y$35$$35$a3Vj$35$$35$k_$35$$35$1098 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808980$35$$35$d404 () Int)
(declare-fun GHC.Types.KindRepVar () Int)
(declare-fun GHC.Stack.Types.pushCallStack () Int)
(declare-fun GHC.Types.KindRepTypeLitD () Int)
(declare-fun lq_karg$36$x$35$$35$a3Vl$35$$35$k_$35$$35$1098 () Int)
(declare-fun VV$35$$35$F$35$$35$21 () Int)
(declare-fun x_Tuple31 () Int)
(declare-fun GHC.Integer.Type.Jp$35$ () Int)
(declare-fun Scratch.Sample2.insertSort () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792808959$35$$35$d3ZJ$35$$35$k_$35$$35$937 () Int)
(declare-fun lq_tmp$36$x$35$$35$1120 () Int)
(declare-fun GHC.IO.Exception.IOError () Int)
(declare-fun GHC.List.take () Int)
(declare-fun GHC.Stack.Types.PushCallStack () Int)
(declare-fun GHC.Classes.$60$$61$ () Int)
(declare-fun GHC.Types.TrNameS () Int)
(declare-fun GHC.Enum.C$58$Bounded () Int)
(declare-fun GHC.Base.map () Int)
(declare-fun lq_tmp$36$x$35$$35$741 () Int)
(declare-fun GHC.Base.$36$ () Int)
(declare-fun papp1 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808961$35$$35$d3ZL () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792808958$35$$35$d3ZI$35$$35$k_$35$$35$921 () Int)
(declare-fun GHC.Classes.$60$ () Int)
(declare-fun tail () Int)
(declare-fun cast_as () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808947$35$$35$d3Zx () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792808962$35$$35$d3ZM$35$$35$k_$35$$35$1060 () Int)
(declare-fun lq_tmp$36$x$35$$35$777 () Int)
(declare-fun GHC.Types.TyCon () Int)
(declare-fun GHC.Stack.Types.FreezeCallStack () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792808956$35$$35$d3ZG$35$$35$k_$35$$35$921 () Int)
(declare-fun ds_d3Yn () Int)
(declare-fun Scratch.Sample2.tl () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808963$35$$35$d3ZN () Int)
(declare-fun Data.Foldable.foldr () Int)
(declare-fun GHC.Num.$42$ () Int)
(declare-fun lq_tmp$36$x$35$$35$1423 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792808958$35$$35$d3ZI$35$$35$k_$35$$35$908 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792808964$35$$35$d3ZO$35$$35$k_$35$$35$1098 () Bool)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792808956$35$$35$d3ZG$35$$35$k_$35$$35$908 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808936$35$$35$d3Zm () Str)
(declare-fun GHC.Real.recip () Int)
(declare-fun lit$36$IncList () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792808987$35$$35$d40b () Int)
(declare-fun lq_karg$36$VV$35$$35$979$35$$35$k_$35$$35$980 () Int)
(declare-fun lq_karg$36$y$35$$35$a3Vj$35$$35$k_$35$$35$980 () Int)
(declare-fun lit$36$Scratch.Sample2 () Str)
(declare-fun GHC.Maybe.Nothing () Int)
(declare-fun VV$35$$35$F$35$$35$27 () Int)
(declare-fun VV$35$$35$F$35$$35$41 () Int)
(declare-fun GHC.Types.EQ () Int)
(declare-fun lq_tmp$36$x$35$$35$1467 () Int)
(declare-fun GHC.List.scanr () Int)
(declare-fun lq_tmp$36$x$35$$35$1440 () Int)
(declare-fun totalityError () Int)
(declare-fun GHC.Num.negate () Int)
(declare-fun GHC.Real.fromIntegral () Int)
(declare-fun GHC.Maybe.Just () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808942$35$$35$d3Zs () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792808946$35$$35$d3Zw () Int)
(declare-fun Scratch.Sample2.okList () Int)
(declare-fun GHC.Classes.min () Int)
(declare-fun lit$36$LH$45$verificacion$45$asistida$45$0.1.0.0$45$5NHMYuhgw29Gnkg9iLcbdC () Str)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792808957$35$$35$d3ZH$35$$35$k_$35$$35$921 () Int)
(declare-fun lq_tmp$36$x$35$$35$742 () Int)
(declare-fun Scratch.Sample2.$58$$60$ () Int)
(declare-fun lq_tmp$36$x$35$$35$876 () Int)
(declare-fun GHC.Types.$36$WKindRepVar () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808940$35$$35$d3Zq () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792808944$35$$35$d3Zu () Int)
(declare-fun x_Tuple32 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808948$35$$35$d3Zy () Int)
(declare-fun VV$35$$35$F$35$$35$44 () Int)
(declare-fun VV$35$$35$F$35$$35$34 () Int)
(declare-fun GHC.List.repeat () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792808957$35$$35$d3ZH$35$$35$k_$35$$35$937 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808953$35$$35$d3ZD () Int)
(declare-fun GHC.Classes.not () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808972$35$$35$d3ZW () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808970$35$$35$d3ZU () Int)
(declare-fun lit$36$hd () Str)
(declare-fun GHC.Num.$43$ () Int)
(declare-fun Data.Tuple.fst () Int)
(declare-fun GHC.Types.KindRepApp () Int)
(declare-fun GHC.Err.error () Int)
(declare-fun snd () Int)
(declare-fun fst () Int)
(declare-fun Data.Tuple.snd () Int)
(declare-fun apply$35$$35$13 (Int (_ BitVec 32)) Bool)
(declare-fun apply$35$$35$9 (Int Str) Bool)
(declare-fun apply$35$$35$6 (Int Bool) Str)
(declare-fun apply$35$$35$11 (Int Str) (_ BitVec 32))
(declare-fun apply$35$$35$15 (Int (_ BitVec 32)) (_ BitVec 32))
(declare-fun apply$35$$35$0 (Int Int) Int)
(declare-fun apply$35$$35$8 (Int Str) Int)
(declare-fun apply$35$$35$1 (Int Int) Bool)
(declare-fun apply$35$$35$7 (Int Bool) (_ BitVec 32))
(declare-fun apply$35$$35$14 (Int (_ BitVec 32)) Str)
(declare-fun apply$35$$35$10 (Int Str) Str)
(declare-fun apply$35$$35$5 (Int Bool) Bool)
(declare-fun apply$35$$35$2 (Int Int) Str)
(declare-fun apply$35$$35$12 (Int (_ BitVec 32)) Int)
(declare-fun apply$35$$35$3 (Int Int) (_ BitVec 32))
(declare-fun apply$35$$35$4 (Int Bool) Int)
(declare-fun coerce$35$$35$13 ((_ BitVec 32)) Bool)
(declare-fun coerce$35$$35$9 (Str) Bool)
(declare-fun coerce$35$$35$6 (Bool) Str)
(declare-fun coerce$35$$35$11 (Str) (_ BitVec 32))
(declare-fun coerce$35$$35$15 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun coerce$35$$35$0 (Int) Int)
(declare-fun coerce$35$$35$8 (Str) Int)
(declare-fun coerce$35$$35$1 (Int) Bool)
(declare-fun coerce$35$$35$7 (Bool) (_ BitVec 32))
(declare-fun coerce$35$$35$14 ((_ BitVec 32)) Str)
(declare-fun coerce$35$$35$10 (Str) Str)
(declare-fun coerce$35$$35$5 (Bool) Bool)
(declare-fun coerce$35$$35$2 (Int) Str)
(declare-fun coerce$35$$35$12 ((_ BitVec 32)) Int)
(declare-fun coerce$35$$35$3 (Int) (_ BitVec 32))
(declare-fun coerce$35$$35$4 (Bool) Int)
(declare-fun smt_lambda$35$$35$13 ((_ BitVec 32) Bool) Int)
(declare-fun smt_lambda$35$$35$9 (Str Bool) Int)
(declare-fun smt_lambda$35$$35$6 (Bool Str) Int)
(declare-fun smt_lambda$35$$35$11 (Str (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$15 ((_ BitVec 32) (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$0 (Int Int) Int)
(declare-fun smt_lambda$35$$35$8 (Str Int) Int)
(declare-fun smt_lambda$35$$35$1 (Int Bool) Int)
(declare-fun smt_lambda$35$$35$7 (Bool (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$14 ((_ BitVec 32) Str) Int)
(declare-fun smt_lambda$35$$35$10 (Str Str) Int)
(declare-fun smt_lambda$35$$35$5 (Bool Bool) Int)
(declare-fun smt_lambda$35$$35$2 (Int Str) Int)
(declare-fun smt_lambda$35$$35$12 ((_ BitVec 32) Int) Int)
(declare-fun smt_lambda$35$$35$3 (Int (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$4 (Bool Int) Int)
(declare-fun lam_arg$35$$35$1$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$2$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$3$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$4$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$5$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$6$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$7$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$1$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$2$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$3$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$4$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$5$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$6$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$7$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$1$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$2$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$3$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$4$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$5$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$6$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$7$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$1$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$2$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$3$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$4$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$5$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$6$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$7$35$$35$4 () Bool)

(assert (distinct lit$36$hd lit$36$LH$45$verificacion$45$asistida$45$0.1.0.0$45$5NHMYuhgw29Gnkg9iLcbdC lit$36$Scratch.Sample2 lit$36$IncList lit$36$src$47$Scratch$47$Sample2.hs lit$36$Use$32$of$32$partial$32$record$32$field$32$selector lit$36$tl lit$36$error lit$36$$39$Emp lit$36$$39$$58$$60$))


(assert (distinct GHC.Types.True GHC.Types.False))
(assert (distinct GHC.Types.EQ GHC.Types.GT GHC.Types.LT))
(assert (= (strLen lit$36$$39$$58$$60$) 3))
(assert (= (strLen lit$36$$39$Emp) 4))
(assert (= (strLen lit$36$error) 5))
(assert (= (strLen lit$36$tl) 2))
(assert (= (strLen lit$36$Use$32$of$32$partial$32$record$32$field$32$selector) 36))
(assert (= (strLen lit$36$src$47$Scratch$47$Sample2.hs) 22))
(assert (= (strLen lit$36$IncList) 7))
(assert (= (strLen lit$36$Scratch.Sample2) 15))
(assert (= (strLen lit$36$LH$45$verificacion$45$asistida$45$0.1.0.0$45$5NHMYuhgw29Gnkg9iLcbdC) 55))
(assert (= (strLen lit$36$hd) 2))
(push 1)
(define-fun b$36$$35$$35$128 () Bool (= lq_anf$36$$35$$35$7205759403792808944$35$$35$d3Zu lq_anf$36$$35$$35$7205759403792808943$35$$35$d3Zt))
(define-fun b$36$$35$$35$144 () Bool (= lq_anf$36$$35$$35$7205759403792808956$35$$35$d3ZG 1))
(define-fun b$36$$35$$35$273 () Bool (and (= VV$35$$35$F$35$$35$45 3) (= VV$35$$35$F$35$$35$45 lq_anf$36$$35$$35$7205759403792808958$35$$35$d3ZI)))
(define-fun b$36$$35$$35$129 () Bool (= lq_anf$36$$35$$35$7205759403792808945$35$$35$d3Zv 11))
(define-fun b$36$$35$$35$145 () Bool (= lq_anf$36$$35$$35$7205759403792808957$35$$35$d3ZH 2))
(define-fun b$36$$35$$35$274 () Bool (<= x$35$$35$a3Vl VV$35$$35$F$35$$35$30))
(define-fun b$36$$35$$35$130 () Bool (= lq_anf$36$$35$$35$7205759403792808946$35$$35$d3Zw lq_anf$36$$35$$35$7205759403792808945$35$$35$d3Zv))
(define-fun b$36$$35$$35$146 () Bool (= lq_anf$36$$35$$35$7205759403792808958$35$$35$d3ZI 3))
(define-fun b$36$$35$$35$162 () Bool (and (= lq_anf$36$$35$$35$7205759403792808962$35$$35$d3ZM ds_d3Yn) (= lq_anf$36$$35$$35$7205759403792808962$35$$35$d3ZM (apply$35$$35$0 (apply$35$$35$0 (as Scratch.Sample2.$58$$60$ Int) x$35$$35$a3Vl) xs$35$$35$a3Vm)) (= (apply$35$$35$0 (as Scratch.Sample2.hd Int) lq_anf$36$$35$$35$7205759403792808962$35$$35$d3ZM) x$35$$35$a3Vl) (= (apply$35$$35$0 (as Scratch.Sample2.tl Int) lq_anf$36$$35$$35$7205759403792808962$35$$35$d3ZM) xs$35$$35$a3Vm)))
(define-fun b$36$$35$$35$275 () Bool false)
(define-fun b$36$$35$$35$131 () Bool (= lq_anf$36$$35$$35$7205759403792808947$35$$35$d3Zx 9))
(define-fun b$36$$35$$35$163 () Bool (= lq_anf$36$$35$$35$7205759403792808964$35$$35$d3ZO (<= y$35$$35$a3Vj x$35$$35$a3Vl)))
(define-fun b$36$$35$$35$276 () Bool (= VV$35$$35$F$35$$35$31 y$35$$35$a3Vj))
(define-fun b$36$$35$$35$132 () Bool (= lq_anf$36$$35$$35$7205759403792808948$35$$35$d3Zy lq_anf$36$$35$$35$7205759403792808947$35$$35$d3Zx))
(define-fun b$36$$35$$35$148 () Bool (and (= (apply$35$$35$0 (as Scratch.Sample2.hd Int) lq_anf$36$$35$$35$7205759403792808960$35$$35$d3ZK) lq_anf$36$$35$$35$7205759403792808958$35$$35$d3ZI) (= (apply$35$$35$0 (as Scratch.Sample2.tl Int) lq_anf$36$$35$$35$7205759403792808960$35$$35$d3ZK) lq_anf$36$$35$$35$7205759403792808959$35$$35$d3ZJ)))
(define-fun b$36$$35$$35$164 () Bool (and (= lq_anf$36$$35$$35$7205759403792808965$35$$35$d3ZP (<= y$35$$35$a3Vj x$35$$35$a3Vl)) (= lq_anf$36$$35$$35$7205759403792808965$35$$35$d3ZP lq_anf$36$$35$$35$7205759403792808964$35$$35$d3ZO)))
(define-fun b$36$$35$$35$133 () Bool (= lq_anf$36$$35$$35$7205759403792808949$35$$35$d3Zz 20))
(define-fun b$36$$35$$35$149 () Bool (and (= (apply$35$$35$0 (as Scratch.Sample2.hd Int) lq_anf$36$$35$$35$7205759403792808961$35$$35$d3ZL) lq_anf$36$$35$$35$7205759403792808957$35$$35$d3ZH) (= (apply$35$$35$0 (as Scratch.Sample2.tl Int) lq_anf$36$$35$$35$7205759403792808961$35$$35$d3ZL) lq_anf$36$$35$$35$7205759403792808960$35$$35$d3ZK)))
(define-fun b$36$$35$$35$165 () Bool (and (= lq_anf$36$$35$$35$7205759403792808965$35$$35$d3ZP (<= y$35$$35$a3Vj x$35$$35$a3Vl)) (= lq_anf$36$$35$$35$7205759403792808965$35$$35$d3ZP lq_anf$36$$35$$35$7205759403792808964$35$$35$d3ZO)))
(define-fun b$36$$35$$35$134 () Bool (= lq_anf$36$$35$$35$7205759403792808950$35$$35$d3ZA lq_anf$36$$35$$35$7205759403792808949$35$$35$d3Zz))
(define-fun b$36$$35$$35$166 () Bool (and (not lq_anf$36$$35$$35$7205759403792808965$35$$35$d3ZP) (= lq_anf$36$$35$$35$7205759403792808965$35$$35$d3ZP (<= y$35$$35$a3Vj x$35$$35$a3Vl)) (= lq_anf$36$$35$$35$7205759403792808965$35$$35$d3ZP lq_anf$36$$35$$35$7205759403792808964$35$$35$d3ZO)))
(define-fun b$36$$35$$35$119 () Bool (= lq_anf$36$$35$$35$7205759403792808935$35$$35$d3Zl lit$36$error))
(define-fun b$36$$35$$35$264 () Bool (<= x$35$$35$a3Vl VV$35$$35$F$35$$35$24))
(define-fun b$36$$35$$35$120 () Bool (and (= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792808936$35$$35$d3Zm) (strLen lq_anf$36$$35$$35$7205759403792808935$35$$35$d3Zl)) (>= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792808936$35$$35$d3Zm) 0) (= lq_anf$36$$35$$35$7205759403792808936$35$$35$d3Zm lq_anf$36$$35$$35$7205759403792808935$35$$35$d3Zl)))
(define-fun b$36$$35$$35$168 () Bool (and (= lq_anf$36$$35$$35$7205759403792808965$35$$35$d3ZP (<= y$35$$35$a3Vj x$35$$35$a3Vl)) (= lq_anf$36$$35$$35$7205759403792808965$35$$35$d3ZP lq_anf$36$$35$$35$7205759403792808964$35$$35$d3ZO)))
(define-fun b$36$$35$$35$121 () Bool (= lq_anf$36$$35$$35$7205759403792808937$35$$35$d3Zn lit$36$LH$45$verificacion$45$asistida$45$0.1.0.0$45$5NHMYuhgw29Gnkg9iLcbdC))
(define-fun b$36$$35$$35$137 () Bool (and (= (apply$35$$35$2 (as fst Int) lq_anf$36$$35$$35$7205759403792808952$35$$35$d3ZC) lq_anf$36$$35$$35$7205759403792808936$35$$35$d3Zm) (= (apply$35$$35$0 (as snd Int) lq_anf$36$$35$$35$7205759403792808952$35$$35$d3ZC) lq_anf$36$$35$$35$7205759403792808951$35$$35$d3ZB) (= (apply$35$$35$2 (as x_Tuple21 Int) lq_anf$36$$35$$35$7205759403792808952$35$$35$d3ZC) lq_anf$36$$35$$35$7205759403792808936$35$$35$d3Zm) (= (apply$35$$35$0 (as x_Tuple22 Int) lq_anf$36$$35$$35$7205759403792808952$35$$35$d3ZC) lq_anf$36$$35$$35$7205759403792808951$35$$35$d3ZB)))
(define-fun b$36$$35$$35$169 () Bool (and lq_anf$36$$35$$35$7205759403792808965$35$$35$d3ZP (= lq_anf$36$$35$$35$7205759403792808965$35$$35$d3ZP (<= y$35$$35$a3Vj x$35$$35$a3Vl)) (= lq_anf$36$$35$$35$7205759403792808965$35$$35$d3ZP lq_anf$36$$35$$35$7205759403792808964$35$$35$d3ZO)))
(define-fun b$36$$35$$35$266 () Bool (<= x$35$$35$a3Vl VV$35$$35$F$35$$35$25))
(define-fun b$36$$35$$35$122 () Bool (and (= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792808938$35$$35$d3Zo) (strLen lq_anf$36$$35$$35$7205759403792808937$35$$35$d3Zn)) (>= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792808938$35$$35$d3Zo) 0) (= lq_anf$36$$35$$35$7205759403792808938$35$$35$d3Zo lq_anf$36$$35$$35$7205759403792808937$35$$35$d3Zn)))
(define-fun b$36$$35$$35$170 () Bool (and (= (apply$35$$35$0 (as Scratch.Sample2.hd Int) lq_anf$36$$35$$35$7205759403792808967$35$$35$d3ZR) x$35$$35$a3Vl) (= (apply$35$$35$0 (as Scratch.Sample2.tl Int) lq_anf$36$$35$$35$7205759403792808967$35$$35$d3ZR) xs$35$$35$a3Vm)))
(define-fun b$36$$35$$35$43 () Bool (not GHC.Types.False))
(define-fun b$36$$35$$35$123 () Bool (= lq_anf$36$$35$$35$7205759403792808939$35$$35$d3Zp lit$36$Scratch.Sample2))
(define-fun b$36$$35$$35$139 () Bool (= lq_anf$36$$35$$35$7205759403792808954$35$$35$d3ZE lq_anf$36$$35$$35$7205759403792808953$35$$35$d3ZD))
(define-fun b$36$$35$$35$155 () Bool (= lq_anf$36$$35$$35$7205759403792808962$35$$35$d3ZM ds_d3Yn))
(define-fun b$36$$35$$35$268 () Bool (= VV$35$$35$F$35$$35$26 x$35$$35$a3Vl))
(define-fun b$36$$35$$35$124 () Bool (and (= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792808940$35$$35$d3Zq) (strLen lq_anf$36$$35$$35$7205759403792808939$35$$35$d3Zp)) (>= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792808940$35$$35$d3Zq) 0) (= lq_anf$36$$35$$35$7205759403792808940$35$$35$d3Zq lq_anf$36$$35$$35$7205759403792808939$35$$35$d3Zp)))
(define-fun b$36$$35$$35$156 () Bool (= lq_anf$36$$35$$35$7205759403792808962$35$$35$d3ZM ds_d3Yn))
(define-fun b$36$$35$$35$269 () Bool (and (= VV$35$$35$F$35$$35$42 2) (= VV$35$$35$F$35$$35$42 lq_anf$36$$35$$35$7205759403792808957$35$$35$d3ZH)))
(define-fun b$36$$35$$35$125 () Bool (= lq_anf$36$$35$$35$7205759403792808941$35$$35$d3Zr lit$36$src$47$Scratch$47$Sample2.hs))
(define-fun b$36$$35$$35$157 () Bool (and (= lq_anf$36$$35$$35$7205759403792808962$35$$35$d3ZM (as Scratch.Sample2.Emp Int)) (= lq_anf$36$$35$$35$7205759403792808962$35$$35$d3ZM ds_d3Yn)))
(define-fun b$36$$35$$35$46 () Bool GHC.Types.True)
(define-fun b$36$$35$$35$126 () Bool (and (= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792808942$35$$35$d3Zs) (strLen lq_anf$36$$35$$35$7205759403792808941$35$$35$d3Zr)) (>= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792808942$35$$35$d3Zs) 0) (= lq_anf$36$$35$$35$7205759403792808942$35$$35$d3Zs lq_anf$36$$35$$35$7205759403792808941$35$$35$d3Zr)))
(define-fun b$36$$35$$35$127 () Bool (= lq_anf$36$$35$$35$7205759403792808943$35$$35$d3Zt 9))
(define-fun b$36$$35$$35$159 () Bool (= lq_anf$36$$35$$35$7205759403792808962$35$$35$d3ZM ds_d3Yn))
(push 1)
(assert (and true b$36$$35$$35$275 b$36$$35$$35$43 b$36$$35$$35$46))
(push 1)
(assert (not false))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$8 (as len Int) VV$35$$35$F$35$$35$46) 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$8 (as len Int) VV$35$$35$F$35$$35$46) 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$8 (as len Int) VV$35$$35$F$35$$35$46) 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
(pop 1)
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
(pop 1)
(push 1)
(push 1)
(assert (and false b$36$$35$$35$43 b$36$$35$$35$155 b$36$$35$$35$156 b$36$$35$$35$157 b$36$$35$$35$46))
(push 1)
(assert (not (<= y$35$$35$a3Vj VV$35$$35$F$35$$35$34)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and false b$36$$35$$35$128 b$36$$35$$35$129 b$36$$35$$35$130 b$36$$35$$35$131 b$36$$35$$35$132 (and (= VV$35$$35$F$35$$35$50 msg$35$$35$a3Vg) (>= (apply$35$$35$8 (as len Int) VV$35$$35$F$35$$35$50) 0)) b$36$$35$$35$133 b$36$$35$$35$134 b$36$$35$$35$119 b$36$$35$$35$120 b$36$$35$$35$121 b$36$$35$$35$137 b$36$$35$$35$122 b$36$$35$$35$43 b$36$$35$$35$123 b$36$$35$$35$139 b$36$$35$$35$124 b$36$$35$$35$125 b$36$$35$$35$46 b$36$$35$$35$126 (>= (apply$35$$35$8 (as len Int) msg$35$$35$a3Vg) 0) b$36$$35$$35$127))
(push 1)
(assert (not false))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (or (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403792808962$35$$35$d3ZM$35$$35$k_$35$$35$1098 Int) (lq_karg$36$VV$35$$35$1097$35$$35$k_$35$$35$1098 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792808965$35$$35$d3ZP$35$$35$k_$35$$35$1098 Bool) (lq_karg$36$ds_d3Yn$35$$35$k_$35$$35$1098 Int) (lq_karg$36$Scratch.Sample2.okList$35$$35$k_$35$$35$1098 Int) (lq_karg$36$xs$35$$35$a3Vm$35$$35$k_$35$$35$1098 Int) (lq_karg$36$y$35$$35$a3Vj$35$$35$k_$35$$35$1098 Int) (lq_karg$36$x$35$$35$a3Vl$35$$35$k_$35$$35$1098 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792808964$35$$35$d3ZO$35$$35$k_$35$$35$1098 Bool)) (and (= lq_karg$36$Scratch.Sample2.okList$35$$35$k_$35$$35$1098 Scratch.Sample2.okList) (= lq_karg$36$VV$35$$35$1097$35$$35$k_$35$$35$1098 VV$35$$35$F$35$$35$21) (= lq_karg$36$ds_d3Yn$35$$35$k_$35$$35$1098 ds_d3Yn) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808962$35$$35$d3ZM$35$$35$k_$35$$35$1098 lq_anf$36$$35$$35$7205759403792808962$35$$35$d3ZM) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808964$35$$35$d3ZO$35$$35$k_$35$$35$1098 lq_anf$36$$35$$35$7205759403792808964$35$$35$d3ZO) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808965$35$$35$d3ZP$35$$35$k_$35$$35$1098 lq_anf$36$$35$$35$7205759403792808965$35$$35$d3ZP) (= lq_karg$36$x$35$$35$a3Vl$35$$35$k_$35$$35$1098 x$35$$35$a3Vl) (= lq_karg$36$xs$35$$35$a3Vm$35$$35$k_$35$$35$1098 xs$35$$35$a3Vm) (= lq_karg$36$y$35$$35$a3Vj$35$$35$k_$35$$35$1098 y$35$$35$a3Vj) (exists ((VV$35$$35$F$35$$35$26 Int)) (and (= VV$35$$35$F$35$$35$26 x$35$$35$a3Vl) (= lq_karg$36$Scratch.Sample2.okList$35$$35$k_$35$$35$1098 Scratch.Sample2.okList) (= lq_karg$36$VV$35$$35$1097$35$$35$k_$35$$35$1098 VV$35$$35$F$35$$35$26) (= lq_karg$36$ds_d3Yn$35$$35$k_$35$$35$1098 ds_d3Yn) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808962$35$$35$d3ZM$35$$35$k_$35$$35$1098 lq_anf$36$$35$$35$7205759403792808962$35$$35$d3ZM) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808964$35$$35$d3ZO$35$$35$k_$35$$35$1098 lq_anf$36$$35$$35$7205759403792808964$35$$35$d3ZO) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808965$35$$35$d3ZP$35$$35$k_$35$$35$1098 lq_anf$36$$35$$35$7205759403792808965$35$$35$d3ZP) (= lq_karg$36$x$35$$35$a3Vl$35$$35$k_$35$$35$1098 x$35$$35$a3Vl) (= lq_karg$36$xs$35$$35$a3Vm$35$$35$k_$35$$35$1098 xs$35$$35$a3Vm) (= lq_karg$36$y$35$$35$a3Vj$35$$35$k_$35$$35$1098 y$35$$35$a3Vj))))) (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403792808962$35$$35$d3ZM$35$$35$k_$35$$35$1098 Int) (lq_karg$36$VV$35$$35$1097$35$$35$k_$35$$35$1098 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792808965$35$$35$d3ZP$35$$35$k_$35$$35$1098 Bool) (lq_karg$36$ds_d3Yn$35$$35$k_$35$$35$1098 Int) (lq_karg$36$Scratch.Sample2.okList$35$$35$k_$35$$35$1098 Int) (lq_karg$36$xs$35$$35$a3Vm$35$$35$k_$35$$35$1098 Int) (lq_karg$36$y$35$$35$a3Vj$35$$35$k_$35$$35$1098 Int) (lq_karg$36$x$35$$35$a3Vl$35$$35$k_$35$$35$1098 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792808964$35$$35$d3ZO$35$$35$k_$35$$35$1098 Bool)) (and (= lq_karg$36$Scratch.Sample2.okList$35$$35$k_$35$$35$1098 Scratch.Sample2.okList) (= lq_karg$36$VV$35$$35$1097$35$$35$k_$35$$35$1098 VV$35$$35$F$35$$35$21) (= lq_karg$36$ds_d3Yn$35$$35$k_$35$$35$1098 ds_d3Yn) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808962$35$$35$d3ZM$35$$35$k_$35$$35$1098 lq_anf$36$$35$$35$7205759403792808962$35$$35$d3ZM) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808964$35$$35$d3ZO$35$$35$k_$35$$35$1098 lq_anf$36$$35$$35$7205759403792808964$35$$35$d3ZO) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808965$35$$35$d3ZP$35$$35$k_$35$$35$1098 lq_anf$36$$35$$35$7205759403792808965$35$$35$d3ZP) (= lq_karg$36$x$35$$35$a3Vl$35$$35$k_$35$$35$1098 x$35$$35$a3Vl) (= lq_karg$36$xs$35$$35$a3Vm$35$$35$k_$35$$35$1098 xs$35$$35$a3Vm) (= lq_karg$36$y$35$$35$a3Vj$35$$35$k_$35$$35$1098 y$35$$35$a3Vj) (exists ((VV$35$$35$F$35$$35$25 Int)) (and (<= x$35$$35$a3Vl VV$35$$35$F$35$$35$25) (= lq_karg$36$Scratch.Sample2.okList$35$$35$k_$35$$35$1098 Scratch.Sample2.okList) (= lq_karg$36$VV$35$$35$1097$35$$35$k_$35$$35$1098 VV$35$$35$F$35$$35$25) (= lq_karg$36$ds_d3Yn$35$$35$k_$35$$35$1098 ds_d3Yn) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808962$35$$35$d3ZM$35$$35$k_$35$$35$1098 lq_anf$36$$35$$35$7205759403792808962$35$$35$d3ZM) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808964$35$$35$d3ZO$35$$35$k_$35$$35$1098 lq_anf$36$$35$$35$7205759403792808964$35$$35$d3ZO) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808965$35$$35$d3ZP$35$$35$k_$35$$35$1098 lq_anf$36$$35$$35$7205759403792808965$35$$35$d3ZP) (= lq_karg$36$x$35$$35$a3Vl$35$$35$k_$35$$35$1098 x$35$$35$a3Vl) (= lq_karg$36$xs$35$$35$a3Vm$35$$35$k_$35$$35$1098 xs$35$$35$a3Vm) (= lq_karg$36$y$35$$35$a3Vj$35$$35$k_$35$$35$1098 y$35$$35$a3Vj)))))) b$36$$35$$35$162 b$36$$35$$35$163 b$36$$35$$35$164 b$36$$35$$35$168 b$36$$35$$35$169 b$36$$35$$35$170 b$36$$35$$35$43 b$36$$35$$35$155 b$36$$35$$35$46 b$36$$35$$35$159))
(push 1)
(assert (not (<= y$35$$35$a3Vj VV$35$$35$F$35$$35$21)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (or (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403792808958$35$$35$d3ZI$35$$35$k_$35$$35$937 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792808956$35$$35$d3ZG$35$$35$k_$35$$35$937 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792808960$35$$35$d3ZK$35$$35$k_$35$$35$937 Int) (lq_karg$36$VV$35$$35$936$35$$35$k_$35$$35$937 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792808959$35$$35$d3ZJ$35$$35$k_$35$$35$937 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792808957$35$$35$d3ZH$35$$35$k_$35$$35$937 Int)) (and (= lq_karg$36$VV$35$$35$936$35$$35$k_$35$$35$937 VV$35$$35$F$35$$35$37) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808956$35$$35$d3ZG$35$$35$k_$35$$35$937 lq_anf$36$$35$$35$7205759403792808956$35$$35$d3ZG) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808957$35$$35$d3ZH$35$$35$k_$35$$35$937 lq_anf$36$$35$$35$7205759403792808957$35$$35$d3ZH) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808958$35$$35$d3ZI$35$$35$k_$35$$35$937 lq_anf$36$$35$$35$7205759403792808958$35$$35$d3ZI) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808959$35$$35$d3ZJ$35$$35$k_$35$$35$937 lq_anf$36$$35$$35$7205759403792808959$35$$35$d3ZJ) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808960$35$$35$d3ZK$35$$35$k_$35$$35$937 lq_anf$36$$35$$35$7205759403792808960$35$$35$d3ZK) (exists ((VV$35$$35$F$35$$35$42 Int)) (and (= VV$35$$35$F$35$$35$42 2) (= VV$35$$35$F$35$$35$42 lq_anf$36$$35$$35$7205759403792808957$35$$35$d3ZH) (= lq_karg$36$VV$35$$35$936$35$$35$k_$35$$35$937 VV$35$$35$F$35$$35$42) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808956$35$$35$d3ZG$35$$35$k_$35$$35$937 lq_anf$36$$35$$35$7205759403792808956$35$$35$d3ZG) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808957$35$$35$d3ZH$35$$35$k_$35$$35$937 lq_anf$36$$35$$35$7205759403792808957$35$$35$d3ZH) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808958$35$$35$d3ZI$35$$35$k_$35$$35$937 lq_anf$36$$35$$35$7205759403792808958$35$$35$d3ZI) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808959$35$$35$d3ZJ$35$$35$k_$35$$35$937 lq_anf$36$$35$$35$7205759403792808959$35$$35$d3ZJ) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808960$35$$35$d3ZK$35$$35$k_$35$$35$937 lq_anf$36$$35$$35$7205759403792808960$35$$35$d3ZK))))) (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403792808958$35$$35$d3ZI$35$$35$k_$35$$35$937 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792808956$35$$35$d3ZG$35$$35$k_$35$$35$937 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792808960$35$$35$d3ZK$35$$35$k_$35$$35$937 Int) (lq_karg$36$VV$35$$35$936$35$$35$k_$35$$35$937 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792808959$35$$35$d3ZJ$35$$35$k_$35$$35$937 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792808957$35$$35$d3ZH$35$$35$k_$35$$35$937 Int)) (and (= lq_karg$36$VV$35$$35$936$35$$35$k_$35$$35$937 VV$35$$35$F$35$$35$37) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808956$35$$35$d3ZG$35$$35$k_$35$$35$937 lq_anf$36$$35$$35$7205759403792808956$35$$35$d3ZG) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808957$35$$35$d3ZH$35$$35$k_$35$$35$937 lq_anf$36$$35$$35$7205759403792808957$35$$35$d3ZH) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808958$35$$35$d3ZI$35$$35$k_$35$$35$937 lq_anf$36$$35$$35$7205759403792808958$35$$35$d3ZI) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808959$35$$35$d3ZJ$35$$35$k_$35$$35$937 lq_anf$36$$35$$35$7205759403792808959$35$$35$d3ZJ) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808960$35$$35$d3ZK$35$$35$k_$35$$35$937 lq_anf$36$$35$$35$7205759403792808960$35$$35$d3ZK) (exists ((VV$35$$35$F$35$$35$41 Int)) (and (or (exists ((lq_karg$36$VV$35$$35$920$35$$35$k_$35$$35$921 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792808959$35$$35$d3ZJ$35$$35$k_$35$$35$921 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792808958$35$$35$d3ZI$35$$35$k_$35$$35$921 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792808956$35$$35$d3ZG$35$$35$k_$35$$35$921 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792808957$35$$35$d3ZH$35$$35$k_$35$$35$921 Int)) (and (= lq_karg$36$VV$35$$35$920$35$$35$k_$35$$35$921 VV$35$$35$F$35$$35$41) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808956$35$$35$d3ZG$35$$35$k_$35$$35$921 lq_anf$36$$35$$35$7205759403792808956$35$$35$d3ZG) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808957$35$$35$d3ZH$35$$35$k_$35$$35$921 lq_anf$36$$35$$35$7205759403792808957$35$$35$d3ZH) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808958$35$$35$d3ZI$35$$35$k_$35$$35$921 lq_anf$36$$35$$35$7205759403792808958$35$$35$d3ZI) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808959$35$$35$d3ZJ$35$$35$k_$35$$35$921 lq_anf$36$$35$$35$7205759403792808959$35$$35$d3ZJ) (exists ((VV$35$$35$F$35$$35$45 Int)) (and (= VV$35$$35$F$35$$35$45 3) (= VV$35$$35$F$35$$35$45 lq_anf$36$$35$$35$7205759403792808958$35$$35$d3ZI) (= lq_karg$36$VV$35$$35$920$35$$35$k_$35$$35$921 VV$35$$35$F$35$$35$45) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808956$35$$35$d3ZG$35$$35$k_$35$$35$921 lq_anf$36$$35$$35$7205759403792808956$35$$35$d3ZG) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808957$35$$35$d3ZH$35$$35$k_$35$$35$921 lq_anf$36$$35$$35$7205759403792808957$35$$35$d3ZH) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808958$35$$35$d3ZI$35$$35$k_$35$$35$921 lq_anf$36$$35$$35$7205759403792808958$35$$35$d3ZI) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808959$35$$35$d3ZJ$35$$35$k_$35$$35$921 lq_anf$36$$35$$35$7205759403792808959$35$$35$d3ZJ))))) (exists ((lq_karg$36$VV$35$$35$920$35$$35$k_$35$$35$921 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792808959$35$$35$d3ZJ$35$$35$k_$35$$35$921 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792808958$35$$35$d3ZI$35$$35$k_$35$$35$921 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792808956$35$$35$d3ZG$35$$35$k_$35$$35$921 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792808957$35$$35$d3ZH$35$$35$k_$35$$35$921 Int)) (and (= lq_karg$36$VV$35$$35$920$35$$35$k_$35$$35$921 VV$35$$35$F$35$$35$41) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808956$35$$35$d3ZG$35$$35$k_$35$$35$921 lq_anf$36$$35$$35$7205759403792808956$35$$35$d3ZG) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808957$35$$35$d3ZH$35$$35$k_$35$$35$921 lq_anf$36$$35$$35$7205759403792808957$35$$35$d3ZH) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808958$35$$35$d3ZI$35$$35$k_$35$$35$921 lq_anf$36$$35$$35$7205759403792808958$35$$35$d3ZI) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808959$35$$35$d3ZJ$35$$35$k_$35$$35$921 lq_anf$36$$35$$35$7205759403792808959$35$$35$d3ZJ) (exists ((VV$35$$35$F$35$$35$44 Int)) false)))) (= lq_karg$36$VV$35$$35$936$35$$35$k_$35$$35$937 VV$35$$35$F$35$$35$41) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808956$35$$35$d3ZG$35$$35$k_$35$$35$937 lq_anf$36$$35$$35$7205759403792808956$35$$35$d3ZG) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808957$35$$35$d3ZH$35$$35$k_$35$$35$937 lq_anf$36$$35$$35$7205759403792808957$35$$35$d3ZH) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808958$35$$35$d3ZI$35$$35$k_$35$$35$937 lq_anf$36$$35$$35$7205759403792808958$35$$35$d3ZI) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808959$35$$35$d3ZJ$35$$35$k_$35$$35$937 lq_anf$36$$35$$35$7205759403792808959$35$$35$d3ZJ) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808960$35$$35$d3ZK$35$$35$k_$35$$35$937 lq_anf$36$$35$$35$7205759403792808960$35$$35$d3ZK)))))) b$36$$35$$35$144 b$36$$35$$35$145 b$36$$35$$35$146 b$36$$35$$35$148 b$36$$35$$35$149 b$36$$35$$35$43 b$36$$35$$35$46))
(push 1)
(assert (not (<= lq_anf$36$$35$$35$7205759403792808956$35$$35$d3ZG VV$35$$35$F$35$$35$37)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$162 b$36$$35$$35$163 b$36$$35$$35$164 b$36$$35$$35$264 b$36$$35$$35$168 b$36$$35$$35$169 b$36$$35$$35$43 b$36$$35$$35$155 b$36$$35$$35$46 b$36$$35$$35$159))
(push 1)
(assert (not (<= x$35$$35$a3Vl VV$35$$35$F$35$$35$24)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (or (exists ((lq_karg$36$VV$35$$35$920$35$$35$k_$35$$35$921 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792808959$35$$35$d3ZJ$35$$35$k_$35$$35$921 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792808958$35$$35$d3ZI$35$$35$k_$35$$35$921 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792808956$35$$35$d3ZG$35$$35$k_$35$$35$921 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792808957$35$$35$d3ZH$35$$35$k_$35$$35$921 Int)) (and (= lq_karg$36$VV$35$$35$920$35$$35$k_$35$$35$921 VV$35$$35$F$35$$35$40) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808956$35$$35$d3ZG$35$$35$k_$35$$35$921 lq_anf$36$$35$$35$7205759403792808956$35$$35$d3ZG) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808957$35$$35$d3ZH$35$$35$k_$35$$35$921 lq_anf$36$$35$$35$7205759403792808957$35$$35$d3ZH) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808958$35$$35$d3ZI$35$$35$k_$35$$35$921 lq_anf$36$$35$$35$7205759403792808958$35$$35$d3ZI) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808959$35$$35$d3ZJ$35$$35$k_$35$$35$921 lq_anf$36$$35$$35$7205759403792808959$35$$35$d3ZJ) (exists ((VV$35$$35$F$35$$35$45 Int)) (and (= VV$35$$35$F$35$$35$45 3) (= VV$35$$35$F$35$$35$45 lq_anf$36$$35$$35$7205759403792808958$35$$35$d3ZI) (= lq_karg$36$VV$35$$35$920$35$$35$k_$35$$35$921 VV$35$$35$F$35$$35$45) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808956$35$$35$d3ZG$35$$35$k_$35$$35$921 lq_anf$36$$35$$35$7205759403792808956$35$$35$d3ZG) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808957$35$$35$d3ZH$35$$35$k_$35$$35$921 lq_anf$36$$35$$35$7205759403792808957$35$$35$d3ZH) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808958$35$$35$d3ZI$35$$35$k_$35$$35$921 lq_anf$36$$35$$35$7205759403792808958$35$$35$d3ZI) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808959$35$$35$d3ZJ$35$$35$k_$35$$35$921 lq_anf$36$$35$$35$7205759403792808959$35$$35$d3ZJ))))) (exists ((lq_karg$36$VV$35$$35$920$35$$35$k_$35$$35$921 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792808959$35$$35$d3ZJ$35$$35$k_$35$$35$921 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792808958$35$$35$d3ZI$35$$35$k_$35$$35$921 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792808956$35$$35$d3ZG$35$$35$k_$35$$35$921 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792808957$35$$35$d3ZH$35$$35$k_$35$$35$921 Int)) (and (= lq_karg$36$VV$35$$35$920$35$$35$k_$35$$35$921 VV$35$$35$F$35$$35$40) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808956$35$$35$d3ZG$35$$35$k_$35$$35$921 lq_anf$36$$35$$35$7205759403792808956$35$$35$d3ZG) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808957$35$$35$d3ZH$35$$35$k_$35$$35$921 lq_anf$36$$35$$35$7205759403792808957$35$$35$d3ZH) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808958$35$$35$d3ZI$35$$35$k_$35$$35$921 lq_anf$36$$35$$35$7205759403792808958$35$$35$d3ZI) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808959$35$$35$d3ZJ$35$$35$k_$35$$35$921 lq_anf$36$$35$$35$7205759403792808959$35$$35$d3ZJ) (exists ((VV$35$$35$F$35$$35$44 Int)) false)))) b$36$$35$$35$144 b$36$$35$$35$145 b$36$$35$$35$146 b$36$$35$$35$148 b$36$$35$$35$43 b$36$$35$$35$46))
(push 1)
(assert (not (<= lq_anf$36$$35$$35$7205759403792808957$35$$35$d3ZH VV$35$$35$F$35$$35$40)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (or (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403792808964$35$$35$d3ZO$35$$35$k_$35$$35$1060 Bool) (lq_karg$36$VV$35$$35$1059$35$$35$k_$35$$35$1060 Int) (lq_karg$36$x$35$$35$a3Vl$35$$35$k_$35$$35$1060 Int) (lq_karg$36$y$35$$35$a3Vj$35$$35$k_$35$$35$1060 Int) (lq_karg$36$xs$35$$35$a3Vm$35$$35$k_$35$$35$1060 Int) (lq_karg$36$Scratch.Sample2.okList$35$$35$k_$35$$35$1060 Int) (lq_karg$36$ds_d3Yn$35$$35$k_$35$$35$1060 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792808965$35$$35$d3ZP$35$$35$k_$35$$35$1060 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792808962$35$$35$d3ZM$35$$35$k_$35$$35$1060 Int)) (and (= lq_karg$36$Scratch.Sample2.okList$35$$35$k_$35$$35$1060 Scratch.Sample2.okList) (= lq_karg$36$VV$35$$35$1059$35$$35$k_$35$$35$1060 VV$35$$35$F$35$$35$27) (= lq_karg$36$ds_d3Yn$35$$35$k_$35$$35$1060 ds_d3Yn) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808962$35$$35$d3ZM$35$$35$k_$35$$35$1060 lq_anf$36$$35$$35$7205759403792808962$35$$35$d3ZM) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808964$35$$35$d3ZO$35$$35$k_$35$$35$1060 lq_anf$36$$35$$35$7205759403792808964$35$$35$d3ZO) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808965$35$$35$d3ZP$35$$35$k_$35$$35$1060 lq_anf$36$$35$$35$7205759403792808965$35$$35$d3ZP) (= lq_karg$36$x$35$$35$a3Vl$35$$35$k_$35$$35$1060 x$35$$35$a3Vl) (= lq_karg$36$xs$35$$35$a3Vm$35$$35$k_$35$$35$1060 xs$35$$35$a3Vm) (= lq_karg$36$y$35$$35$a3Vj$35$$35$k_$35$$35$1060 y$35$$35$a3Vj) (exists ((VV$35$$35$F$35$$35$31 Int)) (and (= VV$35$$35$F$35$$35$31 y$35$$35$a3Vj) (= lq_karg$36$Scratch.Sample2.okList$35$$35$k_$35$$35$1060 Scratch.Sample2.okList) (= lq_karg$36$VV$35$$35$1059$35$$35$k_$35$$35$1060 VV$35$$35$F$35$$35$31) (= lq_karg$36$ds_d3Yn$35$$35$k_$35$$35$1060 ds_d3Yn) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808962$35$$35$d3ZM$35$$35$k_$35$$35$1060 lq_anf$36$$35$$35$7205759403792808962$35$$35$d3ZM) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808964$35$$35$d3ZO$35$$35$k_$35$$35$1060 lq_anf$36$$35$$35$7205759403792808964$35$$35$d3ZO) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808965$35$$35$d3ZP$35$$35$k_$35$$35$1060 lq_anf$36$$35$$35$7205759403792808965$35$$35$d3ZP) (= lq_karg$36$x$35$$35$a3Vl$35$$35$k_$35$$35$1060 x$35$$35$a3Vl) (= lq_karg$36$xs$35$$35$a3Vm$35$$35$k_$35$$35$1060 xs$35$$35$a3Vm) (= lq_karg$36$y$35$$35$a3Vj$35$$35$k_$35$$35$1060 y$35$$35$a3Vj))))) (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403792808964$35$$35$d3ZO$35$$35$k_$35$$35$1060 Bool) (lq_karg$36$VV$35$$35$1059$35$$35$k_$35$$35$1060 Int) (lq_karg$36$x$35$$35$a3Vl$35$$35$k_$35$$35$1060 Int) (lq_karg$36$y$35$$35$a3Vj$35$$35$k_$35$$35$1060 Int) (lq_karg$36$xs$35$$35$a3Vm$35$$35$k_$35$$35$1060 Int) (lq_karg$36$Scratch.Sample2.okList$35$$35$k_$35$$35$1060 Int) (lq_karg$36$ds_d3Yn$35$$35$k_$35$$35$1060 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792808965$35$$35$d3ZP$35$$35$k_$35$$35$1060 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792808962$35$$35$d3ZM$35$$35$k_$35$$35$1060 Int)) (and (= lq_karg$36$Scratch.Sample2.okList$35$$35$k_$35$$35$1060 Scratch.Sample2.okList) (= lq_karg$36$VV$35$$35$1059$35$$35$k_$35$$35$1060 VV$35$$35$F$35$$35$27) (= lq_karg$36$ds_d3Yn$35$$35$k_$35$$35$1060 ds_d3Yn) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808962$35$$35$d3ZM$35$$35$k_$35$$35$1060 lq_anf$36$$35$$35$7205759403792808962$35$$35$d3ZM) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808964$35$$35$d3ZO$35$$35$k_$35$$35$1060 lq_anf$36$$35$$35$7205759403792808964$35$$35$d3ZO) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808965$35$$35$d3ZP$35$$35$k_$35$$35$1060 lq_anf$36$$35$$35$7205759403792808965$35$$35$d3ZP) (= lq_karg$36$x$35$$35$a3Vl$35$$35$k_$35$$35$1060 x$35$$35$a3Vl) (= lq_karg$36$xs$35$$35$a3Vm$35$$35$k_$35$$35$1060 xs$35$$35$a3Vm) (= lq_karg$36$y$35$$35$a3Vj$35$$35$k_$35$$35$1060 y$35$$35$a3Vj) (exists ((VV$35$$35$F$35$$35$30 Int)) (and (<= x$35$$35$a3Vl VV$35$$35$F$35$$35$30) (= lq_karg$36$Scratch.Sample2.okList$35$$35$k_$35$$35$1060 Scratch.Sample2.okList) (= lq_karg$36$VV$35$$35$1059$35$$35$k_$35$$35$1060 VV$35$$35$F$35$$35$30) (= lq_karg$36$ds_d3Yn$35$$35$k_$35$$35$1060 ds_d3Yn) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808962$35$$35$d3ZM$35$$35$k_$35$$35$1060 lq_anf$36$$35$$35$7205759403792808962$35$$35$d3ZM) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808964$35$$35$d3ZO$35$$35$k_$35$$35$1060 lq_anf$36$$35$$35$7205759403792808964$35$$35$d3ZO) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808965$35$$35$d3ZP$35$$35$k_$35$$35$1060 lq_anf$36$$35$$35$7205759403792808965$35$$35$d3ZP) (= lq_karg$36$x$35$$35$a3Vl$35$$35$k_$35$$35$1060 x$35$$35$a3Vl) (= lq_karg$36$xs$35$$35$a3Vm$35$$35$k_$35$$35$1060 xs$35$$35$a3Vm) (= lq_karg$36$y$35$$35$a3Vj$35$$35$k_$35$$35$1060 y$35$$35$a3Vj)))))) b$36$$35$$35$162 b$36$$35$$35$163 b$36$$35$$35$164 b$36$$35$$35$165 b$36$$35$$35$166 b$36$$35$$35$43 b$36$$35$$35$155 b$36$$35$$35$46 b$36$$35$$35$159))
(push 1)
(assert (not (<= x$35$$35$a3Vl VV$35$$35$F$35$$35$27)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and false b$36$$35$$35$144 b$36$$35$$35$145 b$36$$35$$35$146 b$36$$35$$35$43 b$36$$35$$35$46))
(push 1)
(assert (not (<= lq_anf$36$$35$$35$7205759403792808958$35$$35$d3ZI VV$35$$35$F$35$$35$43)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(pop 1)
(pop 1)
(exit)
