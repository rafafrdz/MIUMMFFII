(set-option :auto-config false)
(set-option :model true)
(set-option :model.partial false)

(set-option :smt.mbqi false)

(define-sort Str () Int)
(declare-fun strLen (Str) Int)
(declare-fun subString (Str Int Int) Str)
(declare-fun concatString (Str Str) Str)
(define-sort Elt () Int)
(define-sort LSet () (Array Elt Bool))
(define-fun smt_set_emp () LSet ((as const LSet) false))
(define-fun smt_set_sng ((x Elt)) LSet (store ((as const LSet) false) x true))
(define-fun smt_set_mem ((x Elt) (s LSet)) Bool (select s x))
(define-fun smt_set_add ((s LSet) (x Elt)) LSet (store s x true))
(define-fun smt_set_cup ((s1 LSet) (s2 LSet)) LSet ((_ map or) s1 s2))
(define-fun smt_set_cap ((s1 LSet) (s2 LSet)) LSet ((_ map and) s1 s2))
(define-fun smt_set_com ((s LSet)) LSet ((_ map not) s))
(define-fun smt_set_dif ((s1 LSet) (s2 LSet)) LSet (smt_set_cap s1 (smt_set_com s2)))
(define-fun smt_set_sub ((s1 LSet) (s2 LSet)) Bool (= smt_set_emp (smt_set_dif s1 s2)))
(define-sort Map () (Array Elt Elt))
(define-fun smt_map_sel ((m Map) (k Elt)) Elt (select m k))
(define-fun smt_map_sto ((m Map) (k Elt) (v Elt)) Map (store m k v))
(define-fun smt_map_cup ((m1 Map) (m2 Map)) Map ((_ map (+ (Elt Elt) Elt)) m1 m2))
(define-fun smt_map_def ((v Elt)) Map ((as const (Map)) v))
(define-fun bool_to_int ((b Bool)) Int (ite b 1 0))
(define-fun Z3_OP_MUL ((x Int) (y Int)) Int (* x y))
(define-fun Z3_OP_DIV ((x Int) (y Int)) Int (div x y))
(declare-fun lq_karg$36$x$35$$35$a1ov$35$$35$k_$35$$35$3380 () Int)
(declare-fun lq_tmp$36$x$35$$35$3822 () Int)
(declare-fun lq_tmp$36$x$35$$35$3653 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801075$35$$35$d1Wz () Int)
(declare-fun GHC.Base.id () Int)
(declare-fun lq_tmp$36$x$35$$35$3536 () Int)
(declare-fun VV$35$$35$F$35$$35$277 () Str)
(declare-fun cast_as_int () Int)
(declare-fun wxs$35$$35$a1qi () Int)
(declare-fun Example.avg2 () Int)
(declare-fun lq_tmp$36$x$35$$35$1211 () Int)
(declare-fun lq_tmp$36$x$35$$35$4520 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801095$35$$35$d1WT () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV () Int)
(declare-fun lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4682 () Int)
(declare-fun lq_karg$36$totWeight$35$$35$a1qm$35$$35$k_$35$$35$4897 () Int)
(declare-fun lq_tmp$36$x$35$$35$2238 () Int)
(declare-fun VV$35$$35$F$35$$35$211 () Int)
(declare-fun ds_d1TM () Int)
(declare-fun GHC.List.init () Int)
(declare-fun lq_tmp$36$x$35$$35$4917 () Int)
(declare-fun VV$35$$35$F$35$$35$233 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801091$35$$35$d1WP () Int)
(declare-fun lq_tmp$36$x$35$$35$1864 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801093$35$$35$d1WR () Str)
(declare-fun lq_karg$36$y$35$$35$a1qw$35$$35$k_$35$$35$1870 () Int)
(declare-fun addrLen () Int)
(declare-fun lq_tmp$36$x$35$$35$784 () Int)
(declare-fun lq_tmp$36$x$35$$35$1332 () Int)
(declare-fun x$35$$35$a1os () Int)
(declare-fun lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4755 () Int)
(declare-fun VV$35$$35$F$35$$35$208 () Int)
(declare-fun ds_d1Ut () Int)
(declare-fun papp5 () Int)
(declare-fun lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4554 () Int)
(declare-fun lit$36$$47$home$47$ricardo$47$docencia$47$verifAsistid$47$2021$45$22$47$versionProfesor$47$LiquidHaskell$47$lh$45$tests$47$src$47$Example.lhs () Str)
(declare-fun GHC.List.iterate () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801118$35$$35$d1Xg () Str)
(declare-fun VV$35$$35$F$35$$35$13 () Int)
(declare-fun x_Tuple21 () Int)
(declare-fun lq_tmp$36$x$35$$35$4326 () Int)
(declare-fun total$35$$35$a1oi () Int)
(declare-fun lq_karg$36$lq_tmp$36$x$35$$35$1871$35$$35$k_$35$$35$1888 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801105$35$$35$d1X3 () Bool)
(declare-fun lq_anf$36$$35$$35$7205759403792801135$35$$35$d1Xx () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801099$35$$35$d1WX () Int)
(declare-fun zs$35$$35$a1vc () Int)
(declare-fun lq_karg$36$totWeight$35$$35$a1qm$35$$35$k_$35$$35$4806 () Int)
(declare-fun GHC.Classes.$61$$61$ () Int)
(declare-fun lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4906 () Int)
(declare-fun x$35$$35$a1qf () Int)
(declare-fun GHC.Types.C$35$ () Int)
(declare-fun GHC.List.drop () Int)
(declare-fun VV$35$$35$F$35$$35$100 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801123$35$$35$d1Xl () Int)
(declare-fun lq_karg$36$etc$35$$35$a1qx$35$$35$k_$35$$35$1989 () Int)
(declare-fun lq_tmp$36$x$35$$35$743 () Int)
(declare-fun lq_tmp$36$x$35$$35$877 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792801133$35$$35$d1Xv$35$$35$k_$35$$35$3063 () Int)
(declare-fun VV$35$$35$F$35$$35$18 () Int)
(declare-fun elems$35$$35$a1oj () Int)
(declare-fun lit$36$Hello () Str)
(declare-fun lit$36$cannot$32$add$32$up$32$empty$32$list () Str)
(declare-fun xs$35$$35$a1ok () Int)
(declare-fun lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4684 () Int)
(declare-fun ds_d1V4 () Int)
(declare-fun lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4816 () Int)
(declare-fun lq_tmp$36$x$35$$35$4628 () Int)
(declare-fun s$35$$35$a1Lx () Int)
(declare-fun y$35$$35$a1qw () Int)
(declare-fun ds_d1Si () Int)
(declare-fun lq_karg$36$etc$35$$35$a1qx$35$$35$k_$35$$35$1888 () Int)
(declare-fun Example.safeHead () Int)
(declare-fun VV$35$$35$F$35$$35$23 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801162$35$$35$d1XY () Int)
(declare-fun lq_tmp$36$x$35$$35$1067 () Int)
(declare-fun lq_tmp$36$x$35$$35$4895 () Int)
(declare-fun lq_karg$36$ds_d1RU$35$$35$k_$35$$35$3380 () Int)
(declare-fun Data.Foldable.length () Int)
(declare-fun lq_karg$36$weights$35$$35$a1qk$35$$35$k_$35$$35$4816 () Int)
(declare-fun x_Tuple33 () Int)
(declare-fun lq_tmp$36$x$35$$35$2057 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801061$35$$35$d1Wl () Str)
(declare-fun GHC.Types.LT () Int)
(declare-fun lq_tmp$36$x$35$$35$4477 () Int)
(declare-fun VV$35$$35$F$35$$35$45 () Int)
(declare-fun fix$36$$36$dEq_a1FZ () Int)
(declare-fun GHC.List.replicate () Int)
(declare-fun GHC.List.zipWith () Int)
(declare-fun VV$35$$35$F$35$$35$89 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801063$35$$35$d1Wn () Str)
(declare-fun lq_tmp$36$x$35$$35$778 () Int)
(declare-fun lq_tmp$36$x$35$$35$1166 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801069$35$$35$d1Wt () Int)
(declare-fun lq_tmp$36$x$35$$35$4387 () Int)
(declare-fun lq_tmp$36$x$35$$35$2376 () Int)
(declare-fun lq_karg$36$y$35$$35$a1qw$35$$35$k_$35$$35$1826 () Int)
(declare-fun GHC.Classes.$62$$61$ () Int)
(declare-fun lq_karg$36$ys$35$$35$a1va$35$$35$k_$35$$35$3242 () Int)
(declare-fun lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4750 () Int)
(declare-fun lq_tmp$36$x$35$$35$1905 () Int)
(declare-fun ds_d1VY () Int)
(declare-fun Example.average$39$ () Int)
(declare-fun xs$35$$35$a1q8 () Int)
(declare-fun Example.size1 () Int)
(declare-fun GHC.Num.fromInteger () Int)
(declare-fun lq_karg$36$VV$35$$35$623$35$$35$k_$35$$35$624 () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792801171$35$$35$d1Y7 () Int)
(declare-fun fix$36$$36$dIP_a1E9 () Int)
(declare-fun papp3 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801150$35$$35$d1XM () Int)
(declare-fun VV$35$$35$F$35$$35$136 () Bool)
(declare-fun lq_tmp$36$x$35$$35$4809 () Int)
(declare-fun lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4750 () Int)
(declare-fun lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4753 () Int)
(declare-fun VV$35$$35$F$35$$35$15 () Int)
(declare-fun lq_tmp$36$x$35$$35$1598 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1$35$$35$k_$35$$35$1853 () Int)
(declare-fun lq_karg$36$ds_d1RH$35$$35$k_$35$$35$3380 () Int)
(declare-fun GHC.List.span () Int)
(declare-fun Example.map () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW$35$$35$k_$35$$35$1826 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801139$35$$35$d1XB () Int)
(declare-fun lq_karg$36$VV$35$$35$4747$35$$35$k_$35$$35$4748 () Int)
(declare-fun lq_tmp$36$x$35$$35$1958 () Int)
(declare-fun lq_tmp$36$x$35$$35$2971 () Int)
(declare-fun lq_karg$36$VV$35$$35$1887$35$$35$k_$35$$35$1888 () Int)
(declare-fun lq_karg$36$ds_d1Ut$35$$35$k_$35$$35$4816 () Int)
(declare-fun lq_karg$36$VV$35$$35$4807$35$$35$k_$35$$35$4808 () Int)
(declare-fun GHC.Classes.$62$ () Int)
(declare-fun lq_karg$36$etc$35$$35$a1qx$35$$35$k_$35$$35$2071 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801170$35$$35$d1Y6 () Int)
(declare-fun Example.risers () Int)
(declare-fun fix$36$$36$dOrd_a1Lp () Int)
(declare-fun VV$35$$35$F$35$$35$271 () Str)
(declare-fun lq_tmp$36$x$35$$35$2205 () Int)
(declare-fun lq_tmp$36$x$35$$35$3680 () Int)
(declare-fun lq_tmp$36$x$35$$35$4122 () Int)
(declare-fun lq_tmp$36$x$35$$35$1073 () Int)
(declare-fun lq_karg$36$ds_d1VY$35$$35$k_$35$$35$1826 () Int)
(declare-fun GHC.Types.False () Bool)
(declare-fun lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4684 () Int)
(declare-fun GHC.List.scanr1 () Int)
(declare-fun VV$35$$35$F$35$$35$149 () Int)
(declare-fun VV$35$$35$F$35$$35$84 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801158$35$$35$d1XU () Int)
(declare-fun lq_tmp$36$x$35$$35$959 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801152$35$$35$d1XO () Int)
(declare-fun lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4687 () Int)
(declare-fun lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4816 () Int)
(declare-fun Example.sumBad () Int)
(declare-fun lq_tmp$36$x$35$$35$1408 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801094$35$$35$d1WS () Int)
(declare-fun lq_karg$36$etc$35$$35$a1qx$35$$35$k_$35$$35$1836 () Int)
(declare-fun lq_tmp$36$x$35$$35$1892 () Int)
(declare-fun lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4811 () Int)
(declare-fun lq_tmp$36$x$35$$35$4745 () Int)
(declare-fun lq_tmp$36$x$35$$35$3313 () Int)
(declare-fun GHC.Types.$58$ () Int)
(declare-fun lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4894 () Int)
(declare-fun Example.avgMany () Int)
(declare-fun GHC.Real.div () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792801133$35$$35$d1Xv$35$$35$k_$35$$35$3186 () Int)
(declare-fun GHC.List.scanl () Int)
(declare-fun lit$36$error () Str)
(declare-fun lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4679 () Int)
(declare-fun lq_karg$36$y$35$$35$a1qw$35$$35$k_$35$$35$1853 () Int)
(declare-fun Example.sum () Int)
(declare-fun VV$35$$35$F$35$$35$128 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801148$35$$35$d1XK () Bool)
(declare-fun lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4677 () Int)
(declare-fun lq_karg$36$ds_d1Vg$35$$35$k_$35$$35$2071 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2$35$$35$k_$35$$35$1836 () Int)
(declare-fun lq_karg$36$weights$35$$35$a1qk$35$$35$k_$35$$35$4894 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2$35$$35$k_$35$$35$2071 () Int)
(declare-fun lq_tmp$36$x$35$$35$2293 () Int)
(declare-fun GHC.Tuple.$40$$44$$44$$41$ () Int)
(declare-fun papp4 () Int)
(declare-fun GHC.Types.Module () Int)
(declare-fun lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4481 () Int)
(declare-fun VV$35$$35$F$35$$35$12 () Int)
(declare-fun lq_tmp$36$x$35$$35$1838 () Int)
(declare-fun ds_d1Tl () Int)
(declare-fun GHC.List.zip () Int)
(declare-fun lq_tmp$36$x$35$$35$3382 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801140$35$$35$d1XC () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792801144$35$$35$d1XG () Str)
(declare-fun ds_d1S3 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV$35$$35$k_$35$$35$2071 () Int)
(declare-fun lq_karg$36$totWeight$35$$35$a1qm$35$$35$k_$35$$35$4906 () Int)
(declare-fun lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4806 () Int)
(declare-fun VV$35$$35$F$35$$35$281 () Str)
(declare-fun VV$35$$35$F$35$$35$29 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801066$35$$35$d1Wq () Int)
(declare-fun lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4897 () Int)
(declare-fun lq_tmp$36$x$35$$35$4439 () Int)
(declare-fun GHC.Tuple.$40$$41$ () Int)
(declare-fun VV$35$$35$F$35$$35$276 () Int)
(declare-fun lq_karg$36$ds_d1Vg$35$$35$k_$35$$35$1836 () Int)
(declare-fun GHC.Types.I$35$ () Int)
(declare-fun GHC.Stack.Types.SrcLoc () Int)
(declare-fun Example.avg3 () Int)
(declare-fun lq_tmp$36$x$35$$35$2527 () Int)
(declare-fun lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4899 () Int)
(declare-fun lit$36$Example () Str)
(declare-fun Example.divide () Int)
(declare-fun GHC.Num.$36$fNumInt () Int)
(declare-fun GHC.CString.unpackCString$35$ () Int)
(declare-fun lq_tmp$36$x$35$$35$4240 () Int)
(declare-fun lq_karg$36$x$35$$35$a1qu$35$$35$k_$35$$35$1836 () Int)
(declare-fun lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4808 () Int)
(declare-fun lq_karg$36$x$35$$35$a1qu$35$$35$k_$35$$35$2071 () Int)
(declare-fun VV$35$$35$F$35$$35$83 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV$35$$35$k_$35$$35$1836 () Int)
(declare-fun lq_tmp$36$x$35$$35$4006 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801112$35$$35$d1Xa () Int)
(declare-fun lq_tmp$36$x$35$$35$4434 () Int)
(declare-fun lq_karg$36$weights$35$$35$a1qk$35$$35$k_$35$$35$4811 () Int)
(declare-fun lq_tmp$36$x$35$$35$3419 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2$35$$35$k_$35$$35$1888 () Int)
(declare-fun lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4894 () Int)
(declare-fun lq_karg$36$weights$35$$35$a1qk$35$$35$k_$35$$35$4808 () Int)
(declare-fun lq_tmp$36$x$35$$35$4571 () Int)
(declare-fun p$35$$35$a1IA () Int)
(declare-fun lq_tmp$36$x$35$$35$3059 () Int)
(declare-fun VV$35$$35$F$35$$35$42 () Int)
(declare-fun VV$35$$35$F$35$$35$226 () Int)
(declare-fun lq_tmp$36$x$35$$35$2775 () Int)
(declare-fun lq_tmp$36$x$35$$35$4751 () Int)
(declare-fun VV$35$$35$F$35$$35$143 () Int)
(declare-fun lq_tmp$36$x$35$$35$4902 () Int)
(declare-fun lq_karg$36$lq_tmp$36$x$35$$35$4751$35$$35$k_$35$$35$4753 () Int)
(declare-fun lq_tmp$36$x$35$$35$4773 () Int)
(declare-fun lq_karg$36$lq_tmp$36$x$35$$35$4895$35$$35$k_$35$$35$4897 () Int)
(declare-fun GHC.List.dropWhile () Int)
(declare-fun lq_karg$36$ds_d1Vg$35$$35$k_$35$$35$1989 () Int)
(declare-fun lq_tmp$36$x$35$$35$968 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2$35$$35$k_$35$$35$1989 () Int)
(declare-fun VV$35$$35$F$35$$35$262 () Int)
(declare-fun ds_d1TA () Int)
(declare-fun Data.Maybe.maybe () Int)
(declare-fun lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4899 () Int)
(declare-fun lq_tmp$36$x$35$$35$3343 () Int)
(declare-fun lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4808 () Int)
(declare-fun lq_tmp$36$x$35$$35$4182 () Int)
(declare-fun GHC.Real.C$58$Fractional () Int)
(declare-fun lq_tmp$36$x$35$$35$2287 () Int)
(declare-fun lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4762 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801058$35$$35$d1Wi () Str)
(declare-fun autolen () Int)
(declare-fun totElems$35$$35$a1ql () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801056$35$$35$d1Wg () Str)
(declare-fun lq_karg$36$ds_d1Vg$35$$35$k_$35$$35$1888 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV$35$$35$k_$35$$35$1989 () Int)
(declare-fun x$35$$35$a1qa () Int)
(declare-fun lq_karg$36$weights$35$$35$a1qk$35$$35$k_$35$$35$4899 () Int)
(declare-fun lq_karg$36$x$35$$35$a1qu$35$$35$k_$35$$35$1888 () Int)
(declare-fun VV$35$$35$F$35$$35$6 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792801118$35$$35$d1Xg$35$$35$k_$35$$35$2627 () Str)
(declare-fun lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4679 () Int)
(declare-fun GHC.Integer.Type.$36$WJn$35$ () Int)
(declare-fun GHC.Real.$94$ () Int)
(declare-fun lq_karg$36$totWeight$35$$35$a1qm$35$$35$k_$35$$35$4813 () Int)
(declare-fun lq_karg$36$ds_d1VY$35$$35$k_$35$$35$1853 () Int)
(declare-fun elems$35$$35$a1om () Int)
(declare-fun VV$35$$35$F$35$$35$79 () Int)
(declare-fun lq_karg$36$lq_tmp$36$x$35$$35$4680$35$$35$k_$35$$35$4682 () Int)
(declare-fun head () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV$35$$35$k_$35$$35$1888 () Int)
(declare-fun lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4811 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW$35$$35$k_$35$$35$1853 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801155$35$$35$d1XR () Int)
(declare-fun lq_karg$36$x$35$$35$a1qu$35$$35$k_$35$$35$1989 () Int)
(declare-fun ds_d1U8 () Int)
(declare-fun x$35$$35$a1qA () Int)
(declare-fun VV$35$$35$F$35$$35$24 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1$35$$35$k_$35$$35$1826 () Int)
(declare-fun lq_tmp$36$x$35$$35$4440 () Int)
(declare-fun lq_tmp$36$x$35$$35$1959 () Int)
(declare-fun y$35$$35$a1oe () Int)
(declare-fun xs$35$$35$a1ow () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801143$35$$35$d1XF () Int)
(declare-fun lq_tmp$36$x$35$$35$1731 () Int)
(declare-fun VV$35$$35$F$35$$35$270 () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792801175$35$$35$d1Yb () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801149$35$$35$d1XL () Bool)
(declare-fun Example.foldl () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801110$35$$35$d1X8 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801085$35$$35$d1WJ () Int)
(declare-fun VV$35$$35$F$35$$35$148 () Int)
(declare-fun GHC.Integer.Type.Jn$35$ () Int)
(declare-fun z$35$$35$a1of () Int)
(declare-fun ds_d1TJ () Int)
(declare-fun GHC.Classes.compare () Int)
(declare-fun VV$35$$35$F$35$$35$151 () Int)
(declare-fun x$35$$35$a1od () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801141$35$$35$d1XD () Str)
(declare-fun lq_tmp$36$x$35$$35$3513 () Int)
(declare-fun lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4892 () Int)
(declare-fun lq_tmp$36$x$35$$35$4189 () Int)
(declare-fun lq_tmp$36$x$35$$35$4660 () Int)
(declare-fun ds_d1W1 () Int)
(declare-fun lq_tmp$36$x$35$$35$2592 () Int)
(declare-fun lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4748 () Int)
(declare-fun lq_karg$36$weights$35$$35$a1qk$35$$35$k_$35$$35$4892 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801160$35$$35$d1XW () Int)
(declare-fun papp2 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801111$35$$35$d1X9 () Int)
(declare-fun VV$35$$35$F$35$$35$137 () Bool)
(declare-fun lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4666 () Int)
(declare-fun VV$35$$35$F$35$$35$14 () Int)
(declare-fun lq_tmp$36$x$35$$35$4558 () Int)
(declare-fun lq_tmp$36$x$35$$35$4426 () Int)
(declare-fun lq_tmp$36$x$35$$35$3070 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1$35$$35$k_$35$$35$1870 () Int)
(declare-fun lq_tmp$36$x$35$$35$4606 () Int)
(declare-fun lq_karg$36$VV$35$$35$3379$35$$35$k_$35$$35$3380 () Int)
(declare-fun xs$35$$35$a1og () Int)
(declare-fun ds_d1Ri () Int)
(declare-fun lq_tmp$36$x$35$$35$4566 () Int)
(declare-fun lq_karg$36$ds_d1RH$35$$35$k_$35$$35$3186 () Int)
(declare-fun ss$35$$35$a1Lz () Int)
(declare-fun lq_tmp$36$x$35$$35$2065 () Int)
(declare-fun lq_tmp$36$x$35$$35$1275 () Int)
(declare-fun GHC.Stack.Types.EmptyCallStack () Int)
(declare-fun lq_tmp$36$x$35$$35$1822 () Int)
(declare-fun lq_tmp$36$x$35$$35$3802 () Int)
(declare-fun lq_tmp$36$x$35$$35$3673 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW$35$$35$k_$35$$35$1989 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2$35$$35$k_$35$$35$1853 () Int)
(declare-fun GHC.Stack.Types.emptyCallStack () Int)
(declare-fun lq_tmp$36$x$35$$35$1329 () Int)
(declare-fun lq_tmp$36$x$35$$35$3534 () Int)
(declare-fun Example.die () Int)
(declare-fun lq_tmp$36$x$35$$35$4159 () Int)
(declare-fun lq_karg$36$x$35$$35$a1qu$35$$35$k_$35$$35$1853 () Int)
(declare-fun lq_tmp$36$x$35$$35$3376 () Int)
(declare-fun lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4894 () Int)
(declare-fun GHC.List.reverse () Int)
(declare-fun VV$35$$35$F$35$$35$275 () Str)
(declare-fun lq_tmp$36$x$35$$35$1437 () Int)
(declare-fun GHC.Integer.Type.$36$WJp$35$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801057$35$$35$d1Wh () Str)
(declare-fun lq_karg$36$weights$35$$35$a1qk$35$$35$k_$35$$35$4806 () Int)
(declare-fun lit$36$main () Str)
(declare-fun lq_tmp$36$x$35$$35$1635 () Int)
(declare-fun VV$35$$35$F$35$$35$110 () Int)
(declare-fun lq_karg$36$ds_d1VY$35$$35$k_$35$$35$1989 () Int)
(declare-fun Control.Exception.Base.patError () Int)
(declare-fun GHC.List.filter () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801074$35$$35$d1Wy () Int)
(declare-fun Example.head () Int)
(declare-fun VV$35$$35$F$35$$35$80 () Int)
(declare-fun lq_karg$36$ds_d1Vg$35$$35$k_$35$$35$1853 () Int)
(declare-fun fromJust () Int)
(declare-fun lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4481 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801092$35$$35$d1WQ () Str)
(declare-fun lq_tmp$36$x$35$$35$1008 () Int)
(declare-fun lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4897 () Int)
(declare-fun GHC.List.cycle () Int)
(declare-fun lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4806 () Int)
(declare-fun ds_d1SP () Int)
(declare-fun GHC.List.$33$$33$ () Int)
(declare-fun lq_karg$36$y$35$$35$a1qw$35$$35$k_$35$$35$2071 () Int)
(declare-fun lq_tmp$36$x$35$$35$1901 () Int)
(declare-fun lq_karg$36$ds_d1VY$35$$35$k_$35$$35$1888 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801079$35$$35$d1WD () Str)
(declare-fun lq_karg$36$xs$35$$35$a1q8$35$$35$k_$35$$35$4481 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV$35$$35$k_$35$$35$1853 () Int)
(declare-fun lq_karg$36$y$35$$35$a1qw$35$$35$k_$35$$35$1836 () Int)
(declare-fun lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4762 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW$35$$35$k_$35$$35$1888 () Int)
(declare-fun lq_karg$36$s$35$$35$a1Lx$35$$35$k_$35$$35$2071 () Int)
(declare-fun lq_karg$36$weights$35$$35$a1qk$35$$35$k_$35$$35$4897 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801096$35$$35$d1WU () Str)
(declare-fun VV$35$$35$F$35$$35$8 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801136$35$$35$d1Xy () Int)
(declare-fun papp7 () Int)
(declare-fun lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4677 () Int)
(declare-fun lq_tmp$36$x$35$$35$4885 () Int)
(declare-fun VV$35$$35$F$35$$35$11 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792801117$35$$35$d1Xf$35$$35$k_$35$$35$2627 () Int)
(declare-fun GHC.Classes.$47$$61$ () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792801135$35$$35$d1Xx$35$$35$k_$35$$35$3380 () Int)
(declare-fun w$35$$35$a1qo () Int)
(declare-fun lq_karg$36$x$35$$35$a1qu$35$$35$k_$35$$35$1890 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801068$35$$35$d1Ws () Int)
(declare-fun lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792801128$35$$35$d1Xq () Int)
(declare-fun VV$35$$35$F$35$$35$7 () Int)
(declare-fun lq_tmp$36$x$35$$35$2499 () Int)
(declare-fun VV$35$$35$F$35$$35$96 () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792801146$35$$35$d1XI () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801082$35$$35$d1WG () Int)
(declare-fun lq_karg$36$x$35$$35$a1qu$35$$35$k_$35$$35$1735 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801080$35$$35$d1WE () Str)
(declare-fun lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4813 () Int)
(declare-fun lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4682 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW$35$$35$k_$35$$35$1870 () Int)
(declare-fun GHC.List.break () Int)
(declare-fun GHC.Types.True () Bool)
(declare-fun lq_karg$36$ds_d1Sk$35$$35$k_$35$$35$2627 () Int)
(declare-fun lq_tmp$36$x$35$$35$3588 () Int)
(declare-fun weights$35$$35$a1qk () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801167$35$$35$d1Y3 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801088$35$$35$d1WM () Int)
(declare-fun lq_karg$36$ds_d1Vg$35$$35$k_$35$$35$1890 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801124$35$$35$d1Xm () Int)
(declare-fun lq_tmp$36$x$35$$35$4075 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801120$35$$35$d1Xi () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801165$35$$35$d1Y1 () Int)
(declare-fun lq_tmp$36$x$35$$35$3162 () Int)
(declare-fun VV$35$$35$F$35$$35$25 () Int)
(declare-fun GHC.Types.$91$$93$ () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2$35$$35$k_$35$$35$1890 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801060$35$$35$d1Wk () Str)
(declare-fun GHC.List.splitAt () Int)
(declare-fun lq_tmp$36$x$35$$35$1438 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801126$35$$35$d1Xo () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801122$35$$35$d1Xk () Int)
(declare-fun lq_karg$36$ds_d1Vg$35$$35$k_$35$$35$1735 () Int)
(declare-fun Example.sumOk () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801164$35$$35$d1Y0 () Int)
(declare-fun lq_tmp$36$x$35$$35$2927 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV$35$$35$k_$35$$35$1890 () Int)
(declare-fun lq_tmp$36$x$35$$35$4129 () Int)
(declare-fun lq_tmp$36$x$35$$35$2862 () Int)
(declare-fun lq_karg$36$ds_d1VY$35$$35$k_$35$$35$1870 () Int)
(declare-fun lit$36$don$39$t$32$worry$44$$32$be$32$happy () Str)
(declare-fun GHC.Base.$43$$43$ () Int)
(declare-fun Example.eliminateStutter () Int)
(declare-fun lq_karg$36$zs$35$$35$a1vc$35$$35$k_$35$$35$3380 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801166$35$$35$d1Y2 () Int)
(declare-fun VV$35$$35$F$35$$35$142 () Int)
(declare-fun GHC.Real.$58$$37$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801064$35$$35$d1Wo () Int)
(declare-fun lq_karg$36$ds_d1UA$35$$35$k_$35$$35$4687 () Int)
(declare-fun GHC.Tuple.$40$$44$$41$ () Int)
(declare-fun lq_tmp$36$x$35$$35$2387 () Int)
(declare-fun lq_tmp$36$x$35$$35$3306 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV$35$$35$k_$35$$35$1735 () Int)
(declare-fun x$35$$35$a1qp () Int)
(declare-fun VV$35$$35$F$35$$35$219 () Int)
(declare-fun lq_tmp$36$x$35$$35$1424 () Int)
(declare-fun lq_karg$36$ds_d1Vg$35$$35$k_$35$$35$1826 () Int)
(declare-fun fldList () Int)
(declare-fun lq_karg$36$ds_d1RH$35$$35$k_$35$$35$3063 () Int)
(declare-fun GHC.Classes.$38$$38$ () Int)
(declare-fun x$35$$35$a1qu () Int)
(declare-fun lq_karg$36$VV$35$$35$4480$35$$35$k_$35$$35$4481 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1$35$$35$k_$35$$35$1989 () Int)
(declare-fun lq_karg$36$VV$35$$35$4754$35$$35$k_$35$$35$4755 () Int)
(declare-fun lq_karg$36$VV$35$$35$2626$35$$35$k_$35$$35$2627 () Int)
(declare-fun VV$35$$35$F$35$$35$121 () Int)
(declare-fun lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4753 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV$35$$35$k_$35$$35$1826 () Int)
(declare-fun lq_tmp$36$x$35$$35$4942 () Int)
(declare-fun fix$36$$36$dNum_a1IL () Int)
(declare-fun VV$35$$35$F$35$$35$2 () Int)
(declare-fun lq_karg$36$VV$35$$35$4686$35$$35$k_$35$$35$4687 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801109$35$$35$d1X7 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801114$35$$35$d1Xc () Int)
(declare-fun lq_karg$36$VV$35$$35$3062$35$$35$k_$35$$35$3063 () Int)
(declare-fun lq_tmp$36$x$35$$35$1882 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1$35$$35$k_$35$$35$1888 () Int)
(declare-fun VV$35$$35$F$35$$35$138 () Int)
(declare-fun lq_karg$36$VV$35$$35$4752$35$$35$k_$35$$35$4753 () Int)
(declare-fun lq_karg$36$VV$35$$35$4812$35$$35$k_$35$$35$4813 () Int)
(declare-fun lq_karg$36$VV$35$$35$4896$35$$35$k_$35$$35$4897 () Int)
(declare-fun lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4816 () Int)
(declare-fun xs$35$$35$a1oh () Int)
(declare-fun lq_tmp$36$x$35$$35$1912 () Int)
(declare-fun lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4687 () Int)
(declare-fun ds_d1T5 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801131$35$$35$d1Xt () Int)
(declare-fun y$35$$35$a1nc () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801076$35$$35$d1WA () Int)
(declare-fun lq_karg$36$VV$35$$35$1988$35$$35$k_$35$$35$1989 () Int)
(declare-fun ds_d1Sj () Int)
(declare-fun lq_karg$36$VV$35$$35$1852$35$$35$k_$35$$35$1853 () Int)
(declare-fun lq_karg$36$VV$35$$35$2070$35$$35$k_$35$$35$2071 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2$35$$35$k_$35$$35$1826 () Int)
(declare-fun GHC.Types.GT () Int)
(declare-fun ds_d1Vg () Int)
(declare-fun GHC.Classes.C$58$IP () Int)
(declare-fun VV$35$$35$F$35$$35$20 () Int)
(declare-fun lq_karg$36$x$35$$35$a1qu$35$$35$k_$35$$35$1826 () Int)
(declare-fun GHC.Classes.$124$$124$ () Int)
(declare-fun lq_karg$36$VV$35$$35$4898$35$$35$k_$35$$35$4899 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801153$35$$35$d1XP () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801157$35$$35$d1XT () Int)
(declare-fun lq_karg$36$VV$35$$35$1734$35$$35$k_$35$$35$1735 () Int)
(declare-fun Data.Either.Left () Int)
(declare-fun GHC.List.last () Int)
(declare-fun x$35$$35$a1nb () Int)
(declare-fun lq_karg$36$VV$35$$35$4810$35$$35$k_$35$$35$4811 () Int)
(declare-fun sum$35$$35$a1qn () Int)
(declare-fun lq_karg$36$VV$35$$35$4678$35$$35$k_$35$$35$4679 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801108$35$$35$d1X6 () Int)
(declare-fun VV$35$$35$F$35$$35$147 () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792801133$35$$35$d1Xv () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801071$35$$35$d1Wv () Int)
(declare-fun lq_tmp$36$x$35$$35$3725 () Int)
(declare-fun VV$35$$35$F$35$$35$222 () Int)
(declare-fun ds_d1SJ () Int)
(declare-fun lq_tmp$36$x$35$$35$2382 () Int)
(declare-fun GHC.Integer.Type.S$35$ () Int)
(declare-fun lq_karg$36$VV$35$$35$4676$35$$35$k_$35$$35$4677 () Int)
(declare-fun GHC.List.scanl1 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801100$35$$35$d1WY () Int)
(declare-fun lq_karg$36$weights$35$$35$a1qk$35$$35$k_$35$$35$4906 () Int)
(declare-fun Data.Either.Right () Int)
(declare-fun lq_karg$36$ds_d1W1$35$$35$k_$35$$35$1989 () Int)
(declare-fun lq_karg$36$totWeight$35$$35$a1qm$35$$35$k_$35$$35$4894 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW$35$$35$k_$35$$35$1890 () Int)
(declare-fun lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4813 () Int)
(declare-fun lq_karg$36$ds_d1VY$35$$35$k_$35$$35$1735 () Int)
(declare-fun VV$35$$35$F$35$$35$212 () Int)
(declare-fun lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4682 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801083$35$$35$d1WH () Int)
(declare-fun lq_tmp$36$x$35$$35$1472 () Int)
(declare-fun ds_d1RH () Int)
(declare-fun lq_karg$36$ds_d1Vg$35$$35$k_$35$$35$1870 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2$35$$35$k_$35$$35$1870 () Int)
(declare-fun lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4906 () Int)
(declare-fun GHC.Num.$45$ () Int)
(declare-fun len () Int)
(declare-fun papp6 () Int)
(declare-fun VV$35$$35$F$35$$35$133 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV$35$$35$k_$35$$35$1870 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801087$35$$35$d1WL () Int)
(declare-fun lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4755 () Int)
(declare-fun lq_karg$36$ds_d1VY$35$$35$k_$35$$35$1890 () Int)
(declare-fun VV$35$$35$F$35$$35$9 () Int)
(declare-fun lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4554 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801065$35$$35$d1Wp () Int)
(declare-fun ds_d1Tn () Int)
(declare-fun GHC.Base.. () Int)
(declare-fun w$35$$35$a1qq () Int)
(declare-fun lq_tmp$36$x$35$$35$4260 () Int)
(declare-fun VV$35$$35$F$35$$35$10 () Int)
(declare-fun x_Tuple22 () Int)
(declare-fun lq_tmp$36$x$35$$35$1274 () Int)
(declare-fun ds_d1Rh () Int)
(declare-fun lq_tmp$36$x$35$$35$3182 () Int)
(declare-fun VV$35$$35$F$35$$35$54 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801127$35$$35$d1Xp () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801067$35$$35$d1Wr () Int)
(declare-fun lq_karg$36$xs$35$$35$a1q8$35$$35$k_$35$$35$4554 () Int)
(declare-fun lit$36$divide$45$by$45$zero () Str)
(declare-fun lq_tmp$36$x$35$$35$3535 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW$35$$35$k_$35$$35$1735 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801177$35$$35$d1Yd () Int)
(declare-fun VV$35$$35$F$35$$35$274 () Int)
(declare-fun lq_tmp$36$x$35$$35$1436 () Int)
(declare-fun lq_karg$36$x$35$$35$a1qu$35$$35$k_$35$$35$1870 () Int)
(declare-fun lq_tmp$36$x$35$$35$4419 () Int)
(declare-fun lq_tmp$36$x$35$$35$1414 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792801170$35$$35$d1Y6$35$$35$k_$35$$35$4554 () Int)
(declare-fun lq_karg$36$VV$35$$35$4893$35$$35$k_$35$$35$4894 () Int)
(declare-fun lq_karg$36$VV$35$$35$4553$35$$35$k_$35$$35$4554 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801117$35$$35$d1Xf () Int)
(declare-fun VV$35$$35$F$35$$35$26 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801113$35$$35$d1Xb () Int)
(declare-fun lq_karg$36$weights$35$$35$a1qk$35$$35$k_$35$$35$4813 () Int)
(declare-fun lq_karg$36$y$35$$35$a1qw$35$$35$k_$35$$35$1735 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801115$35$$35$d1Xd () Int)
(declare-fun lq_tmp$36$x$35$$35$4212 () Int)
(declare-fun lq_tmp$36$x$35$$35$1419 () Int)
(declare-fun GHC.Real.$36$W$58$$37$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801119$35$$35$d1Xh () Int)
(declare-fun ds_d1UJ () Int)
(declare-fun VV$35$$35$F$35$$35$141 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801134$35$$35$d1Xw () Int)
(declare-fun lq_karg$36$xs$35$$35$a1ow$35$$35$k_$35$$35$3186 () Int)
(declare-fun lq_karg$36$totWeight$35$$35$a1qm$35$$35$k_$35$$35$4899 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801130$35$$35$d1Xs () Bool)
(declare-fun lq_tmp$36$x$35$$35$1646 () Int)
(declare-fun lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4906 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801090$35$$35$d1WO () Str)
(declare-fun ds_d1TC () Int)
(declare-fun lq_tmp$36$x$35$$35$1985 () Int)
(declare-fun lq_karg$36$y$35$$35$a1qw$35$$35$k_$35$$35$1890 () Int)
(declare-fun isJust () Int)
(declare-fun lq_tmp$36$x$35$$35$3024 () Int)
(declare-fun x$35$$35$a1qs () Int)
(declare-fun lq_karg$36$VV$35$$35$4683$35$$35$k_$35$$35$4684 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801156$35$$35$d1XS () Int)
(declare-fun lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4755 () Int)
(declare-fun lq_tmp$36$x$35$$35$3886 () Int)
(declare-fun ds_d1RU () Int)
(declare-fun VV$35$$35$F$35$$35$4 () Int)
(declare-fun lq_karg$36$ds_d1W1$35$$35$k_$35$$35$2071 () Int)
(declare-fun elems$35$$35$a1oo () Int)
(declare-fun GHC.List.takeWhile () Int)
(declare-fun GHC.Types.TrNameD () Int)
(declare-fun lq_tmp$36$x$35$$35$4889 () Int)
(declare-fun lq_tmp$36$x$35$$35$1792 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801059$35$$35$d1Wj () Str)
(declare-fun lq_karg$36$totWeight$35$$35$a1qm$35$$35$k_$35$$35$4811 () Int)
(declare-fun xs$35$$35$a1on () Int)
(declare-fun Example.foldl1 () Int)
(declare-fun lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4813 () Int)
(declare-fun lq_karg$36$totWeight$35$$35$a1qm$35$$35$k_$35$$35$4808 () Int)
(declare-fun ds_d1Uj () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801154$35$$35$d1XQ () Int)
(declare-fun lq_karg$36$VV$35$$35$4749$35$$35$k_$35$$35$4750 () Int)
(declare-fun ds_d1T4 () Int)
(declare-fun lq_tmp$36$x$35$$35$3832 () Int)
(declare-fun GHC.Stack.Types.pushCallStack () Int)
(declare-fun lq_tmp$36$x$35$$35$1874 () Int)
(declare-fun lq_karg$36$ds_d1RH$35$$35$k_$35$$35$3242 () Int)
(declare-fun Example.safeSplit () Int)
(declare-fun lq_tmp$36$x$35$$35$3854 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801163$35$$35$d1XZ () Int)
(declare-fun lq_tmp$36$x$35$$35$3908 () Int)
(declare-fun ds_d1Sk () Int)
(declare-fun lq_tmp$36$x$35$$35$1856 () Int)
(declare-fun lq_tmp$36$x$35$$35$3876 () Int)
(declare-fun Example.groupEq () Int)
(declare-fun ys$35$$35$a1va () Int)
(declare-fun VV$35$$35$F$35$$35$21 () Int)
(declare-fun lq_tmp$36$x$35$$35$4152 () Int)
(declare-fun lq_tmp$36$x$35$$35$2198 () Int)
(declare-fun Example.null () Int)
(declare-fun lq_tmp$36$x$35$$35$3238 () Int)
(declare-fun Example.average () Int)
(declare-fun x_Tuple31 () Int)
(declare-fun lq_tmp$36$x$35$$35$831 () Int)
(declare-fun GHC.Integer.Type.Jp$35$ () Int)
(declare-fun lq_karg$36$VV$35$$35$1869$35$$35$k_$35$$35$1870 () Int)
(declare-fun lq_tmp$36$x$35$$35$4798 () Int)
(declare-fun ds_d1UM () Int)
(declare-fun VV$35$$35$F$35$$35$146 () Int)
(declare-fun lq_tmp$36$x$35$$35$4680 () Int)
(declare-fun VV$35$$35$F$35$$35$223 () Int)
(declare-fun lq_tmp$36$x$35$$35$1641 () Int)
(declare-fun lq_tmp$36$x$35$$35$1762 () Int)
(declare-fun lq_tmp$36$x$35$$35$2181 () Int)
(declare-fun ds_d1SK () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801161$35$$35$d1XX () Int)
(declare-fun GHC.IO.Exception.IOError () Int)
(declare-fun lq_karg$36$VV$35$$35$1889$35$$35$k_$35$$35$1890 () Int)
(declare-fun VV$35$$35$F$35$$35$245 () Int)
(declare-fun VV$35$$35$F$35$$35$218 () Int)
(declare-fun GHC.List.take () Int)
(declare-fun GHC.Stack.Types.PushCallStack () Int)
(declare-fun lq_tmp$36$x$35$$35$2415 () Int)
(declare-fun lq_tmp$36$x$35$$35$3023 () Int)
(declare-fun msg$35$$35$a1iu () Str)
(declare-fun Example.main () Int)
(declare-fun fix$36$$36$dEq_a1xv () Int)
(declare-fun lq_tmp$36$x$35$$35$1319 () Int)
(declare-fun GHC.Classes.$60$$61$ () Int)
(declare-fun lq_tmp$36$x$35$$35$4583 () Int)
(declare-fun lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4666 () Int)
(declare-fun GHC.Types.TrNameS () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1$35$$35$k_$35$$35$1890 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801062$35$$35$d1Wm () Str)
(declare-fun GHC.Enum.C$58$Bounded () Int)
(declare-fun System.IO.putStrLn () Int)
(declare-fun VV$35$$35$F$35$$35$3 () Int)
(declare-fun VV$35$$35$F$35$$35$201 () Int)
(declare-fun VV$35$$35$F$35$$35$92 () Str)
(declare-fun lq_tmp$36$x$35$$35$741 () Int)
(declare-fun VV$35$$35$F$35$$35$139 () Int)
(declare-fun lq_tmp$36$x$35$$35$1830 () Int)
(declare-fun lq_karg$36$totWeight$35$$35$a1qm$35$$35$k_$35$$35$4816 () Int)
(declare-fun GHC.Base.$36$ () Int)
(declare-fun papp1 () Int)
(declare-fun lq_tmp$36$x$35$$35$2342 () Int)
(declare-fun GHC.Classes.max () Int)
(declare-fun lq_tmp$36$x$35$$35$2243 () Int)
(declare-fun lq_tmp$36$x$35$$35$2850 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1 () Int)
(declare-fun VV$35$$35$F$35$$35$17 () Int)
(declare-fun lq_tmp$36$x$35$$35$2937 () Int)
(declare-fun lq_tmp$36$x$35$$35$1273 () Int)
(declare-fun lq_tmp$36$x$35$$35$4605 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801159$35$$35$d1XV () Int)
(declare-fun lq_tmp$36$x$35$$35$3387 () Int)
(declare-fun lq_tmp$36$x$35$$35$3958 () Int)
(declare-fun lq_tmp$36$x$35$$35$4092 () Int)
(declare-fun VV$35$$35$F$35$$35$53 () Int)
(declare-fun lq_karg$36$x$35$$35$a1ov$35$$35$k_$35$$35$3186 () Int)
(declare-fun lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4892 () Int)
(declare-fun lq_tmp$36$x$35$$35$1068 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801073$35$$35$d1Wx () Int)
(declare-fun GHC.Num.$36$fNumInteger () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801106$35$$35$d1X4 () Bool)
(declare-fun lq_anf$36$$35$$35$7205759403792801102$35$$35$d1X0 () Int)
(declare-fun lq_karg$36$etc$35$$35$a1qx$35$$35$k_$35$$35$1870 () Int)
(declare-fun VV$35$$35$F$35$$35$273 () Int)
(declare-fun GHC.Classes.$60$ () Int)
(declare-fun tail () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801151$35$$35$d1XN () Int)
(declare-fun cast_as () Int)
(declare-fun VV$35$$35$F$35$$35$35 () Int)
(declare-fun lq_karg$36$ds_d1RU$35$$35$k_$35$$35$3242 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801138$35$$35$d1XA () Int)
(declare-fun lq_tmp$36$x$35$$35$4289 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801107$35$$35$d1X5 () Int)
(declare-fun VV$35$$35$F$35$$35$170 () Int)
(declare-fun VV$35$$35$F$35$$35$86 () Int)
(declare-fun VV$35$$35$F$35$$35$152 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801078$35$$35$d1WC () Int)
(declare-fun lq_tmp$36$x$35$$35$4290 () Int)
(declare-fun GHC.Stack.Types.FreezeCallStack () Int)
(declare-fun lq_tmp$36$x$35$$35$1907 () Int)
(declare-fun lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4748 () Int)
(declare-fun lq_karg$36$ys$35$$35$a1va$35$$35$k_$35$$35$3380 () Int)
(declare-fun GHC.Num.$42$ () Int)
(declare-fun ds_d1TB () Int)
(declare-fun lq_karg$36$y$35$$35$a1qw$35$$35$k_$35$$35$1989 () Int)
(declare-fun lq_karg$36$ds_d1VY$35$$35$k_$35$$35$2071 () Int)
(declare-fun acc$35$$35$a1qc () Int)
(declare-fun etc$35$$35$a1qx () Int)
(declare-fun lq_tmp$36$x$35$$35$3025 () Int)
(declare-fun lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4762 () Int)
(declare-fun lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4677 () Int)
(declare-fun Example.size () Int)
(declare-fun lq_tmp$36$x$35$$35$1849 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801147$35$$35$d1XJ () Int)
(declare-fun lq_karg$36$lq_tmp$36$x$35$$35$4809$35$$35$k_$35$$35$4811 () Int)
(declare-fun lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4679 () Int)
(declare-fun lq_tmp$36$x$35$$35$2349 () Int)
(declare-fun VV$35$$35$F$35$$35$5 () Int)
(declare-fun lq_karg$36$x$35$$35$a1ov$35$$35$k_$35$$35$3242 () Int)
(declare-fun lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4811 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801121$35$$35$d1Xj () Int)
(declare-fun lq_tmp$36$x$35$$35$4550 () Int)
(declare-fun lq_tmp$36$x$35$$35$1814 () Int)
(declare-fun lq_tmp$36$x$35$$35$620 () Int)
(declare-fun lit$36$Relaxeth$33$$32$this$32$too$32$shall$32$ne$39$er$32$be () Str)
(declare-fun lq_tmp$36$x$35$$35$4099 () Int)
(declare-fun ds_d1Uk () Int)
(declare-fun lit$36$$47$home$47$ricardo$47$docencia$47$verifAsistid$47$2021$45$22$47$versionProfesor$47$LiquidHaskell$47$lh$45$tests$47$src$47$Example.lhs$58$$40$188$44$1$41$$45$$40$189$44$28$41$$124$function$32$size1 () Str)
(declare-fun lq_tmp$36$x$35$$35$1324 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801145$35$$35$d1XH () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792801081$35$$35$d1WF () Int)
(declare-fun lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4808 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792801136$35$$35$d1Xy$35$$35$k_$35$$35$3380 () Int)
(declare-fun lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4899 () Int)
(declare-fun GHC.Maybe.Nothing () Int)
(declare-fun VV$35$$35$F$35$$35$27 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801179$35$$35$d1Yf () Int)
(declare-fun ds_d1Rt () Int)
(declare-fun lq_karg$36$ds_d1VY$35$$35$k_$35$$35$1836 () Int)
(declare-fun lq_karg$36$ds_d1RU$35$$35$k_$35$$35$3186 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW$35$$35$k_$35$$35$2071 () Int)
(declare-fun lq_tmp$36$x$35$$35$4275 () Int)
(declare-fun lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4897 () Int)
(declare-fun lq_karg$36$y$35$$35$a1qw$35$$35$k_$35$$35$1888 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801129$35$$35$d1Xr () Bool)
(declare-fun totWeight$35$$35$a1qm () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801089$35$$35$d1WN () Str)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW$35$$35$k_$35$$35$1836 () Int)
(declare-fun GHC.Types.EQ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801125$35$$35$d1Xn () Int)
(declare-fun lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4806 () Int)
(declare-fun lq_karg$36$etc$35$$35$a1qx$35$$35$k_$35$$35$1826 () Int)
(declare-fun GHC.List.scanr () Int)
(declare-fun xs$35$$35$a1qt () Int)
(declare-fun VV$35$$35$F$35$$35$145 () Int)
(declare-fun VV$35$$35$F$35$$35$118 () Int)
(declare-fun f$35$$35$a1q9 () Int)
(declare-fun lq_karg$36$VV$35$$35$1825$35$$35$k_$35$$35$1826 () Int)
(declare-fun totalityError () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801072$35$$35$d1Ww () Int)
(declare-fun GHC.Num.negate () Int)
(declare-fun lq_karg$36$xs$35$$35$a1ow$35$$35$k_$35$$35$3380 () Int)
(declare-fun Example.wtAverage () Int)
(declare-fun lq_tmp$36$x$35$$35$2232 () Int)
(declare-fun lq_karg$36$VV$35$$35$1835$35$$35$k_$35$$35$1836 () Int)
(declare-fun lq_tmp$36$x$35$$35$1558 () Int)
(declare-fun lq_karg$36$VV$35$$35$3185$35$$35$k_$35$$35$3186 () Int)
(declare-fun lq_tmp$36$x$35$$35$1167 () Int)
(declare-fun GHC.Real.fromIntegral () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801172$35$$35$d1Y8 () Int)
(declare-fun GHC.Maybe.Just () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801173$35$$35$d1Y9 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801070$35$$35$d1Wu () Int)
(declare-fun lq_karg$36$VV$35$$35$4665$35$$35$k_$35$$35$4666 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801101$35$$35$d1WZ () Int)
(declare-fun GHC.Classes.min () Int)
(declare-fun VV$35$$35$F$35$$35$101 () Int)
(declare-fun lq_karg$36$VV$35$$35$3241$35$$35$k_$35$$35$3242 () Int)
(declare-fun lq_tmp$36$x$35$$35$3543 () Int)
(declare-fun lq_tmp$36$x$35$$35$2298 () Int)
(declare-fun lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4748 () Int)
(declare-fun Example.tail () Int)
(declare-fun lq_karg$36$VV$35$$35$4815$35$$35$k_$35$$35$4816 () Int)
(declare-fun lq_tmp$36$x$35$$35$742 () Int)
(declare-fun lq_tmp$36$x$35$$35$607 () Int)
(declare-fun VV$35$$35$F$35$$35$19 () Int)
(declare-fun lq_karg$36$VV$35$$35$4805$35$$35$k_$35$$35$4806 () Int)
(declare-fun lq_karg$36$etc$35$$35$a1qx$35$$35$k_$35$$35$1890 () Int)
(declare-fun Example.notEmpty () Int)
(declare-fun lq_tmp$36$x$35$$35$3930 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792801133$35$$35$d1Xv$35$$35$k_$35$$35$3242 () Int)
(declare-fun lq_tmp$36$x$35$$35$4629 () Int)
(declare-fun lq_karg$36$etc$35$$35$a1qx$35$$35$k_$35$$35$1735 () Int)
(declare-fun lq_karg$36$VV$35$$35$4891$35$$35$k_$35$$35$4892 () Int)
(declare-fun lq_karg$36$VV$35$$35$4905$35$$35$k_$35$$35$4906 () Int)
(declare-fun lq_karg$36$VV$35$$35$4681$35$$35$k_$35$$35$4682 () Int)
(declare-fun VV$35$$35$F$35$$35$22 () Int)
(declare-fun x_Tuple32 () Int)
(declare-fun lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4666 () Int)
(declare-fun lq_karg$36$VV$35$$35$4761$35$$35$k_$35$$35$4762 () Int)
(declare-fun lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4892 () Int)
(declare-fun lq_tmp$36$x$35$$35$4577 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801077$35$$35$d1WB () Int)
(declare-fun lq_tmp$36$x$35$$35$4630 () Int)
(declare-fun lq_tmp$36$x$35$$35$1214 () Int)
(declare-fun lq_karg$36$etc$35$$35$a1qx$35$$35$k_$35$$35$1853 () Int)
(declare-fun lq_tmp$36$x$35$$35$4219 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1$35$$35$k_$35$$35$1836 () Int)
(declare-fun GHC.List.repeat () Int)
(declare-fun lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4687 () Int)
(declare-fun ds_d1UA () Int)
(declare-fun lq_tmp$36$x$35$$35$4758 () Int)
(declare-fun VV$35$$35$F$35$$35$87 () Int)
(declare-fun elems$35$$35$a1qj () Int)
(declare-fun lq_tmp$36$x$35$$35$1575 () Int)
(declare-fun lq_karg$36$totWeight$35$$35$a1qm$35$$35$k_$35$$35$4892 () Int)
(declare-fun lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4684 () Int)
(declare-fun lq_tmp$36$x$35$$35$1755 () Int)
(declare-fun lq_tmp$36$x$35$$35$4741 () Int)
(declare-fun lit$36$foldl1 () Str)
(declare-fun VV$35$$35$F$35$$35$153 () Int)
(declare-fun lq_tmp$36$x$35$$35$1896 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801169$35$$35$d1Y5 () Int)
(declare-fun lq_tmp$36$x$35$$35$4497 () Int)
(declare-fun lq_tmp$36$x$35$$35$2747 () Int)
(declare-fun GHC.Classes.not () Int)
(declare-fun lq_tmp$36$x$35$$35$1609 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792801133$35$$35$d1Xv$35$$35$k_$35$$35$3380 () Int)
(declare-fun lit$36$Fear$32$not$33$$32$$39$twill$32$ne$39$er$32$come$32$to$32$pass () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792801174$35$$35$d1Ya () Int)
(declare-fun lq_tmp$36$x$35$$35$1843 () Int)
(declare-fun lq_tmp$36$x$35$$35$3940 () Int)
(declare-fun Example.size2 () Int)
(declare-fun GHC.Num.$43$ () Int)
(declare-fun Data.Tuple.fst () Int)
(declare-fun x$35$$35$a1ov () Int)
(declare-fun lq_tmp$36$x$35$$35$1483 () Int)
(declare-fun lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4753 () Int)
(declare-fun lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4750 () Int)
(declare-fun lq_tmp$36$x$35$$35$4659 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801142$35$$35$d1XE () Int)
(declare-fun GHC.Real.C$58$Integral () Int)
(declare-fun lq_karg$36$xs$35$$35$a1ow$35$$35$k_$35$$35$3242 () Int)
(declare-fun VV$35$$35$F$35$$35$16 () Int)
(declare-fun GHC.Err.error () Int)
(declare-fun lq_tmp$36$x$35$$35$1272 () Int)
(declare-fun GHC.Real.$36$fIntegralInt () Int)
(declare-fun snd () Int)
(declare-fun fst () Int)
(declare-fun total$35$$35$a1ol () Int)
(declare-fun VV$35$$35$F$35$$35$52 () Int)
(declare-fun lq_tmp$36$x$35$$35$3674 () Int)
(declare-fun lq_tmp$36$x$35$$35$1582 () Int)
(declare-fun lq_tmp$36$x$35$$35$1069 () Int)
(declare-fun xs$35$$35$a1ou () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801084$35$$35$d1WI () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801086$35$$35$d1WK () Int)
(declare-fun lq_tmp$36$x$35$$35$1117 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801168$35$$35$d1Y4 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1$35$$35$k_$35$$35$2071 () Int)
(declare-fun Data.Tuple.snd () Int)
(declare-fun VV$35$$35$F$35$$35$272 () Str)
(declare-fun apply$35$$35$13 (Int (_ BitVec 32)) Bool)
(declare-fun apply$35$$35$9 (Int Str) Bool)
(declare-fun apply$35$$35$6 (Int Bool) Str)
(declare-fun apply$35$$35$11 (Int Str) (_ BitVec 32))
(declare-fun apply$35$$35$15 (Int (_ BitVec 32)) (_ BitVec 32))
(declare-fun apply$35$$35$0 (Int Int) Int)
(declare-fun apply$35$$35$8 (Int Str) Int)
(declare-fun apply$35$$35$1 (Int Int) Bool)
(declare-fun apply$35$$35$7 (Int Bool) (_ BitVec 32))
(declare-fun apply$35$$35$14 (Int (_ BitVec 32)) Str)
(declare-fun apply$35$$35$10 (Int Str) Str)
(declare-fun apply$35$$35$5 (Int Bool) Bool)
(declare-fun apply$35$$35$2 (Int Int) Str)
(declare-fun apply$35$$35$12 (Int (_ BitVec 32)) Int)
(declare-fun apply$35$$35$3 (Int Int) (_ BitVec 32))
(declare-fun apply$35$$35$4 (Int Bool) Int)
(declare-fun coerce$35$$35$13 ((_ BitVec 32)) Bool)
(declare-fun coerce$35$$35$9 (Str) Bool)
(declare-fun coerce$35$$35$6 (Bool) Str)
(declare-fun coerce$35$$35$11 (Str) (_ BitVec 32))
(declare-fun coerce$35$$35$15 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun coerce$35$$35$0 (Int) Int)
(declare-fun coerce$35$$35$8 (Str) Int)
(declare-fun coerce$35$$35$1 (Int) Bool)
(declare-fun coerce$35$$35$7 (Bool) (_ BitVec 32))
(declare-fun coerce$35$$35$14 ((_ BitVec 32)) Str)
(declare-fun coerce$35$$35$10 (Str) Str)
(declare-fun coerce$35$$35$5 (Bool) Bool)
(declare-fun coerce$35$$35$2 (Int) Str)
(declare-fun coerce$35$$35$12 ((_ BitVec 32)) Int)
(declare-fun coerce$35$$35$3 (Int) (_ BitVec 32))
(declare-fun coerce$35$$35$4 (Bool) Int)
(declare-fun smt_lambda$35$$35$13 ((_ BitVec 32) Bool) Int)
(declare-fun smt_lambda$35$$35$9 (Str Bool) Int)
(declare-fun smt_lambda$35$$35$6 (Bool Str) Int)
(declare-fun smt_lambda$35$$35$11 (Str (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$15 ((_ BitVec 32) (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$0 (Int Int) Int)
(declare-fun smt_lambda$35$$35$8 (Str Int) Int)
(declare-fun smt_lambda$35$$35$1 (Int Bool) Int)
(declare-fun smt_lambda$35$$35$7 (Bool (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$14 ((_ BitVec 32) Str) Int)
(declare-fun smt_lambda$35$$35$10 (Str Str) Int)
(declare-fun smt_lambda$35$$35$5 (Bool Bool) Int)
(declare-fun smt_lambda$35$$35$2 (Int Str) Int)
(declare-fun smt_lambda$35$$35$12 ((_ BitVec 32) Int) Int)
(declare-fun smt_lambda$35$$35$3 (Int (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$4 (Bool Int) Int)
(declare-fun lam_arg$35$$35$1$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$2$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$3$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$4$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$5$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$6$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$7$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$1$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$2$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$3$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$4$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$5$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$6$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$7$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$1$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$2$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$3$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$4$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$5$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$6$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$7$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$1$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$2$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$3$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$4$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$5$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$6$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$7$35$$35$4 () Bool)

(assert (distinct lit$36$Fear$32$not$33$$32$$39$twill$32$ne$39$er$32$come$32$to$32$pass lit$36$foldl1 lit$36$$47$home$47$ricardo$47$docencia$47$verifAsistid$47$2021$45$22$47$versionProfesor$47$LiquidHaskell$47$lh$45$tests$47$src$47$Example.lhs$58$$40$188$44$1$41$$45$$40$189$44$28$41$$124$function$32$size1 lit$36$Relaxeth$33$$32$this$32$too$32$shall$32$ne$39$er$32$be lit$36$divide$45$by$45$zero lit$36$don$39$t$32$worry$44$$32$be$32$happy lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive lit$36$main lit$36$Example lit$36$error lit$36$cannot$32$add$32$up$32$empty$32$list lit$36$Hello lit$36$$47$home$47$ricardo$47$docencia$47$verifAsistid$47$2021$45$22$47$versionProfesor$47$LiquidHaskell$47$lh$45$tests$47$src$47$Example.lhs))

(assert (distinct GHC.Types.True GHC.Types.False))
(assert (distinct GHC.Types.EQ GHC.Types.GT GHC.Types.LT))
(assert (= (strLen lit$36$$47$home$47$ricardo$47$docencia$47$verifAsistid$47$2021$45$22$47$versionProfesor$47$LiquidHaskell$47$lh$45$tests$47$src$47$Example.lhs) 98))
(assert (= (strLen lit$36$Hello) 5))
(assert (= (strLen lit$36$cannot$32$add$32$up$32$empty$32$list) 24))
(assert (= (strLen lit$36$error) 5))
(assert (= (strLen lit$36$Example) 7))
(assert (= (strLen lit$36$main) 4))
(assert (= (strLen lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive) 36))
(assert (= (strLen lit$36$don$39$t$32$worry$44$$32$be$32$happy) 21))
(assert (= (strLen lit$36$divide$45$by$45$zero) 14))
(assert (= (strLen lit$36$Relaxeth$33$$32$this$32$too$32$shall$32$ne$39$er$32$be) 33))
(assert (= (strLen lit$36$$47$home$47$ricardo$47$docencia$47$verifAsistid$47$2021$45$22$47$versionProfesor$47$LiquidHaskell$47$lh$45$tests$47$src$47$Example.lhs$58$$40$188$44$1$41$$45$$40$189$44$28$41$$124$function$32$size1) 130))
(assert (= (strLen lit$36$foldl1) 6))
(assert (= (strLen lit$36$Fear$32$not$33$$32$$39$twill$32$ne$39$er$32$come$32$to$32$pass) 35))
(push 1)
(define-fun b$36$$35$$35$256 () Bool (and (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801111$35$$35$d1X9) (= lq_anf$36$$35$$35$7205759403792801111$35$$35$d1X9 ds_d1Tn) (= lq_anf$36$$35$$35$7205759403792801111$35$$35$d1X9 (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) ds_d1TA) xs$35$$35$a1og)) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792801111$35$$35$d1X9) ds_d1TA) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801111$35$$35$d1X9) (+ 1 (apply$35$$35$0 (as len Int) xs$35$$35$a1og))) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792801111$35$$35$d1X9) xs$35$$35$a1og) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801111$35$$35$d1X9) 0)))
(define-fun b$36$$35$$35$272 () Bool (and (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801117$35$$35$d1Xf) (= lq_anf$36$$35$$35$7205759403792801117$35$$35$d1Xf ds_d1Sk) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801117$35$$35$d1Xf) 0)))
(define-fun b$36$$35$$35$288 () Bool (= lq_anf$36$$35$$35$7205759403792801121$35$$35$d1Xj lq_anf$36$$35$$35$7205759403792801120$35$$35$d1Xi))
(define-fun b$36$$35$$35$304 () Bool (and (= lq_anf$36$$35$$35$7205759403792801128$35$$35$d1Xq ds_d1S3) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801128$35$$35$d1Xq) 0)))
(define-fun b$36$$35$$35$816 () Bool (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$212) 0))
(define-fun b$36$$35$$35$336 () Bool (and (= ds_d1RU (apply$35$$35$0 (apply$35$$35$0 (as GHC.Tuple.$40$$44$$41$ Int) ys$35$$35$a1va) zs$35$$35$a1vc)) (= (apply$35$$35$0 (as fst Int) ds_d1RU) ys$35$$35$a1va) (= (apply$35$$35$0 (as snd Int) ds_d1RU) zs$35$$35$a1vc) (= (apply$35$$35$0 (as x_Tuple21 Int) ds_d1RU) ys$35$$35$a1va) (= (apply$35$$35$0 (as x_Tuple22 Int) ds_d1RU) zs$35$$35$a1vc)))
(define-fun b$36$$35$$35$864 () Bool (= VV$35$$35$F$35$$35$14 (Z3_OP_MUL w$35$$35$a1qo x$35$$35$a1qp)))
(define-fun b$36$$35$$35$112 () Bool (= lq_anf$36$$35$$35$7205759403792801062$35$$35$d1Wm lit$36$$47$home$47$ricardo$47$docencia$47$verifAsistid$47$2021$45$22$47$versionProfesor$47$LiquidHaskell$47$lh$45$tests$47$src$47$Example.lhs))
(define-fun b$36$$35$$35$400 () Bool (and lq_anf$36$$35$$35$7205759403792801149$35$$35$d1XL (= lq_anf$36$$35$$35$7205759403792801149$35$$35$d1XL (apply$35$$35$1 (as Example.notEmpty Int) xs$35$$35$a1on)) (= lq_anf$36$$35$$35$7205759403792801149$35$$35$d1XL lq_anf$36$$35$$35$7205759403792801148$35$$35$d1XK)))
(define-fun b$36$$35$$35$160 () Bool (and (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801088$35$$35$d1WM) (not (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801088$35$$35$d1WM)) (= lq_anf$36$$35$$35$7205759403792801088$35$$35$d1WM (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792801088$35$$35$d1WM ds_d1TM) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801088$35$$35$d1WM) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801088$35$$35$d1WM) 0)))
(define-fun b$36$$35$$35$208 () Bool (and (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801100$35$$35$d1WY) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792801100$35$$35$d1WY) x$35$$35$a1qu) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801100$35$$35$d1WY) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801099$35$$35$d1WX))) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792801100$35$$35$d1WY) lq_anf$36$$35$$35$7205759403792801099$35$$35$d1WX) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801100$35$$35$d1WY) 0)))
(define-fun b$36$$35$$35$240 () Bool (and (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801109$35$$35$d1X7) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792801109$35$$35$d1X7) s$35$$35$a1Lx) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801109$35$$35$d1X7) (+ 1 (apply$35$$35$0 (as len Int) ss$35$$35$a1Lz))) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792801109$35$$35$d1X7) ss$35$$35$a1Lz) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801109$35$$35$d1X7) 0)))
(define-fun b$36$$35$$35$257 () Bool (= lq_anf$36$$35$$35$7205759403792801113$35$$35$d1Xb 1))
(define-fun b$36$$35$$35$273 () Bool (and (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801117$35$$35$d1Xf) (not (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801117$35$$35$d1Xf)) (= lq_anf$36$$35$$35$7205759403792801117$35$$35$d1Xf (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792801117$35$$35$d1Xf ds_d1Sk) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801117$35$$35$d1Xf) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801117$35$$35$d1Xf) 0)))
(define-fun b$36$$35$$35$289 () Bool (< 0 lq_anf$36$$35$$35$7205759403792801122$35$$35$d1Xk))
(define-fun b$36$$35$$35$801 () Bool (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$226) 0))
(define-fun b$36$$35$$35$321 () Bool (>= (apply$35$$35$0 (as len Int) ds_d1RH) 0))
(define-fun b$36$$35$$35$833 () Bool (and (= VV$35$$35$F$35$$35$87 xs$35$$35$a1oh) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$87) 0)))
(define-fun b$36$$35$$35$865 () Bool (and (= VV$35$$35$F$35$$35$270 lq_anf$36$$35$$35$7205759403792801096$35$$35$d1WU) (= (apply$35$$35$8 (as len Int) VV$35$$35$F$35$$35$270) (strLen lq_anf$36$$35$$35$7205759403792801095$35$$35$d1WT)) (>= (apply$35$$35$8 (as len Int) VV$35$$35$F$35$$35$270) 0) (= VV$35$$35$F$35$$35$270 lq_anf$36$$35$$35$7205759403792801095$35$$35$d1WT)))
(define-fun b$36$$35$$35$113 () Bool (and (= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792801063$35$$35$d1Wn) (strLen lq_anf$36$$35$$35$7205759403792801062$35$$35$d1Wm)) (>= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792801063$35$$35$d1Wn) 0) (= lq_anf$36$$35$$35$7205759403792801063$35$$35$d1Wn lq_anf$36$$35$$35$7205759403792801062$35$$35$d1Wm)))
(define-fun b$36$$35$$35$385 () Bool (>= (apply$35$$35$0 (as len Int) xs$35$$35$a1oh) 0))
(define-fun b$36$$35$$35$145 () Bool (= lq_anf$36$$35$$35$7205759403792801081$35$$35$d1WF (+ x$35$$35$a1nb y$35$$35$a1nc)))
(define-fun b$36$$35$$35$161 () Bool (= lq_anf$36$$35$$35$7205759403792801089$35$$35$d1WN lit$36$Fear$32$not$33$$32$$39$twill$32$ne$39$er$32$come$32$to$32$pass))
(define-fun b$36$$35$$35$417 () Bool (and (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801161$35$$35$d1XX) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792801161$35$$35$d1XX) lq_anf$36$$35$$35$7205759403792801155$35$$35$d1XR) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801161$35$$35$d1XX) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801160$35$$35$d1XW))) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792801161$35$$35$d1XX) lq_anf$36$$35$$35$7205759403792801160$35$$35$d1XW) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801161$35$$35$d1XX) 0)))
(define-fun b$36$$35$$35$433 () Bool (and (= lq_anf$36$$35$$35$7205759403792801165$35$$35$d1Y1 ds_d1Ri) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801165$35$$35$d1Y1) 0)))
(define-fun b$36$$35$$35$193 () Bool (>= (apply$35$$35$0 (as len Int) ds_d1Vg) 0))
(define-fun b$36$$35$$35$465 () Bool (and (= (apply$35$$35$1 (as Example.notEmpty Int) wxs$35$$35$a1qi) (apply$35$$35$1 (as Example.notEmpty Int) elems$35$$35$a1qj)) (>= (apply$35$$35$0 (as len Int) elems$35$$35$a1qj) 0)))
(define-fun b$36$$35$$35$258 () Bool (= lq_anf$36$$35$$35$7205759403792801114$35$$35$d1Xc lq_anf$36$$35$$35$7205759403792801113$35$$35$d1Xb))
(define-fun b$36$$35$$35$274 () Bool (= lq_anf$36$$35$$35$7205759403792801118$35$$35$d1Xg lit$36$$47$home$47$ricardo$47$docencia$47$verifAsistid$47$2021$45$22$47$versionProfesor$47$LiquidHaskell$47$lh$45$tests$47$src$47$Example.lhs$58$$40$188$44$1$41$$45$$40$189$44$28$41$$124$function$32$size1))
(define-fun b$36$$35$$35$290 () Bool (>= (apply$35$$35$0 (as len Int) ds_d1SP) 0))
(define-fun b$36$$35$$35$802 () Bool (and (= (apply$35$$35$1 (as Example.notEmpty Int) wxs$35$$35$a1qi) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$3)) (= VV$35$$35$F$35$$35$3 elems$35$$35$a1qj) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$3) 0)))
(define-fun b$36$$35$$35$306 () Bool (>= (apply$35$$35$0 (as len Int) ds_d1Sj) 0))
(define-fun b$36$$35$$35$322 () Bool (and (= lq_anf$36$$35$$35$7205759403792801133$35$$35$d1Xv ds_d1RH) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801133$35$$35$d1Xv) 0)))
(define-fun b$36$$35$$35$834 () Bool (= VV$35$$35$F$35$$35$151 lq_anf$36$$35$$35$7205759403792801112$35$$35$d1Xa))
(define-fun b$36$$35$$35$866 () Bool (and (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$110) (= VV$35$$35$F$35$$35$110 lq_anf$36$$35$$35$7205759403792801135$35$$35$d1Xx) (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$110) x$35$$35$a1ov) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$110) (+ 1 (apply$35$$35$0 (as len Int) ys$35$$35$a1va))) (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$110) ys$35$$35$a1va) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$110) 0)))
(define-fun b$36$$35$$35$114 () Bool (= lq_anf$36$$35$$35$7205759403792801064$35$$35$d1Wo 32))
(define-fun b$36$$35$$35$386 () Bool (and (=> (apply$35$$35$1 (as Example.notEmpty Int) xs$35$$35$a1oh) (> elems$35$$35$a1oj 0)) (>= elems$35$$35$a1oj 0)))
(define-fun b$36$$35$$35$146 () Bool (= lq_anf$36$$35$$35$7205759403792801082$35$$35$d1WG 2))
(define-fun b$36$$35$$35$162 () Bool (and (= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792801090$35$$35$d1WO) (strLen lq_anf$36$$35$$35$7205759403792801089$35$$35$d1WN)) (>= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792801090$35$$35$d1WO) 0) (= lq_anf$36$$35$$35$7205759403792801090$35$$35$d1WO lq_anf$36$$35$$35$7205759403792801089$35$$35$d1WN)))
(define-fun b$36$$35$$35$194 () Bool (and (= lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV ds_d1Vg) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV) 0)))
(define-fun b$36$$35$$35$210 () Bool (and (not (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801101$35$$35$d1WZ)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801101$35$$35$d1WZ) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801101$35$$35$d1WZ) 0)))
(define-fun b$36$$35$$35$242 () Bool (and (= lq_anf$36$$35$$35$7205759403792801106$35$$35$d1X4 (<= x$35$$35$a1qu y$35$$35$a1qw)) (= lq_anf$36$$35$$35$7205759403792801106$35$$35$d1X4 lq_anf$36$$35$$35$7205759403792801105$35$$35$d1X3)))
(define-fun b$36$$35$$35$259 () Bool (and (=> (apply$35$$35$1 (as Example.notEmpty Int) xs$35$$35$a1og) (> lq_anf$36$$35$$35$7205759403792801115$35$$35$d1Xd 0)) (>= lq_anf$36$$35$$35$7205759403792801115$35$$35$d1Xd 0)))
(define-fun b$36$$35$$35$275 () Bool (and (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801117$35$$35$d1Xf) (= lq_anf$36$$35$$35$7205759403792801117$35$$35$d1Xf ds_d1Sk) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801117$35$$35$d1Xf) 0)))
(define-fun b$36$$35$$35$291 () Bool (and (= lq_anf$36$$35$$35$7205759403792801126$35$$35$d1Xo ds_d1SP) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801126$35$$35$d1Xo) 0)))
(define-fun b$36$$35$$35$803 () Bool (< 0 VV$35$$35$F$35$$35$19))
(define-fun b$36$$35$$35$307 () Bool (and (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801128$35$$35$d1Xq) (= lq_anf$36$$35$$35$7205759403792801128$35$$35$d1Xq ds_d1S3) (= lq_anf$36$$35$$35$7205759403792801128$35$$35$d1Xq (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) ds_d1Si) ds_d1Sj)) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792801128$35$$35$d1Xq) ds_d1Si) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801128$35$$35$d1Xq) (+ 1 (apply$35$$35$0 (as len Int) ds_d1Sj))) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792801128$35$$35$d1Xq) ds_d1Sj) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801128$35$$35$d1Xq) 0)))
(define-fun b$36$$35$$35$819 () Bool false)
(define-fun b$36$$35$$35$323 () Bool (and (= lq_anf$36$$35$$35$7205759403792801133$35$$35$d1Xv ds_d1RH) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801133$35$$35$d1Xv) 0)))
(define-fun b$36$$35$$35$339 () Bool (>= (apply$35$$35$0 (as len Int) ys$35$$35$a1va) 0))
(define-fun b$36$$35$$35$851 () Bool (< 0 VV$35$$35$F$35$$35$138))
(define-fun b$36$$35$$35$867 () Bool (= VV$35$$35$F$35$$35$142 (+ lq_anf$36$$35$$35$7205759403792801121$35$$35$d1Xj lq_anf$36$$35$$35$7205759403792801122$35$$35$d1Xk)))
(define-fun b$36$$35$$35$115 () Bool (= lq_anf$36$$35$$35$7205759403792801065$35$$35$d1Wp lq_anf$36$$35$$35$7205759403792801064$35$$35$d1Wo))
(define-fun b$36$$35$$35$147 () Bool (= lq_anf$36$$35$$35$7205759403792801083$35$$35$d1WH lq_anf$36$$35$$35$7205759403792801082$35$$35$d1WG))
(define-fun b$36$$35$$35$419 () Bool (and (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801162$35$$35$d1XY) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792801162$35$$35$d1XY) lq_anf$36$$35$$35$7205759403792801154$35$$35$d1XQ) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801162$35$$35$d1XY) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801161$35$$35$d1XX))) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792801162$35$$35$d1XY) lq_anf$36$$35$$35$7205759403792801161$35$$35$d1XX) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801162$35$$35$d1XY) 0)))
(define-fun b$36$$35$$35$179 () Bool (and (apply$35$$35$1 (as Example.notEmpty Int) ds_d1V4) (>= (apply$35$$35$0 (as len Int) ds_d1V4) 0)))
(define-fun b$36$$35$$35$435 () Bool (>= (apply$35$$35$0 (as len Int) xs$35$$35$a1qt) 0))
(define-fun b$36$$35$$35$195 () Bool (and (= lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV ds_d1Vg) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV) 0)))
(define-fun b$36$$35$$35$227 () Bool (>= (apply$35$$35$0 (as len Int) s$35$$35$a1Lx) 0))
(define-fun b$36$$35$$35$243 () Bool (and lq_anf$36$$35$$35$7205759403792801106$35$$35$d1X4 (= lq_anf$36$$35$$35$7205759403792801106$35$$35$d1X4 (<= x$35$$35$a1qu y$35$$35$a1qw)) (= lq_anf$36$$35$$35$7205759403792801106$35$$35$d1X4 lq_anf$36$$35$$35$7205759403792801105$35$$35$d1X3)))
(define-fun b$36$$35$$35$292 () Bool (and (= lq_anf$36$$35$$35$7205759403792801126$35$$35$d1Xo ds_d1SP) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801126$35$$35$d1Xo) 0)))
(define-fun b$36$$35$$35$804 () Bool (and (= VV$35$$35$F$35$$35$275 lq_anf$36$$35$$35$7205759403792801080$35$$35$d1WE) (= (apply$35$$35$8 (as len Int) VV$35$$35$F$35$$35$275) (strLen lq_anf$36$$35$$35$7205759403792801079$35$$35$d1WD)) (>= (apply$35$$35$8 (as len Int) VV$35$$35$F$35$$35$275) 0) (= VV$35$$35$F$35$$35$275 lq_anf$36$$35$$35$7205759403792801079$35$$35$d1WD)))
(define-fun b$36$$35$$35$820 () Bool (and (not (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$53)) (= VV$35$$35$F$35$$35$53 lq_anf$36$$35$$35$7205759403792801164$35$$35$d1Y0) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$53) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$53) 0)))
(define-fun b$36$$35$$35$324 () Bool (and (not (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801133$35$$35$d1Xv)) (= lq_anf$36$$35$$35$7205759403792801133$35$$35$d1Xv (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792801133$35$$35$d1Xv ds_d1RH) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801133$35$$35$d1Xv) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801133$35$$35$d1Xv) 0)))
(define-fun b$36$$35$$35$340 () Bool (and (>= (apply$35$$35$0 (as len Int) zs$35$$35$a1vc) 0) (<= (apply$35$$35$0 (as len Int) zs$35$$35$a1vc) (apply$35$$35$0 (as len Int) xs$35$$35$a1ow))))
(define-fun b$36$$35$$35$852 () Bool (and (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$170) (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$170) lq_anf$36$$35$$35$7205759403792801108$35$$35$d1X6) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$170) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801109$35$$35$d1X7))) (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$170) lq_anf$36$$35$$35$7205759403792801109$35$$35$d1X7) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$170) 0)))
(define-fun b$36$$35$$35$116 () Bool (= lq_anf$36$$35$$35$7205759403792801066$35$$35$d1Wq 11))
(define-fun b$36$$35$$35$132 () Bool (not (= 0 ds_d1TC)))
(define-fun b$36$$35$$35$180 () Bool (and (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801094$35$$35$d1WS) (= lq_anf$36$$35$$35$7205759403792801094$35$$35$d1WS ds_d1V4) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801094$35$$35$d1WS) 0)))
(define-fun b$36$$35$$35$436 () Bool (and (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801165$35$$35$d1Y1) (= lq_anf$36$$35$$35$7205759403792801165$35$$35$d1Y1 ds_d1Ri) (= lq_anf$36$$35$$35$7205759403792801165$35$$35$d1Y1 (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) x$35$$35$a1qs) xs$35$$35$a1qt)) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792801165$35$$35$d1Y1) x$35$$35$a1qs) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801165$35$$35$d1Y1) (+ 1 (apply$35$$35$0 (as len Int) xs$35$$35$a1qt))) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792801165$35$$35$d1Y1) xs$35$$35$a1qt) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801165$35$$35$d1Y1) 0)))
(define-fun b$36$$35$$35$196 () Bool (and (not (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV)) (= lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV ds_d1Vg) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV) 0)))
(define-fun b$36$$35$$35$212 () Bool (and (= lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW ds_d1VY) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW) 0)))
(define-fun b$36$$35$$35$277 () Bool (>= (apply$35$$35$0 (as len Int) ds_d1SK) 0))
(define-fun b$36$$35$$35$789 () Bool (and (= VV$35$$35$F$35$$35$272 lq_anf$36$$35$$35$7205759403792801090$35$$35$d1WO) (= (apply$35$$35$8 (as len Int) VV$35$$35$F$35$$35$272) (strLen lq_anf$36$$35$$35$7205759403792801089$35$$35$d1WN)) (>= (apply$35$$35$8 (as len Int) VV$35$$35$F$35$$35$272) 0) (= VV$35$$35$F$35$$35$272 lq_anf$36$$35$$35$7205759403792801089$35$$35$d1WN)))
(define-fun b$36$$35$$35$293 () Bool (and (not (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801126$35$$35$d1Xo)) (= lq_anf$36$$35$$35$7205759403792801126$35$$35$d1Xo (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792801126$35$$35$d1Xo ds_d1SP) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801126$35$$35$d1Xo) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801126$35$$35$d1Xo) 0)))
(define-fun b$36$$35$$35$309 () Bool (>= (apply$35$$35$0 (as len Int) xs$35$$35$a1ou) 0))
(define-fun b$36$$35$$35$821 () Bool (and (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$101) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$101) 0)))
(define-fun b$36$$35$$35$837 () Bool (and (not VV$35$$35$F$35$$35$136) (= VV$35$$35$F$35$$35$136 GHC.Types.False)))
(define-fun b$36$$35$$35$341 () Bool (and (= ds_d1RU (apply$35$$35$0 (apply$35$$35$0 (as GHC.Tuple.$40$$44$$41$ Int) ys$35$$35$a1va) zs$35$$35$a1vc)) (= (apply$35$$35$0 (as fst Int) ds_d1RU) ys$35$$35$a1va) (= (apply$35$$35$0 (as snd Int) ds_d1RU) zs$35$$35$a1vc) (= (apply$35$$35$0 (as x_Tuple21 Int) ds_d1RU) ys$35$$35$a1va) (= (apply$35$$35$0 (as x_Tuple22 Int) ds_d1RU) zs$35$$35$a1vc)))
(define-fun b$36$$35$$35$869 () Bool (and (= (apply$35$$35$1 (as Example.notEmpty Int) wxs$35$$35$a1qi) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$15)) (= VV$35$$35$F$35$$35$15 weights$35$$35$a1qk) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$15) 0)))
(define-fun b$36$$35$$35$117 () Bool (= lq_anf$36$$35$$35$7205759403792801067$35$$35$d1Wr lq_anf$36$$35$$35$7205759403792801066$35$$35$d1Wq))
(define-fun b$36$$35$$35$373 () Bool (and (apply$35$$35$1 (as Example.notEmpty Int) ds_d1UM) (>= (apply$35$$35$0 (as len Int) ds_d1UM) 0)))
(define-fun b$36$$35$$35$133 () Bool (and (= lq_anf$36$$35$$35$7205759403792801077$35$$35$d1WB ds_d1TC) (not (= 0 lq_anf$36$$35$$35$7205759403792801077$35$$35$d1WB))))
(define-fun b$36$$35$$35$389 () Bool (and (apply$35$$35$1 (as Example.notEmpty Int) xs$35$$35$a1ok) (>= (apply$35$$35$0 (as len Int) xs$35$$35$a1ok) 0)))
(define-fun b$36$$35$$35$405 () Bool (= lq_anf$36$$35$$35$7205759403792801153$35$$35$d1XP 1))
(define-fun b$36$$35$$35$421 () Bool (and (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801163$35$$35$d1XZ) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792801163$35$$35$d1XZ) lq_anf$36$$35$$35$7205759403792801153$35$$35$d1XP) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801163$35$$35$d1XZ) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801162$35$$35$d1XY))) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792801163$35$$35$d1XZ) lq_anf$36$$35$$35$7205759403792801162$35$$35$d1XY) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801163$35$$35$d1XZ) 0)))
(define-fun b$36$$35$$35$181 () Bool (and (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801094$35$$35$d1WS) (= lq_anf$36$$35$$35$7205759403792801094$35$$35$d1WS ds_d1V4) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801094$35$$35$d1WS) 0)))
(define-fun b$36$$35$$35$245 () Bool (and (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801110$35$$35$d1X8) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792801110$35$$35$d1X8) x$35$$35$a1qu) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801110$35$$35$d1X8) (+ 1 (apply$35$$35$0 (as len Int) s$35$$35$a1Lx))) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792801110$35$$35$d1X8) s$35$$35$a1Lx) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801110$35$$35$d1X8) 0)))
(define-fun b$36$$35$$35$278 () Bool (and (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801117$35$$35$d1Xf) (= lq_anf$36$$35$$35$7205759403792801117$35$$35$d1Xf ds_d1Sk) (= lq_anf$36$$35$$35$7205759403792801117$35$$35$d1Xf (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) ds_d1SJ) ds_d1SK)) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792801117$35$$35$d1Xf) ds_d1SJ) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801117$35$$35$d1Xf) (+ 1 (apply$35$$35$0 (as len Int) ds_d1SK))) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792801117$35$$35$d1Xf) ds_d1SK) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801117$35$$35$d1Xf) 0)))
(define-fun b$36$$35$$35$790 () Bool (and (= VV$35$$35$F$35$$35$80 xs$35$$35$a1on) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$80) 0)))
(define-fun b$36$$35$$35$294 () Bool (= lq_anf$36$$35$$35$7205759403792801127$35$$35$d1Xp 0))
(define-fun b$36$$35$$35$806 () Bool (and (=> (apply$35$$35$1 (as Example.notEmpty Int) xs$35$$35$a1ok) (> VV$35$$35$F$35$$35$83 0)) (= VV$35$$35$F$35$$35$83 elems$35$$35$a1om) (>= VV$35$$35$F$35$$35$83 0)))
(define-fun b$36$$35$$35$310 () Bool (= lq_anf$36$$35$$35$7205759403792801129$35$$35$d1Xr (not (apply$35$$35$1 (as Example.notEmpty Int) xs$35$$35$a1ou))))
(define-fun b$36$$35$$35$822 () Bool (and (= VV$35$$35$F$35$$35$133 xs$35$$35$a1ou) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$133) 0)))
(define-fun b$36$$35$$35$326 () Bool (and (= lq_anf$36$$35$$35$7205759403792801133$35$$35$d1Xv ds_d1RH) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801133$35$$35$d1Xv) 0)))
(define-fun b$36$$35$$35$838 () Bool (= VV$35$$35$F$35$$35$152 lq_anf$36$$35$$35$7205759403792801112$35$$35$d1Xa))
(define-fun b$36$$35$$35$870 () Bool (and (= VV$35$$35$F$35$$35$271 lq_anf$36$$35$$35$7205759403792801093$35$$35$d1WR) (= (apply$35$$35$8 (as len Int) VV$35$$35$F$35$$35$271) (strLen lq_anf$36$$35$$35$7205759403792801092$35$$35$d1WQ)) (>= (apply$35$$35$8 (as len Int) VV$35$$35$F$35$$35$271) 0) (= VV$35$$35$F$35$$35$271 lq_anf$36$$35$$35$7205759403792801092$35$$35$d1WQ)))
(define-fun b$36$$35$$35$118 () Bool (= lq_anf$36$$35$$35$7205759403792801068$35$$35$d1Ws 32))
(define-fun b$36$$35$$35$374 () Bool (and (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801142$35$$35$d1XE) (= lq_anf$36$$35$$35$7205759403792801142$35$$35$d1XE ds_d1UM) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801142$35$$35$d1XE) 0)))
(define-fun b$36$$35$$35$134 () Bool (and (= lq_anf$36$$35$$35$7205759403792801077$35$$35$d1WB ds_d1TC) (not (= 0 lq_anf$36$$35$$35$7205759403792801077$35$$35$d1WB))))
(define-fun b$36$$35$$35$390 () Bool (and (=> (apply$35$$35$1 (as Example.notEmpty Int) xs$35$$35$a1ok) (> elems$35$$35$a1om 0)) (>= elems$35$$35$a1om 0)))
(define-fun b$36$$35$$35$406 () Bool (= lq_anf$36$$35$$35$7205759403792801154$35$$35$d1XQ 2))
(define-fun b$36$$35$$35$182 () Bool (and (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801094$35$$35$d1WS) (not (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801094$35$$35$d1WS)) (= lq_anf$36$$35$$35$7205759403792801094$35$$35$d1WS (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792801094$35$$35$d1WS ds_d1V4) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801094$35$$35$d1WS) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801094$35$$35$d1WS) 0)))
(define-fun b$36$$35$$35$438 () Bool (and (= (apply$35$$35$1 (as Example.notEmpty Int) xs$35$$35$a1qt) (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801167$35$$35$d1Y3)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801167$35$$35$d1Y3) 0)))
(define-fun b$36$$35$$35$198 () Bool (and (= lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV ds_d1Vg) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV) 0)))
(define-fun b$36$$35$$35$214 () Bool (>= (apply$35$$35$0 (as len Int) etc$35$$35$a1qx) 0))
(define-fun b$36$$35$$35$279 () Bool (and (= lq_anf$36$$35$$35$7205759403792801119$35$$35$d1Xh ds_d1SK) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801119$35$$35$d1Xh) 0)))
(define-fun b$36$$35$$35$791 () Bool (and (= VV$35$$35$F$35$$35$96 lq_anf$36$$35$$35$7205759403792801141$35$$35$d1XD) (= (apply$35$$35$8 (as len Int) VV$35$$35$F$35$$35$96) (strLen lq_anf$36$$35$$35$7205759403792801140$35$$35$d1XC)) (>= (apply$35$$35$8 (as len Int) VV$35$$35$F$35$$35$96) 0) (= VV$35$$35$F$35$$35$96 lq_anf$36$$35$$35$7205759403792801140$35$$35$d1XC)))
(define-fun b$36$$35$$35$295 () Bool (and (= lq_anf$36$$35$$35$7205759403792801126$35$$35$d1Xo ds_d1SP) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801126$35$$35$d1Xo) 0)))
(define-fun b$36$$35$$35$807 () Bool (and (= VV$35$$35$F$35$$35$147 lit$36$$47$home$47$ricardo$47$docencia$47$verifAsistid$47$2021$45$22$47$versionProfesor$47$LiquidHaskell$47$lh$45$tests$47$src$47$Example.lhs$58$$40$188$44$1$41$$45$$40$189$44$28$41$$124$function$32$size1) (= VV$35$$35$F$35$$35$147 lq_anf$36$$35$$35$7205759403792801118$35$$35$d1Xg)))
(define-fun b$36$$35$$35$311 () Bool (and (= lq_anf$36$$35$$35$7205759403792801130$35$$35$d1Xs (not (apply$35$$35$1 (as Example.notEmpty Int) xs$35$$35$a1ou))) (= lq_anf$36$$35$$35$7205759403792801130$35$$35$d1Xs lq_anf$36$$35$$35$7205759403792801129$35$$35$d1Xr)))
(define-fun b$36$$35$$35$823 () Bool (= VV$35$$35$F$35$$35$149 (+ lq_anf$36$$35$$35$7205759403792801114$35$$35$d1Xc lq_anf$36$$35$$35$7205759403792801115$35$$35$d1Xd)))
(define-fun b$36$$35$$35$855 () Bool (= VV$35$$35$F$35$$35$27 (+ lq_tmp$36$x$35$$35$4659 lq_tmp$36$x$35$$35$4660)))
(define-fun b$36$$35$$35$871 () Bool (and (=> (apply$35$$35$1 (as Example.notEmpty Int) xs$35$$35$a1on) (> VV$35$$35$F$35$$35$79 0)) (= VV$35$$35$F$35$$35$79 elems$35$$35$a1oo) (>= VV$35$$35$F$35$$35$79 0)))
(define-fun b$36$$35$$35$119 () Bool (= lq_anf$36$$35$$35$7205759403792801069$35$$35$d1Wt lq_anf$36$$35$$35$7205759403792801068$35$$35$d1Ws))
(define-fun b$36$$35$$35$375 () Bool (and (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801142$35$$35$d1XE) (= lq_anf$36$$35$$35$7205759403792801142$35$$35$d1XE ds_d1UM) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801142$35$$35$d1XE) 0)))
(define-fun b$36$$35$$35$407 () Bool (= lq_anf$36$$35$$35$7205759403792801155$35$$35$d1XR 3))
(define-fun b$36$$35$$35$183 () Bool (= lq_anf$36$$35$$35$7205759403792801095$35$$35$d1WT lit$36$don$39$t$32$worry$44$$32$be$32$happy))
(define-fun b$36$$35$$35$215 () Bool (and (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW) (= lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW ds_d1VY) (= lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) y$35$$35$a1qw) etc$35$$35$a1qx)) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW) y$35$$35$a1qw) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW) (+ 1 (apply$35$$35$0 (as len Int) etc$35$$35$a1qx))) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW) etc$35$$35$a1qx) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW) 0)))
(define-fun b$36$$35$$35$231 () Bool (= lq_anf$36$$35$$35$7205759403792801105$35$$35$d1X3 (<= x$35$$35$a1qu y$35$$35$a1qw)))
(define-fun b$36$$35$$35$280 () Bool (and (= lq_anf$36$$35$$35$7205759403792801119$35$$35$d1Xh ds_d1SK) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801119$35$$35$d1Xh) 0)))
(define-fun b$36$$35$$35$808 () Bool (and (=> (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$211)) (= VV$35$$35$F$35$$35$211 lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$211) 0)))
(define-fun b$36$$35$$35$312 () Bool (and (= lq_anf$36$$35$$35$7205759403792801130$35$$35$d1Xs (not (apply$35$$35$1 (as Example.notEmpty Int) xs$35$$35$a1ou))) (= lq_anf$36$$35$$35$7205759403792801130$35$$35$d1Xs lq_anf$36$$35$$35$7205759403792801129$35$$35$d1Xr)))
(define-fun b$36$$35$$35$824 () Bool (and (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$245) (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$245) lq_anf$36$$35$$35$7205759403792801100$35$$35$d1WY) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$245) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801101$35$$35$d1WZ))) (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$245) lq_anf$36$$35$$35$7205759403792801101$35$$35$d1WZ) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$245) 0)))
(define-fun b$36$$35$$35$328 () Bool (>= (apply$35$$35$0 (as len Int) xs$35$$35$a1ow) 0))
(define-fun b$36$$35$$35$344 () Bool (and (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801135$35$$35$d1Xx) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792801135$35$$35$d1Xx) x$35$$35$a1ov) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801135$35$$35$d1Xx) (+ 1 (apply$35$$35$0 (as len Int) ys$35$$35$a1va))) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792801135$35$$35$d1Xx) ys$35$$35$a1va) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801135$35$$35$d1Xx) 0)))
(define-fun b$36$$35$$35$856 () Bool (and (= VV$35$$35$F$35$$35$139 ds_d1SP) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$139) 0)))
(define-fun b$36$$35$$35$360 () Bool (and (apply$35$$35$1 (as Example.notEmpty Int) ds_d1Uk) (>= (apply$35$$35$0 (as len Int) ds_d1Uk) 0)))
(define-fun b$36$$35$$35$872 () Bool (and (= VV$35$$35$F$35$$35$143 ds_d1SK) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$143) 0)))
(define-fun b$36$$35$$35$120 () Bool (= lq_anf$36$$35$$35$7205759403792801070$35$$35$d1Wu 20))
(define-fun b$36$$35$$35$376 () Bool (and (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801142$35$$35$d1XE) (not (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801142$35$$35$d1XE)) (= lq_anf$36$$35$$35$7205759403792801142$35$$35$d1XE (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792801142$35$$35$d1XE ds_d1UM) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801142$35$$35$d1XE) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801142$35$$35$d1XE) 0)))
(define-fun b$36$$35$$35$136 () Bool (and (= lq_anf$36$$35$$35$7205759403792801077$35$$35$d1WB ds_d1TC) (= lq_anf$36$$35$$35$7205759403792801077$35$$35$d1WB ds_d1TJ) (= lq_anf$36$$35$$35$7205759403792801077$35$$35$d1WB ds_d1TJ) (not (= 0 lq_anf$36$$35$$35$7205759403792801077$35$$35$d1WB))))
(define-fun b$36$$35$$35$152 () Bool (= lq_anf$36$$35$$35$7205759403792801084$35$$35$d1WI (+ x$35$$35$a1od y$35$$35$a1oe)))
(define-fun b$36$$35$$35$408 () Bool (= lq_anf$36$$35$$35$7205759403792801156$35$$35$d1XS 4))
(define-fun b$36$$35$$35$168 () Bool (and (apply$35$$35$1 (as Example.notEmpty Int) ds_d1U8) (>= (apply$35$$35$0 (as len Int) ds_d1U8) 0)))
(define-fun b$36$$35$$35$424 () Bool (and (not (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801164$35$$35$d1Y0)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801164$35$$35$d1Y0) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801164$35$$35$d1Y0) 0)))
(define-fun b$36$$35$$35$184 () Bool (and (= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792801096$35$$35$d1WU) (strLen lq_anf$36$$35$$35$7205759403792801095$35$$35$d1WT)) (>= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792801096$35$$35$d1WU) 0) (= lq_anf$36$$35$$35$7205759403792801096$35$$35$d1WU lq_anf$36$$35$$35$7205759403792801095$35$$35$d1WT)))
(define-fun b$36$$35$$35$200 () Bool (>= (apply$35$$35$0 (as len Int) ds_d1VY) 0))
(define-fun b$36$$35$$35$456 () Bool (and (= (apply$35$$35$1 (as Example.notEmpty Int) wxs$35$$35$a1qi) (apply$35$$35$1 (as Example.notEmpty Int) weights$35$$35$a1qk)) (>= (apply$35$$35$0 (as len Int) weights$35$$35$a1qk) 0)))
(define-fun b$36$$35$$35$232 () Bool (and (= lq_anf$36$$35$$35$7205759403792801106$35$$35$d1X4 (<= x$35$$35$a1qu y$35$$35$a1qw)) (= lq_anf$36$$35$$35$7205759403792801106$35$$35$d1X4 lq_anf$36$$35$$35$7205759403792801105$35$$35$d1X3)))
(define-fun b$36$$35$$35$248 () Bool (>= (apply$35$$35$0 (as len Int) ds_d1Tn) 0))
(define-fun b$36$$35$$35$281 () Bool (and (not (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801119$35$$35$d1Xh)) (= lq_anf$36$$35$$35$7205759403792801119$35$$35$d1Xh (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792801119$35$$35$d1Xh ds_d1SK) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801119$35$$35$d1Xh) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801119$35$$35$d1Xh) 0)))
(define-fun b$36$$35$$35$297 () Bool (>= (apply$35$$35$0 (as len Int) ds_d1T5) 0))
(define-fun b$36$$35$$35$313 () Bool (and (not lq_anf$36$$35$$35$7205759403792801130$35$$35$d1Xs) (= lq_anf$36$$35$$35$7205759403792801130$35$$35$d1Xs (not (apply$35$$35$1 (as Example.notEmpty Int) xs$35$$35$a1ou))) (= lq_anf$36$$35$$35$7205759403792801130$35$$35$d1Xs lq_anf$36$$35$$35$7205759403792801129$35$$35$d1Xr)))
(define-fun b$36$$35$$35$825 () Bool (< 0 VV$35$$35$F$35$$35$6))
(define-fun b$36$$35$$35$329 () Bool (and (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801133$35$$35$d1Xv) (= lq_anf$36$$35$$35$7205759403792801133$35$$35$d1Xv ds_d1RH) (= lq_anf$36$$35$$35$7205759403792801133$35$$35$d1Xv (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) x$35$$35$a1ov) xs$35$$35$a1ow)) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792801133$35$$35$d1Xv) x$35$$35$a1ov) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801133$35$$35$d1Xv) (+ 1 (apply$35$$35$0 (as len Int) xs$35$$35$a1ow))) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792801133$35$$35$d1Xv) xs$35$$35$a1ow) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801133$35$$35$d1Xv) 0)))
(define-fun b$36$$35$$35$345 () Bool (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801136$35$$35$d1Xy) 0))
(define-fun b$36$$35$$35$361 () Bool (and (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801139$35$$35$d1XB) (= lq_anf$36$$35$$35$7205759403792801139$35$$35$d1XB ds_d1Uk) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801139$35$$35$d1XB) 0)))
(define-fun b$36$$35$$35$121 () Bool (= lq_anf$36$$35$$35$7205759403792801071$35$$35$d1Wv lq_anf$36$$35$$35$7205759403792801070$35$$35$d1Wu))
(define-fun b$36$$35$$35$377 () Bool (= lq_anf$36$$35$$35$7205759403792801144$35$$35$d1XG lit$36$cannot$32$add$32$up$32$empty$32$list))
(define-fun b$36$$35$$35$137 () Bool (= lq_anf$36$$35$$35$7205759403792801078$35$$35$d1WC ds_d1TJ))
(define-fun b$36$$35$$35$393 () Bool (>= (apply$35$$35$0 (as len Int) xs$35$$35$a1on) 0))
(define-fun b$36$$35$$35$153 () Bool (= lq_anf$36$$35$$35$7205759403792801085$35$$35$d1WJ (+ lq_anf$36$$35$$35$7205759403792801084$35$$35$d1WI z$35$$35$a1of)))
(define-fun b$36$$35$$35$409 () Bool (= lq_anf$36$$35$$35$7205759403792801157$35$$35$d1XT 5))
(define-fun b$36$$35$$35$169 () Bool (and (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801091$35$$35$d1WP) (= lq_anf$36$$35$$35$7205759403792801091$35$$35$d1WP ds_d1U8) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801091$35$$35$d1WP) 0)))
(define-fun b$36$$35$$35$441 () Bool (>= (apply$35$$35$0 (as len Int) xs$35$$35$a1q8) 0))
(define-fun b$36$$35$$35$201 () Bool (and (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV) (= lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV ds_d1Vg) (= lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) x$35$$35$a1qu) ds_d1VY)) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV) x$35$$35$a1qu) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV) (+ 1 (apply$35$$35$0 (as len Int) ds_d1VY))) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV) ds_d1VY) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV) 0)))
(define-fun b$36$$35$$35$233 () Bool (and (= lq_anf$36$$35$$35$7205759403792801106$35$$35$d1X4 (<= x$35$$35$a1qu y$35$$35$a1qw)) (= lq_anf$36$$35$$35$7205759403792801106$35$$35$d1X4 lq_anf$36$$35$$35$7205759403792801105$35$$35$d1X3)))
(define-fun b$36$$35$$35$249 () Bool (and (= lq_anf$36$$35$$35$7205759403792801111$35$$35$d1X9 ds_d1Tn) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801111$35$$35$d1X9) 0)))
(define-fun b$36$$35$$35$282 () Bool (= lq_anf$36$$35$$35$7205759403792801123$35$$35$d1Xl 1))
(define-fun b$36$$35$$35$298 () Bool (and (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801126$35$$35$d1Xo) (= lq_anf$36$$35$$35$7205759403792801126$35$$35$d1Xo ds_d1SP) (= lq_anf$36$$35$$35$7205759403792801126$35$$35$d1Xo (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) ds_d1T4) ds_d1T5)) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792801126$35$$35$d1Xo) ds_d1T4) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801126$35$$35$d1Xo) (+ 1 (apply$35$$35$0 (as len Int) ds_d1T5))) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792801126$35$$35$d1Xo) ds_d1T5) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801126$35$$35$d1Xo) 0)))
(define-fun b$36$$35$$35$826 () Bool (and (not (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$262)) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$262) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$262) 0)))
(define-fun b$36$$35$$35$842 () Bool (and (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$89) (= VV$35$$35$F$35$$35$89 ds_d1UM) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$89) 0)))
(define-fun b$36$$35$$35$106 () Bool (= lq_anf$36$$35$$35$7205759403792801056$35$$35$d1Wg lit$36$error))
(define-fun b$36$$35$$35$362 () Bool (and (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801139$35$$35$d1XB) (= lq_anf$36$$35$$35$7205759403792801139$35$$35$d1XB ds_d1Uk) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801139$35$$35$d1XB) 0)))
(define-fun b$36$$35$$35$378 () Bool (and (= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792801145$35$$35$d1XH) (strLen lq_anf$36$$35$$35$7205759403792801144$35$$35$d1XG)) (>= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792801145$35$$35$d1XH) 0) (= lq_anf$36$$35$$35$7205759403792801145$35$$35$d1XH lq_anf$36$$35$$35$7205759403792801144$35$$35$d1XG)))
(define-fun b$36$$35$$35$138 () Bool (and (= lq_anf$36$$35$$35$7205759403792801078$35$$35$d1WC ds_d1TJ) (not (= lq_anf$36$$35$$35$7205759403792801078$35$$35$d1WC 0))))
(define-fun b$36$$35$$35$394 () Bool (and (=> (apply$35$$35$1 (as Example.notEmpty Int) xs$35$$35$a1on) (> elems$35$$35$a1oo 0)) (>= elems$35$$35$a1oo 0)))
(define-fun b$36$$35$$35$154 () Bool (= lq_anf$36$$35$$35$7205759403792801086$35$$35$d1WK 3))
(define-fun b$36$$35$$35$170 () Bool (and (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801091$35$$35$d1WP) (= lq_anf$36$$35$$35$7205759403792801091$35$$35$d1WP ds_d1U8) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801091$35$$35$d1WP) 0)))
(define-fun b$36$$35$$35$202 () Bool (and (= lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW ds_d1VY) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW) 0)))
(define-fun b$36$$35$$35$218 () Bool (and (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1) y$35$$35$a1qw) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1) (+ 1 (apply$35$$35$0 (as len Int) etc$35$$35$a1qx))) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1) etc$35$$35$a1qx) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1) 0)))
(define-fun b$36$$35$$35$234 () Bool (and (not lq_anf$36$$35$$35$7205759403792801106$35$$35$d1X4) (= lq_anf$36$$35$$35$7205759403792801106$35$$35$d1X4 (<= x$35$$35$a1qu y$35$$35$a1qw)) (= lq_anf$36$$35$$35$7205759403792801106$35$$35$d1X4 lq_anf$36$$35$$35$7205759403792801105$35$$35$d1X3)))
(define-fun b$36$$35$$35$250 () Bool (and (= lq_anf$36$$35$$35$7205759403792801111$35$$35$d1X9 ds_d1Tn) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801111$35$$35$d1X9) 0)))
(define-fun b$36$$35$$35$283 () Bool (and (= lq_anf$36$$35$$35$7205759403792801119$35$$35$d1Xh ds_d1SK) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801119$35$$35$d1Xh) 0)))
(define-fun b$36$$35$$35$795 () Bool (and (= VV$35$$35$F$35$$35$273 lq_anf$36$$35$$35$7205759403792801087$35$$35$d1WL) (= VV$35$$35$F$35$$35$273 lq_anf$36$$35$$35$7205759403792801086$35$$35$d1WK)))
(define-fun b$36$$35$$35$43 () Bool (not GHC.Types.False))
(define-fun b$36$$35$$35$811 () Bool (and (= VV$35$$35$F$35$$35$276 ds_d1TC) (not (= 0 VV$35$$35$F$35$$35$276))))
(define-fun b$36$$35$$35$843 () Bool (and (= VV$35$$35$F$35$$35$121 ys$35$$35$a1va) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$121) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$121) (apply$35$$35$0 (as len Int) xs$35$$35$a1ow))))
(define-fun b$36$$35$$35$859 () Bool (and (= VV$35$$35$F$35$$35$92 lq_anf$36$$35$$35$7205759403792801145$35$$35$d1XH) (= (apply$35$$35$8 (as len Int) VV$35$$35$F$35$$35$92) (strLen lq_anf$36$$35$$35$7205759403792801144$35$$35$d1XG)) (>= (apply$35$$35$8 (as len Int) VV$35$$35$F$35$$35$92) 0) (= VV$35$$35$F$35$$35$92 lq_anf$36$$35$$35$7205759403792801144$35$$35$d1XG)))
(define-fun b$36$$35$$35$107 () Bool (and (= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792801057$35$$35$d1Wh) (strLen lq_anf$36$$35$$35$7205759403792801056$35$$35$d1Wg)) (>= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792801057$35$$35$d1Wh) 0) (= lq_anf$36$$35$$35$7205759403792801057$35$$35$d1Wh lq_anf$36$$35$$35$7205759403792801056$35$$35$d1Wg)))
(define-fun b$36$$35$$35$363 () Bool (and (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801139$35$$35$d1XB) (not (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801139$35$$35$d1XB)) (= lq_anf$36$$35$$35$7205759403792801139$35$$35$d1XB (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792801139$35$$35$d1XB ds_d1Uk) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801139$35$$35$d1XB) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801139$35$$35$d1XB) 0)))
(define-fun b$36$$35$$35$379 () Bool (and (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801142$35$$35$d1XE) (= lq_anf$36$$35$$35$7205759403792801142$35$$35$d1XE ds_d1UM) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801142$35$$35$d1XE) 0)))
(define-fun b$36$$35$$35$139 () Bool (and (= lq_anf$36$$35$$35$7205759403792801078$35$$35$d1WC 0) (= lq_anf$36$$35$$35$7205759403792801078$35$$35$d1WC ds_d1TJ)))
(define-fun b$36$$35$$35$395 () Bool (= lq_anf$36$$35$$35$7205759403792801148$35$$35$d1XK (apply$35$$35$1 (as Example.notEmpty Int) xs$35$$35$a1on)))
(define-fun b$36$$35$$35$155 () Bool (= lq_anf$36$$35$$35$7205759403792801087$35$$35$d1WL lq_anf$36$$35$$35$7205759403792801086$35$$35$d1WK))
(define-fun b$36$$35$$35$411 () Bool (and (not (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801158$35$$35$d1XU)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801158$35$$35$d1XU) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801158$35$$35$d1XU) 0)))
(define-fun b$36$$35$$35$171 () Bool (and (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801091$35$$35$d1WP) (not (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801091$35$$35$d1WP)) (= lq_anf$36$$35$$35$7205759403792801091$35$$35$d1WP (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792801091$35$$35$d1WP ds_d1U8) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801091$35$$35$d1WP) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801091$35$$35$d1WP) 0)))
(define-fun b$36$$35$$35$203 () Bool (and (= lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW ds_d1VY) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW) 0)))
(define-fun b$36$$35$$35$219 () Bool (and (=> (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1) (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2) 0)))
(define-fun b$36$$35$$35$251 () Bool (and (not (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801111$35$$35$d1X9)) (= lq_anf$36$$35$$35$7205759403792801111$35$$35$d1X9 (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792801111$35$$35$d1X9 ds_d1Tn) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801111$35$$35$d1X9) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801111$35$$35$d1X9) 0)))
(define-fun b$36$$35$$35$796 () Bool (= VV$35$$35$F$35$$35$145 lq_anf$36$$35$$35$7205759403792801123$35$$35$d1Xl))
(define-fun b$36$$35$$35$300 () Bool (>= (apply$35$$35$0 (as len Int) ds_d1S3) 0))
(define-fun b$36$$35$$35$812 () Bool (and (not (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$52)) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$52) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$52) 0)))
(define-fun b$36$$35$$35$828 () Bool (and (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$54) (= VV$35$$35$F$35$$35$54 lq_anf$36$$35$$35$7205759403792801163$35$$35$d1XZ) (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$54) lq_anf$36$$35$$35$7205759403792801153$35$$35$d1XP) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$54) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801162$35$$35$d1XY))) (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$54) lq_anf$36$$35$$35$7205759403792801162$35$$35$d1XY) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$54) 0)))
(define-fun b$36$$35$$35$844 () Bool (and VV$35$$35$F$35$$35$137 (= VV$35$$35$F$35$$35$137 GHC.Types.True)))
(define-fun b$36$$35$$35$108 () Bool (= lq_anf$36$$35$$35$7205759403792801058$35$$35$d1Wi lit$36$main))
(define-fun b$36$$35$$35$364 () Bool (= lq_anf$36$$35$$35$7205759403792801140$35$$35$d1XC lit$36$foldl1))
(define-fun b$36$$35$$35$124 () Bool (and (= (apply$35$$35$2 (as fst Int) lq_anf$36$$35$$35$7205759403792801073$35$$35$d1Wx) lq_anf$36$$35$$35$7205759403792801057$35$$35$d1Wh) (= (apply$35$$35$0 (as snd Int) lq_anf$36$$35$$35$7205759403792801073$35$$35$d1Wx) lq_anf$36$$35$$35$7205759403792801072$35$$35$d1Ww) (= (apply$35$$35$2 (as x_Tuple21 Int) lq_anf$36$$35$$35$7205759403792801073$35$$35$d1Wx) lq_anf$36$$35$$35$7205759403792801057$35$$35$d1Wh) (= (apply$35$$35$0 (as x_Tuple22 Int) lq_anf$36$$35$$35$7205759403792801073$35$$35$d1Wx) lq_anf$36$$35$$35$7205759403792801072$35$$35$d1Ww)))
(define-fun b$36$$35$$35$140 () Bool (= lq_anf$36$$35$$35$7205759403792801079$35$$35$d1WD lit$36$divide$45$by$45$zero))
(define-fun b$36$$35$$35$396 () Bool (and (= lq_anf$36$$35$$35$7205759403792801149$35$$35$d1XL (apply$35$$35$1 (as Example.notEmpty Int) xs$35$$35$a1on)) (= lq_anf$36$$35$$35$7205759403792801149$35$$35$d1XL lq_anf$36$$35$$35$7205759403792801148$35$$35$d1XK)))
(define-fun b$36$$35$$35$172 () Bool (= lq_anf$36$$35$$35$7205759403792801092$35$$35$d1WQ lit$36$Relaxeth$33$$32$this$32$too$32$shall$32$ne$39$er$32$be))
(define-fun b$36$$35$$35$428 () Bool (>= (apply$35$$35$0 (as len Int) ds_d1Ri) 0))
(define-fun b$36$$35$$35$444 () Bool (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801170$35$$35$d1Y6) 0))
(define-fun b$36$$35$$35$204 () Bool (and (not (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW)) (= lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW ds_d1VY) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW) 0)))
(define-fun b$36$$35$$35$236 () Bool (and (not (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801107$35$$35$d1X5)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801107$35$$35$d1X5) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801107$35$$35$d1X5) 0)))
(define-fun b$36$$35$$35$252 () Bool (= lq_anf$36$$35$$35$7205759403792801112$35$$35$d1Xa 0))
(define-fun b$36$$35$$35$285 () Bool (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801125$35$$35$d1Xn) 0))
(define-fun b$36$$35$$35$301 () Bool (and (= lq_anf$36$$35$$35$7205759403792801128$35$$35$d1Xq ds_d1S3) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801128$35$$35$d1Xq) 0)))
(define-fun b$36$$35$$35$813 () Bool (and (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$84) (= VV$35$$35$F$35$$35$84 xs$35$$35$a1ok) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$84) 0)))
(define-fun b$36$$35$$35$829 () Bool (and (=> (apply$35$$35$1 (as Example.notEmpty Int) xs$35$$35$a1oh) (> VV$35$$35$F$35$$35$86 0)) (= VV$35$$35$F$35$$35$86 elems$35$$35$a1oj) (>= VV$35$$35$F$35$$35$86 0)))
(define-fun b$36$$35$$35$845 () Bool (and (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$153) (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$153) lq_anf$36$$35$$35$7205759403792801110$35$$35$d1X8) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$153) (+ 1 (apply$35$$35$0 (as len Int) ss$35$$35$a1Lz))) (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$153) ss$35$$35$a1Lz) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$153) 0)))
(define-fun b$36$$35$$35$861 () Bool (and (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$29) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$29) 0)))
(define-fun b$36$$35$$35$109 () Bool (and (= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792801059$35$$35$d1Wj) (strLen lq_anf$36$$35$$35$7205759403792801058$35$$35$d1Wi)) (>= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792801059$35$$35$d1Wj) 0) (= lq_anf$36$$35$$35$7205759403792801059$35$$35$d1Wj lq_anf$36$$35$$35$7205759403792801058$35$$35$d1Wi)))
(define-fun b$36$$35$$35$365 () Bool (and (= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792801141$35$$35$d1XD) (strLen lq_anf$36$$35$$35$7205759403792801140$35$$35$d1XC)) (>= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792801141$35$$35$d1XD) 0) (= lq_anf$36$$35$$35$7205759403792801141$35$$35$d1XD lq_anf$36$$35$$35$7205759403792801140$35$$35$d1XC)))
(define-fun b$36$$35$$35$381 () Bool (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801147$35$$35$d1XJ) 0))
(define-fun b$36$$35$$35$141 () Bool (and (= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792801080$35$$35$d1WE) (strLen lq_anf$36$$35$$35$7205759403792801079$35$$35$d1WD)) (>= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792801080$35$$35$d1WE) 0) (= lq_anf$36$$35$$35$7205759403792801080$35$$35$d1WE lq_anf$36$$35$$35$7205759403792801079$35$$35$d1WD)))
(define-fun b$36$$35$$35$157 () Bool (and (apply$35$$35$1 (as Example.notEmpty Int) ds_d1TM) (>= (apply$35$$35$0 (as len Int) ds_d1TM) 0)))
(define-fun b$36$$35$$35$413 () Bool (and (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801159$35$$35$d1XV) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792801159$35$$35$d1XV) lq_anf$36$$35$$35$7205759403792801157$35$$35$d1XT) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801159$35$$35$d1XV) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801158$35$$35$d1XU))) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792801159$35$$35$d1XV) lq_anf$36$$35$$35$7205759403792801158$35$$35$d1XU) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801159$35$$35$d1XV) 0)))
(define-fun b$36$$35$$35$173 () Bool (and (= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792801093$35$$35$d1WR) (strLen lq_anf$36$$35$$35$7205759403792801092$35$$35$d1WQ)) (>= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792801093$35$$35$d1WR) 0) (= lq_anf$36$$35$$35$7205759403792801093$35$$35$d1WR lq_anf$36$$35$$35$7205759403792801092$35$$35$d1WQ)))
(define-fun b$36$$35$$35$429 () Bool (and (= lq_anf$36$$35$$35$7205759403792801165$35$$35$d1Y1 ds_d1Ri) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801165$35$$35$d1Y1) 0)))
(define-fun b$36$$35$$35$253 () Bool (and (= lq_anf$36$$35$$35$7205759403792801111$35$$35$d1X9 ds_d1Tn) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801111$35$$35$d1X9) 0)))
(define-fun b$36$$35$$35$270 () Bool (and (apply$35$$35$1 (as Example.notEmpty Int) ds_d1Sk) (>= (apply$35$$35$0 (as len Int) ds_d1Sk) 0)))
(define-fun b$36$$35$$35$286 () Bool (and (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801119$35$$35$d1Xh) (= lq_anf$36$$35$$35$7205759403792801119$35$$35$d1Xh ds_d1SK) (= lq_anf$36$$35$$35$7205759403792801119$35$$35$d1Xh (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792801124$35$$35$d1Xm) lq_anf$36$$35$$35$7205759403792801125$35$$35$d1Xn)) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792801119$35$$35$d1Xh) lq_anf$36$$35$$35$7205759403792801124$35$$35$d1Xm) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801119$35$$35$d1Xh) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801125$35$$35$d1Xn))) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792801119$35$$35$d1Xh) lq_anf$36$$35$$35$7205759403792801125$35$$35$d1Xn) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801119$35$$35$d1Xh) 0)))
(define-fun b$36$$35$$35$798 () Bool (< 0 VV$35$$35$F$35$$35$18))
(define-fun b$36$$35$$35$46 () Bool GHC.Types.True)
(define-fun b$36$$35$$35$302 () Bool (and (= lq_anf$36$$35$$35$7205759403792801128$35$$35$d1Xq ds_d1S3) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801128$35$$35$d1Xq) 0)))
(define-fun b$36$$35$$35$830 () Bool (and (= VV$35$$35$F$35$$35$118 zs$35$$35$a1vc) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$118) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$118) (apply$35$$35$0 (as len Int) xs$35$$35$a1ow))))
(define-fun b$36$$35$$35$334 () Bool (and (>= (apply$35$$35$0 (as len Int) ys$35$$35$a1va) 0) (<= (apply$35$$35$0 (as len Int) ys$35$$35$a1va) (apply$35$$35$0 (as len Int) xs$35$$35$a1ow))))
(define-fun b$36$$35$$35$862 () Bool (and (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$45) (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$45) lq_anf$36$$35$$35$7205759403792801166$35$$35$d1Y2) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$45) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801167$35$$35$d1Y3))) (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$45) lq_anf$36$$35$$35$7205759403792801167$35$$35$d1Y3) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$45) 0)))
(define-fun b$36$$35$$35$110 () Bool (= lq_anf$36$$35$$35$7205759403792801060$35$$35$d1Wk lit$36$Example))
(define-fun b$36$$35$$35$126 () Bool (= lq_anf$36$$35$$35$7205759403792801075$35$$35$d1Wz lq_anf$36$$35$$35$7205759403792801074$35$$35$d1Wy))
(define-fun b$36$$35$$35$382 () Bool (and (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801142$35$$35$d1XE) (= lq_anf$36$$35$$35$7205759403792801142$35$$35$d1XE ds_d1UM) (= lq_anf$36$$35$$35$7205759403792801142$35$$35$d1XE (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792801146$35$$35$d1XI) lq_anf$36$$35$$35$7205759403792801147$35$$35$d1XJ)) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792801142$35$$35$d1XE) lq_anf$36$$35$$35$7205759403792801146$35$$35$d1XI) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801142$35$$35$d1XE) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801147$35$$35$d1XJ))) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792801142$35$$35$d1XE) lq_anf$36$$35$$35$7205759403792801147$35$$35$d1XJ) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801142$35$$35$d1XE) 0)))
(define-fun b$36$$35$$35$158 () Bool (and (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801088$35$$35$d1WM) (= lq_anf$36$$35$$35$7205759403792801088$35$$35$d1WM ds_d1TM) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801088$35$$35$d1WM) 0)))
(define-fun b$36$$35$$35$670 () Bool (>= (apply$35$$35$0 (as len Int) lq_tmp$36$x$35$$35$1905) 0))
(define-fun b$36$$35$$35$430 () Bool (and (= lq_anf$36$$35$$35$7205759403792801165$35$$35$d1Y1 ds_d1Ri) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801165$35$$35$d1Y1) 0)))
(define-fun b$36$$35$$35$446 () Bool (and (apply$35$$35$1 (as Example.notEmpty Int) wxs$35$$35$a1qi) (>= (apply$35$$35$0 (as len Int) wxs$35$$35$a1qi) 0)))
(define-fun b$36$$35$$35$206 () Bool (and (not (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801099$35$$35$d1WX)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801099$35$$35$d1WX) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801099$35$$35$d1WX) 0)))
(define-fun b$36$$35$$35$238 () Bool (and (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801108$35$$35$d1X6) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792801108$35$$35$d1X6) x$35$$35$a1qu) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801108$35$$35$d1X6) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801107$35$$35$d1X5))) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792801108$35$$35$d1X6) lq_anf$36$$35$$35$7205759403792801107$35$$35$d1X5) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801108$35$$35$d1X6) 0)))
(define-fun b$36$$35$$35$271 () Bool (and (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801117$35$$35$d1Xf) (= lq_anf$36$$35$$35$7205759403792801117$35$$35$d1Xf ds_d1Sk) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801117$35$$35$d1Xf) 0)))
(define-fun b$36$$35$$35$287 () Bool (= lq_anf$36$$35$$35$7205759403792801120$35$$35$d1Xi 1))
(define-fun b$36$$35$$35$799 () Bool (and (= VV$35$$35$F$35$$35$274 lq_anf$36$$35$$35$7205759403792801083$35$$35$d1WH) (= VV$35$$35$F$35$$35$274 lq_anf$36$$35$$35$7205759403792801082$35$$35$d1WG)))
(define-fun b$36$$35$$35$303 () Bool (and (not (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801128$35$$35$d1Xq)) (= lq_anf$36$$35$$35$7205759403792801128$35$$35$d1Xq (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792801128$35$$35$d1Xq ds_d1S3) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801128$35$$35$d1Xq) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801128$35$$35$d1Xq) 0)))
(define-fun b$36$$35$$35$815 () Bool (= VV$35$$35$F$35$$35$148 (+ lq_anf$36$$35$$35$7205759403792801114$35$$35$d1Xc lq_anf$36$$35$$35$7205759403792801115$35$$35$d1Xd)))
(define-fun b$36$$35$$35$831 () Bool (< 0 VV$35$$35$F$35$$35$7))
(define-fun b$36$$35$$35$335 () Bool (>= (apply$35$$35$0 (as len Int) zs$35$$35$a1vc) 0))
(define-fun b$36$$35$$35$847 () Bool (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$233) 0))
(define-fun b$36$$35$$35$863 () Bool (= VV$35$$35$F$35$$35$141 lq_anf$36$$35$$35$7205759403792801127$35$$35$d1Xp))
(define-fun b$36$$35$$35$111 () Bool (and (= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792801061$35$$35$d1Wl) (strLen lq_anf$36$$35$$35$7205759403792801060$35$$35$d1Wk)) (>= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792801061$35$$35$d1Wl) 0) (= lq_anf$36$$35$$35$7205759403792801061$35$$35$d1Wl lq_anf$36$$35$$35$7205759403792801060$35$$35$d1Wk)))
(define-fun b$36$$35$$35$399 () Bool (and (= lq_anf$36$$35$$35$7205759403792801149$35$$35$d1XL (apply$35$$35$1 (as Example.notEmpty Int) xs$35$$35$a1on)) (= lq_anf$36$$35$$35$7205759403792801149$35$$35$d1XL lq_anf$36$$35$$35$7205759403792801148$35$$35$d1XK)))
(define-fun b$36$$35$$35$159 () Bool (and (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801088$35$$35$d1WM) (= lq_anf$36$$35$$35$7205759403792801088$35$$35$d1WM ds_d1TM) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801088$35$$35$d1WM) 0)))
(define-fun b$36$$35$$35$415 () Bool (and (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801160$35$$35$d1XW) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792801160$35$$35$d1XW) lq_anf$36$$35$$35$7205759403792801156$35$$35$d1XS) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801160$35$$35$d1XW) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801159$35$$35$d1XV))) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792801160$35$$35$d1XW) lq_anf$36$$35$$35$7205759403792801159$35$$35$d1XV) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801160$35$$35$d1XW) 0)))
(define-fun b$36$$35$$35$431 () Bool (and (not (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801165$35$$35$d1Y1)) (= lq_anf$36$$35$$35$7205759403792801165$35$$35$d1Y1 (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792801165$35$$35$d1Y1 ds_d1Ri) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801165$35$$35$d1Y1) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801165$35$$35$d1Y1) 0)))
(define-fun b$36$$35$$35$223 () Bool (>= (apply$35$$35$0 (as len Int) ss$35$$35$a1Lz) 0))
(define-fun b$36$$35$$35$255 () Bool (>= (apply$35$$35$0 (as len Int) xs$35$$35$a1og) 0))
(push 1)
(assert (and (exists ((lq_karg$36$VV$35$$35$4747$35$$35$k_$35$$35$4748 Int) (lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4748 Int) (lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4748 Int) (lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4748 Int)) (and (= lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4748 Example.sumBad) (= lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4748 Example.sumOk) (= lq_karg$36$VV$35$$35$4747$35$$35$k_$35$$35$4748 VV$35$$35$F$35$$35$22) (= lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4748 wxs$35$$35$a1qi) (exists ((VV$35$$35$F$35$$35$18 Int)) (and (< 0 VV$35$$35$F$35$$35$18) (= lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4748 Example.sumBad) (= lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4748 Example.sumOk) (= lq_karg$36$VV$35$$35$4747$35$$35$k_$35$$35$4748 VV$35$$35$F$35$$35$18) (= lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4748 wxs$35$$35$a1qi))))) b$36$$35$$35$43 b$36$$35$$35$46 b$36$$35$$35$446))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$22 (+ (apply$35$$35$0 (as len Int) wxs$35$$35$a1qi) Example.sumOk))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$22 Example.sumOk)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$22 Example.sumBad)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$22 Example.sumOk)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$22 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= 0 VV$35$$35$F$35$$35$22))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$22 Example.sumBad)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$22 Example.sumBad)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$22 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$22 Example.sumBad)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$22 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (< 0 VV$35$$35$F$35$$35$22)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$22 Example.sumOk)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
(pop 1)
(push 1)
(assert (not (=> (apply$35$$35$1 (as Example.notEmpty Int) wxs$35$$35$a1qi) (> VV$35$$35$F$35$$35$22 0))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$22 (apply$35$$35$0 (as len Int) wxs$35$$35$a1qi))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$22 Example.sumOk)))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$22 Example.sumBad)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$22 0))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$22 (+ (apply$35$$35$0 (as len Int) wxs$35$$35$a1qi) Example.sumBad))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$22 Example.sumBad)))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$22 Example.sumOk)))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$22 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$22 Example.sumBad))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$22 Example.sumOk))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$22 1)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$22 Example.sumOk)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$22 0)))
(check-sat)
(pop 1)
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (exists ((lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4755 Int) (lq_karg$36$VV$35$$35$4754$35$$35$k_$35$$35$4755 Int) (lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4755 Int) (lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4755 Int)) (and (= lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4755 Example.sumBad) (= lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4755 Example.sumOk) (= lq_karg$36$VV$35$$35$4754$35$$35$k_$35$$35$4755 VV$35$$35$F$35$$35$21) (= lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4755 wxs$35$$35$a1qi) (exists ((VV$35$$35$F$35$$35$17 Int)) (and (= lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4755 Example.sumBad) (= lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4755 Example.sumOk) (= lq_karg$36$VV$35$$35$4754$35$$35$k_$35$$35$4755 VV$35$$35$F$35$$35$17) (= lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4755 wxs$35$$35$a1qi))))) b$36$$35$$35$43 b$36$$35$$35$46 b$36$$35$$35$446))
(push 1)
(assert (not (= (apply$35$$35$0 (as x_Tuple22 Int) VV$35$$35$F$35$$35$21) Example.sumBad)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as x_Tuple21 Int) VV$35$$35$F$35$$35$21) Example.sumOk)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as snd Int) VV$35$$35$F$35$$35$21) Example.sumBad)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as fst Int) VV$35$$35$F$35$$35$21) Example.sumBad)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as x_Tuple22 Int) VV$35$$35$F$35$$35$21) Example.sumOk)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as snd Int) VV$35$$35$F$35$$35$21) Example.sumOk)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as fst Int) VV$35$$35$F$35$$35$21) Example.sumOk)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as x_Tuple21 Int) VV$35$$35$F$35$$35$21) Example.sumBad)))
(check-sat)
(pop 1)
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (exists ((lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4762 Int) (lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4762 Int) (lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4762 Int) (lq_karg$36$VV$35$$35$4761$35$$35$k_$35$$35$4762 Int)) (and (= lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4762 Example.sumBad) (= lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4762 Example.sumOk) (= lq_karg$36$VV$35$$35$4761$35$$35$k_$35$$35$4762 VV$35$$35$F$35$$35$16) (= lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4762 wxs$35$$35$a1qi) (exists ((VV$35$$35$F$35$$35$25 Int) (lq_tmp$36$x$35$$35$4741 Int)) (and (exists ((lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4687 Int) (lq_karg$36$ds_d1UA$35$$35$k_$35$$35$4687 Int) (lq_karg$36$VV$35$$35$4686$35$$35$k_$35$$35$4687 Int) (lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4687 Int) (lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4687 Int)) (and (= lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4687 Example.sumBad) (= lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4687 Example.sumOk) (= lq_karg$36$VV$35$$35$4686$35$$35$k_$35$$35$4687 VV$35$$35$F$35$$35$25) (= lq_karg$36$ds_d1UA$35$$35$k_$35$$35$4687 lq_tmp$36$x$35$$35$4741) (= lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4687 wxs$35$$35$a1qi) (exists ((VV$35$$35$F$35$$35$26 Int) (ds_d1UA Int) (lq_anf$36$$35$$35$7205759403792801172$35$$35$d1Y8 Int) (lq_anf$36$$35$$35$7205759403792801172$35$$35$d1Y8 Int) (w$35$$35$a1qq Int) (ds_d1UJ Int) (lq_anf$36$$35$$35$7205759403792801172$35$$35$d1Y8 Int)) (and (not (= VV$35$$35$F$35$$35$26 0)) (=> (apply$35$$35$1 (as Example.notEmpty Int) wxs$35$$35$a1qi) (> VV$35$$35$F$35$$35$26 0)) (< 0 VV$35$$35$F$35$$35$26) (>= VV$35$$35$F$35$$35$26 0) (not (= 0 VV$35$$35$F$35$$35$26)) (> VV$35$$35$F$35$$35$26 0) (not (= w$35$$35$a1qq 0)) (=> (apply$35$$35$1 (as Example.notEmpty Int) wxs$35$$35$a1qi) (> w$35$$35$a1qq 0)) (< 0 w$35$$35$a1qq) (>= w$35$$35$a1qq 0) (not (= 0 w$35$$35$a1qq)) (> w$35$$35$a1qq 0) (exists ((lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4682 Int) (lq_tmp$36$x$35$$35$4696 Int) (lq_karg$36$lq_tmp$36$x$35$$35$4680$35$$35$k_$35$$35$4682 Int) (lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4682 Int) (lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4682 Int) (lq_karg$36$VV$35$$35$4681$35$$35$k_$35$$35$4682 Int)) (and (= lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4682 Example.sumBad) (= lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4682 Example.sumOk) (= lq_karg$36$VV$35$$35$4681$35$$35$k_$35$$35$4682 ds_d1UJ) (= lq_karg$36$lq_tmp$36$x$35$$35$4680$35$$35$k_$35$$35$4682 w$35$$35$a1qq) (= lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4682 wxs$35$$35$a1qi) (= lq_tmp$36$x$35$$35$4696 ds_d1UJ) (exists ((VV$35$$35$F$35$$35$24 Int) (lq_anf$36$$35$$35$7205759403792801173$35$$35$d1Y9 Int) (lq_tmp$36$x$35$$35$4773 Int)) (and (exists ((lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4753 Int) (lq_karg$36$lq_tmp$36$x$35$$35$4751$35$$35$k_$35$$35$4753 Int) (lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4753 Int) (lq_karg$36$VV$35$$35$4752$35$$35$k_$35$$35$4753 Int) (lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4753 Int)) (and (= lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4753 Example.sumBad) (= lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4753 Example.sumOk) (= lq_karg$36$VV$35$$35$4752$35$$35$k_$35$$35$4753 VV$35$$35$F$35$$35$24) (= lq_karg$36$lq_tmp$36$x$35$$35$4751$35$$35$k_$35$$35$4753 lq_tmp$36$x$35$$35$4773) (= lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4753 wxs$35$$35$a1qi) (exists ((lq_tmp$36$x$35$$35$4758 Int) (VV$35$$35$F$35$$35$20 Int)) (and (= lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4753 Example.sumBad) (= lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4753 Example.sumOk) (= lq_karg$36$VV$35$$35$4752$35$$35$k_$35$$35$4753 VV$35$$35$F$35$$35$20) (= lq_karg$36$lq_tmp$36$x$35$$35$4751$35$$35$k_$35$$35$4753 lq_tmp$36$x$35$$35$4758) (= lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4753 wxs$35$$35$a1qi))))) (= lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4682 Example.sumBad) (= lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4682 Example.sumOk) (= lq_karg$36$VV$35$$35$4681$35$$35$k_$35$$35$4682 VV$35$$35$F$35$$35$24) (= lq_karg$36$lq_tmp$36$x$35$$35$4680$35$$35$k_$35$$35$4682 lq_tmp$36$x$35$$35$4773) (= lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4682 wxs$35$$35$a1qi))))) (exists ((lq_tmp$36$x$35$$35$4696 Int) (lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4679 Int) (lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4679 Int) (lq_karg$36$VV$35$$35$4678$35$$35$k_$35$$35$4679 Int) (lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4679 Int)) (and (= lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4679 Example.sumBad) (= lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4679 Example.sumOk) (= lq_karg$36$VV$35$$35$4678$35$$35$k_$35$$35$4679 ds_d1UJ) (= lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4679 wxs$35$$35$a1qi) (= lq_tmp$36$x$35$$35$4696 ds_d1UJ) (exists ((VV$35$$35$F$35$$35$23 Int) (lq_anf$36$$35$$35$7205759403792801173$35$$35$d1Y9 Int)) (and (exists ((lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4750 Int) (lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4750 Int) (lq_karg$36$VV$35$$35$4749$35$$35$k_$35$$35$4750 Int) (lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4750 Int)) (and (= lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4750 Example.sumBad) (= lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4750 Example.sumOk) (= lq_karg$36$VV$35$$35$4749$35$$35$k_$35$$35$4750 VV$35$$35$F$35$$35$23) (= lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4750 wxs$35$$35$a1qi) (exists ((VV$35$$35$F$35$$35$19 Int)) (and (< 0 VV$35$$35$F$35$$35$19) (= lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4750 Example.sumBad) (= lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4750 Example.sumOk) (= lq_karg$36$VV$35$$35$4749$35$$35$k_$35$$35$4750 VV$35$$35$F$35$$35$19) (= lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4750 wxs$35$$35$a1qi))))) (= lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4679 Example.sumBad) (= lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4679 Example.sumOk) (= lq_karg$36$VV$35$$35$4678$35$$35$k_$35$$35$4679 VV$35$$35$F$35$$35$23) (= lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4679 wxs$35$$35$a1qi))))) (= VV$35$$35$F$35$$35$26 w$35$$35$a1qq) (= lq_anf$36$$35$$35$7205759403792801172$35$$35$d1Y8 ds_d1UA) (= lq_anf$36$$35$$35$7205759403792801172$35$$35$d1Y8 ds_d1UA) (= lq_anf$36$$35$$35$7205759403792801172$35$$35$d1Y8 ds_d1UA) (= lq_anf$36$$35$$35$7205759403792801172$35$$35$d1Y8 (apply$35$$35$0 (apply$35$$35$0 (as GHC.Tuple.$40$$44$$41$ Int) w$35$$35$a1qq) ds_d1UJ)) (= (apply$35$$35$0 (as fst Int) lq_anf$36$$35$$35$7205759403792801172$35$$35$d1Y8) w$35$$35$a1qq) (= (apply$35$$35$0 (as snd Int) lq_anf$36$$35$$35$7205759403792801172$35$$35$d1Y8) ds_d1UJ) (= (apply$35$$35$0 (as x_Tuple21 Int) lq_anf$36$$35$$35$7205759403792801172$35$$35$d1Y8) w$35$$35$a1qq) (= (apply$35$$35$0 (as x_Tuple22 Int) lq_anf$36$$35$$35$7205759403792801172$35$$35$d1Y8) ds_d1UJ) (= lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4687 Example.sumBad) (= lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4687 Example.sumOk) (= lq_karg$36$VV$35$$35$4686$35$$35$k_$35$$35$4687 VV$35$$35$F$35$$35$26) (= lq_karg$36$ds_d1UA$35$$35$k_$35$$35$4687 ds_d1UA) (= lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4687 wxs$35$$35$a1qi))))) (exists ((lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4755 Int) (lq_tmp$36$x$35$$35$4760 Int) (lq_karg$36$VV$35$$35$4754$35$$35$k_$35$$35$4755 Int) (lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4755 Int) (lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4755 Int)) (and (= lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4755 Example.sumBad) (= lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4755 Example.sumOk) (= lq_karg$36$VV$35$$35$4754$35$$35$k_$35$$35$4755 lq_tmp$36$x$35$$35$4741) (= lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4755 wxs$35$$35$a1qi) (= lq_tmp$36$x$35$$35$4760 lq_tmp$36$x$35$$35$4741) (exists ((VV$35$$35$F$35$$35$17 Int)) (and (= lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4755 Example.sumBad) (= lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4755 Example.sumOk) (= lq_karg$36$VV$35$$35$4754$35$$35$k_$35$$35$4755 VV$35$$35$F$35$$35$17) (= lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4755 wxs$35$$35$a1qi))))) (= lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4762 Example.sumBad) (= lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4762 Example.sumOk) (= lq_karg$36$VV$35$$35$4761$35$$35$k_$35$$35$4762 VV$35$$35$F$35$$35$25) (= lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4762 wxs$35$$35$a1qi))))) b$36$$35$$35$456 b$36$$35$$35$43 b$36$$35$$35$46 b$36$$35$$35$446))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$16 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$16 Example.sumOk)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$16 Example.sumBad))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$16 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$16 Example.sumBad)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$16 Example.sumBad)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$16 Example.sumBad)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$16 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$16 (+ (apply$35$$35$0 (as len Int) wxs$35$$35$a1qi) Example.sumBad))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$16 Example.sumOk))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$16 Example.sumBad)))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$16 Example.sumBad)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$16 (apply$35$$35$0 (as len Int) wxs$35$$35$a1qi))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$16 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$16 0))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$16 Example.sumOk)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$16 (+ (apply$35$$35$0 (as len Int) wxs$35$$35$a1qi) Example.sumOk))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$16 Example.sumOk)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$16 Example.sumOk)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= 0 VV$35$$35$F$35$$35$16))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$16 Example.sumBad)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$16 1)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$16 Example.sumOk)))
(check-sat)
(pop 1)
(push 1)
(assert (not (=> (apply$35$$35$1 (as Example.notEmpty Int) wxs$35$$35$a1qi) (> VV$35$$35$F$35$$35$16 0))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$16 Example.sumOk)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$16 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (< 0 VV$35$$35$F$35$$35$16)))
(check-sat)
(pop 1)
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (and (exists ((lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4906 Int) (lq_karg$36$totWeight$35$$35$a1qm$35$$35$k_$35$$35$4906 Int) (lq_karg$36$weights$35$$35$a1qk$35$$35$k_$35$$35$4906 Int) (lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4906 Int) (lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4906 Int) (lq_karg$36$VV$35$$35$4905$35$$35$k_$35$$35$4906 Int)) (and (= lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4906 Example.sumBad) (= lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4906 Example.sumOk) (= lq_karg$36$VV$35$$35$4905$35$$35$k_$35$$35$4906 VV$35$$35$F$35$$35$4) (= lq_karg$36$totWeight$35$$35$a1qm$35$$35$k_$35$$35$4906 totWeight$35$$35$a1qm) (= lq_karg$36$weights$35$$35$a1qk$35$$35$k_$35$$35$4906 weights$35$$35$a1qk) (= lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4906 wxs$35$$35$a1qi) (exists ((lq_tmp$36$x$35$$35$4885 Int) (VV$35$$35$F$35$$35$13 Int)) (and (exists ((lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4899 Int) (lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4899 Int) (lq_karg$36$weights$35$$35$a1qk$35$$35$k_$35$$35$4899 Int) (lq_karg$36$VV$35$$35$4898$35$$35$k_$35$$35$4899 Int) (lq_karg$36$totWeight$35$$35$a1qm$35$$35$k_$35$$35$4899 Int) (lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4899 Int) (lq_tmp$36$x$35$$35$4904 Int)) (and (= lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4899 Example.sumBad) (= lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4899 Example.sumOk) (= lq_karg$36$VV$35$$35$4898$35$$35$k_$35$$35$4899 lq_tmp$36$x$35$$35$4885) (= lq_karg$36$totWeight$35$$35$a1qm$35$$35$k_$35$$35$4899 totWeight$35$$35$a1qm) (= lq_karg$36$weights$35$$35$a1qk$35$$35$k_$35$$35$4899 weights$35$$35$a1qk) (= lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4899 wxs$35$$35$a1qi) (= lq_tmp$36$x$35$$35$4904 lq_tmp$36$x$35$$35$4885) (exists ((VV$35$$35$F$35$$35$5 Int)) (and (= lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4899 Example.sumBad) (= lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4899 Example.sumOk) (= lq_karg$36$VV$35$$35$4898$35$$35$k_$35$$35$4899 VV$35$$35$F$35$$35$5) (= lq_karg$36$totWeight$35$$35$a1qm$35$$35$k_$35$$35$4899 totWeight$35$$35$a1qm) (= lq_karg$36$weights$35$$35$a1qk$35$$35$k_$35$$35$4899 weights$35$$35$a1qk) (= lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4899 wxs$35$$35$a1qi))))) (exists ((lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4816 Int) (lq_karg$36$weights$35$$35$a1qk$35$$35$k_$35$$35$4816 Int) (lq_karg$36$ds_d1Ut$35$$35$k_$35$$35$4816 Int) (lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4816 Int) (lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4816 Int) (lq_karg$36$totWeight$35$$35$a1qm$35$$35$k_$35$$35$4816 Int) (lq_karg$36$VV$35$$35$4815$35$$35$k_$35$$35$4816 Int)) (and (= lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4816 Example.sumBad) (= lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4816 Example.sumOk) (= lq_karg$36$VV$35$$35$4815$35$$35$k_$35$$35$4816 VV$35$$35$F$35$$35$13) (= lq_karg$36$ds_d1Ut$35$$35$k_$35$$35$4816 lq_tmp$36$x$35$$35$4885) (= lq_karg$36$totWeight$35$$35$a1qm$35$$35$k_$35$$35$4816 totWeight$35$$35$a1qm) (= lq_karg$36$weights$35$$35$a1qk$35$$35$k_$35$$35$4816 weights$35$$35$a1qk) (= lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4816 wxs$35$$35$a1qi) (exists ((VV$35$$35$F$35$$35$14 Int) (ds_d1Ut Int) (lq_anf$36$$35$$35$7205759403792801174$35$$35$d1Ya Int) (lq_anf$36$$35$$35$7205759403792801174$35$$35$d1Ya Int) (w$35$$35$a1qo Int) (x$35$$35$a1qp Int) (lq_anf$36$$35$$35$7205759403792801174$35$$35$d1Ya Int)) (and (= (apply$35$$35$0 (as x_Tuple22 Int) ds_d1Ut) Example.sumBad) (= (apply$35$$35$0 (as fst Int) ds_d1Ut) Example.sumOk) (= (apply$35$$35$0 (as snd Int) ds_d1Ut) Example.sumOk) (= 0 1) (= (apply$35$$35$0 (as x_Tuple21 Int) ds_d1Ut) totWeight$35$$35$a1qm) (= (apply$35$$35$0 (as x_Tuple22 Int) ds_d1Ut) Example.sumOk) (= (apply$35$$35$0 (as fst Int) ds_d1Ut) totWeight$35$$35$a1qm) (= (apply$35$$35$0 (as x_Tuple21 Int) ds_d1Ut) Example.sumBad) (= (apply$35$$35$0 (as snd Int) ds_d1Ut) totWeight$35$$35$a1qm) (= (apply$35$$35$0 (as x_Tuple21 Int) ds_d1Ut) Example.sumOk) (= (apply$35$$35$0 (as x_Tuple22 Int) ds_d1Ut) totWeight$35$$35$a1qm) (= (apply$35$$35$0 (as snd Int) ds_d1Ut) Example.sumBad) (= (apply$35$$35$0 (as fst Int) ds_d1Ut) Example.sumBad) (= (apply$35$$35$0 (as x_Tuple22 Int) lq_anf$36$$35$$35$7205759403792801174$35$$35$d1Ya) Example.sumBad) (= (apply$35$$35$0 (as fst Int) lq_anf$36$$35$$35$7205759403792801174$35$$35$d1Ya) Example.sumOk) (= (apply$35$$35$0 (as snd Int) lq_anf$36$$35$$35$7205759403792801174$35$$35$d1Ya) Example.sumOk) (= 0 1) (= (apply$35$$35$0 (as x_Tuple21 Int) lq_anf$36$$35$$35$7205759403792801174$35$$35$d1Ya) totWeight$35$$35$a1qm) (= (apply$35$$35$0 (as x_Tuple22 Int) lq_anf$36$$35$$35$7205759403792801174$35$$35$d1Ya) Example.sumOk) (= (apply$35$$35$0 (as fst Int) lq_anf$36$$35$$35$7205759403792801174$35$$35$d1Ya) totWeight$35$$35$a1qm) (= (apply$35$$35$0 (as x_Tuple21 Int) lq_anf$36$$35$$35$7205759403792801174$35$$35$d1Ya) Example.sumBad) (= (apply$35$$35$0 (as snd Int) lq_anf$36$$35$$35$7205759403792801174$35$$35$d1Ya) totWeight$35$$35$a1qm) (= (apply$35$$35$0 (as x_Tuple21 Int) lq_anf$36$$35$$35$7205759403792801174$35$$35$d1Ya) Example.sumOk) (= (apply$35$$35$0 (as x_Tuple22 Int) lq_anf$36$$35$$35$7205759403792801174$35$$35$d1Ya) totWeight$35$$35$a1qm) (= (apply$35$$35$0 (as snd Int) lq_anf$36$$35$$35$7205759403792801174$35$$35$d1Ya) Example.sumBad) (= (apply$35$$35$0 (as fst Int) lq_anf$36$$35$$35$7205759403792801174$35$$35$d1Ya) Example.sumBad) (= (apply$35$$35$0 (as x_Tuple22 Int) lq_anf$36$$35$$35$7205759403792801174$35$$35$d1Ya) Example.sumBad) (= (apply$35$$35$0 (as fst Int) lq_anf$36$$35$$35$7205759403792801174$35$$35$d1Ya) Example.sumOk) (= (apply$35$$35$0 (as snd Int) lq_anf$36$$35$$35$7205759403792801174$35$$35$d1Ya) Example.sumOk) (= 0 1) (= (apply$35$$35$0 (as x_Tuple21 Int) lq_anf$36$$35$$35$7205759403792801174$35$$35$d1Ya) totWeight$35$$35$a1qm) (= (apply$35$$35$0 (as x_Tuple22 Int) lq_anf$36$$35$$35$7205759403792801174$35$$35$d1Ya) Example.sumOk) (= (apply$35$$35$0 (as fst Int) lq_anf$36$$35$$35$7205759403792801174$35$$35$d1Ya) totWeight$35$$35$a1qm) (= (apply$35$$35$0 (as x_Tuple21 Int) lq_anf$36$$35$$35$7205759403792801174$35$$35$d1Ya) Example.sumBad) (= (apply$35$$35$0 (as snd Int) lq_anf$36$$35$$35$7205759403792801174$35$$35$d1Ya) totWeight$35$$35$a1qm) (= (apply$35$$35$0 (as x_Tuple21 Int) lq_anf$36$$35$$35$7205759403792801174$35$$35$d1Ya) Example.sumOk) (= (apply$35$$35$0 (as x_Tuple22 Int) lq_anf$36$$35$$35$7205759403792801174$35$$35$d1Ya) totWeight$35$$35$a1qm) (= (apply$35$$35$0 (as snd Int) lq_anf$36$$35$$35$7205759403792801174$35$$35$d1Ya) Example.sumBad) (= (apply$35$$35$0 (as fst Int) lq_anf$36$$35$$35$7205759403792801174$35$$35$d1Ya) Example.sumBad) (exists ((lq_karg$36$totWeight$35$$35$a1qm$35$$35$k_$35$$35$4806 Int) (lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4806 Int) (lq_karg$36$weights$35$$35$a1qk$35$$35$k_$35$$35$4806 Int) (lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4806 Int) (lq_tmp$36$x$35$$35$4824 Int) (lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4806 Int) (lq_karg$36$VV$35$$35$4805$35$$35$k_$35$$35$4806 Int)) (and (= lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4806 Example.sumBad) (= lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4806 Example.sumOk) (= lq_karg$36$VV$35$$35$4805$35$$35$k_$35$$35$4806 w$35$$35$a1qo) (= lq_karg$36$totWeight$35$$35$a1qm$35$$35$k_$35$$35$4806 totWeight$35$$35$a1qm) (= lq_karg$36$weights$35$$35$a1qk$35$$35$k_$35$$35$4806 weights$35$$35$a1qk) (= lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4806 wxs$35$$35$a1qi) (= lq_tmp$36$x$35$$35$4824 w$35$$35$a1qo) (exists ((VV$35$$35$F$35$$35$10 Int) (lq_anf$36$$35$$35$7205759403792801175$35$$35$d1Yb Int)) (and (exists ((lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4892 Int) (lq_karg$36$weights$35$$35$a1qk$35$$35$k_$35$$35$4892 Int) (lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4892 Int) (lq_karg$36$VV$35$$35$4891$35$$35$k_$35$$35$4892 Int) (lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4892 Int) (lq_karg$36$totWeight$35$$35$a1qm$35$$35$k_$35$$35$4892 Int)) (and (= lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4892 Example.sumBad) (= lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4892 Example.sumOk) (= lq_karg$36$VV$35$$35$4891$35$$35$k_$35$$35$4892 VV$35$$35$F$35$$35$10) (= lq_karg$36$totWeight$35$$35$a1qm$35$$35$k_$35$$35$4892 totWeight$35$$35$a1qm) (= lq_karg$36$weights$35$$35$a1qk$35$$35$k_$35$$35$4892 weights$35$$35$a1qk) (= lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4892 wxs$35$$35$a1qi) (exists ((VV$35$$35$F$35$$35$6 Int)) (and (< 0 VV$35$$35$F$35$$35$6) (= lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4892 Example.sumBad) (= lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4892 Example.sumOk) (= lq_karg$36$VV$35$$35$4891$35$$35$k_$35$$35$4892 VV$35$$35$F$35$$35$6) (= lq_karg$36$totWeight$35$$35$a1qm$35$$35$k_$35$$35$4892 totWeight$35$$35$a1qm) (= lq_karg$36$weights$35$$35$a1qk$35$$35$k_$35$$35$4892 weights$35$$35$a1qk) (= lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4892 wxs$35$$35$a1qi))))) (= lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4806 Example.sumBad) (= lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4806 Example.sumOk) (= lq_karg$36$VV$35$$35$4805$35$$35$k_$35$$35$4806 VV$35$$35$F$35$$35$10) (= lq_karg$36$totWeight$35$$35$a1qm$35$$35$k_$35$$35$4806 totWeight$35$$35$a1qm) (= lq_karg$36$weights$35$$35$a1qk$35$$35$k_$35$$35$4806 weights$35$$35$a1qk) (= lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4806 wxs$35$$35$a1qi))))) (exists ((lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4811 Int) (lq_karg$36$weights$35$$35$a1qk$35$$35$k_$35$$35$4811 Int) (lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4811 Int) (lq_tmp$36$x$35$$35$4825 Int) (lq_karg$36$VV$35$$35$4810$35$$35$k_$35$$35$4811 Int) (lq_karg$36$totWeight$35$$35$a1qm$35$$35$k_$35$$35$4811 Int) (lq_karg$36$lq_tmp$36$x$35$$35$4809$35$$35$k_$35$$35$4811 Int) (lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4811 Int)) (and (= lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4811 Example.sumBad) (= lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4811 Example.sumOk) (= lq_karg$36$VV$35$$35$4810$35$$35$k_$35$$35$4811 x$35$$35$a1qp) (= lq_karg$36$lq_tmp$36$x$35$$35$4809$35$$35$k_$35$$35$4811 w$35$$35$a1qo) (= lq_karg$36$totWeight$35$$35$a1qm$35$$35$k_$35$$35$4811 totWeight$35$$35$a1qm) (= lq_karg$36$weights$35$$35$a1qk$35$$35$k_$35$$35$4811 weights$35$$35$a1qk) (= lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4811 wxs$35$$35$a1qi) (= lq_tmp$36$x$35$$35$4825 x$35$$35$a1qp) (exists ((lq_anf$36$$35$$35$7205759403792801175$35$$35$d1Yb Int) (lq_tmp$36$x$35$$35$4917 Int) (VV$35$$35$F$35$$35$12 Int)) (and (exists ((lq_karg$36$totWeight$35$$35$a1qm$35$$35$k_$35$$35$4897 Int) (lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4897 Int) (lq_karg$36$lq_tmp$36$x$35$$35$4895$35$$35$k_$35$$35$4897 Int) (lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4897 Int) (lq_karg$36$weights$35$$35$a1qk$35$$35$k_$35$$35$4897 Int) (lq_karg$36$VV$35$$35$4896$35$$35$k_$35$$35$4897 Int) (lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4897 Int)) (and (= lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4897 Example.sumBad) (= lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4897 Example.sumOk) (= lq_karg$36$VV$35$$35$4896$35$$35$k_$35$$35$4897 VV$35$$35$F$35$$35$12) (= lq_karg$36$lq_tmp$36$x$35$$35$4895$35$$35$k_$35$$35$4897 lq_tmp$36$x$35$$35$4917) (= lq_karg$36$totWeight$35$$35$a1qm$35$$35$k_$35$$35$4897 totWeight$35$$35$a1qm) (= lq_karg$36$weights$35$$35$a1qk$35$$35$k_$35$$35$4897 weights$35$$35$a1qk) (= lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4897 wxs$35$$35$a1qi) (exists ((VV$35$$35$F$35$$35$8 Int) (lq_tmp$36$x$35$$35$4902 Int)) (and (= lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4897 Example.sumBad) (= lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4897 Example.sumOk) (= lq_karg$36$VV$35$$35$4896$35$$35$k_$35$$35$4897 VV$35$$35$F$35$$35$8) (= lq_karg$36$lq_tmp$36$x$35$$35$4895$35$$35$k_$35$$35$4897 lq_tmp$36$x$35$$35$4902) (= lq_karg$36$totWeight$35$$35$a1qm$35$$35$k_$35$$35$4897 totWeight$35$$35$a1qm) (= lq_karg$36$weights$35$$35$a1qk$35$$35$k_$35$$35$4897 weights$35$$35$a1qk) (= lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4897 wxs$35$$35$a1qi))))) (= lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4811 Example.sumBad) (= lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4811 Example.sumOk) (= lq_karg$36$VV$35$$35$4810$35$$35$k_$35$$35$4811 VV$35$$35$F$35$$35$12) (= lq_karg$36$lq_tmp$36$x$35$$35$4809$35$$35$k_$35$$35$4811 lq_tmp$36$x$35$$35$4917) (= lq_karg$36$totWeight$35$$35$a1qm$35$$35$k_$35$$35$4811 totWeight$35$$35$a1qm) (= lq_karg$36$weights$35$$35$a1qk$35$$35$k_$35$$35$4811 weights$35$$35$a1qk) (= lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4811 wxs$35$$35$a1qi))))) (exists ((lq_karg$36$VV$35$$35$4807$35$$35$k_$35$$35$4808 Int) (lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4808 Int) (lq_karg$36$weights$35$$35$a1qk$35$$35$k_$35$$35$4808 Int) (lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4808 Int) (lq_tmp$36$x$35$$35$4825 Int) (lq_karg$36$totWeight$35$$35$a1qm$35$$35$k_$35$$35$4808 Int) (lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4808 Int)) (and (= lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4808 Example.sumBad) (= lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4808 Example.sumOk) (= lq_karg$36$VV$35$$35$4807$35$$35$k_$35$$35$4808 x$35$$35$a1qp) (= lq_karg$36$totWeight$35$$35$a1qm$35$$35$k_$35$$35$4808 totWeight$35$$35$a1qm) (= lq_karg$36$weights$35$$35$a1qk$35$$35$k_$35$$35$4808 weights$35$$35$a1qk) (= lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4808 wxs$35$$35$a1qi) (= lq_tmp$36$x$35$$35$4825 x$35$$35$a1qp) (exists ((lq_anf$36$$35$$35$7205759403792801175$35$$35$d1Yb Int) (VV$35$$35$F$35$$35$11 Int)) (and (exists ((lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4894 Int) (lq_karg$36$weights$35$$35$a1qk$35$$35$k_$35$$35$4894 Int) (lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4894 Int) (lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4894 Int) (lq_karg$36$totWeight$35$$35$a1qm$35$$35$k_$35$$35$4894 Int) (lq_karg$36$VV$35$$35$4893$35$$35$k_$35$$35$4894 Int)) (and (= lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4894 Example.sumBad) (= lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4894 Example.sumOk) (= lq_karg$36$VV$35$$35$4893$35$$35$k_$35$$35$4894 VV$35$$35$F$35$$35$11) (= lq_karg$36$totWeight$35$$35$a1qm$35$$35$k_$35$$35$4894 totWeight$35$$35$a1qm) (= lq_karg$36$weights$35$$35$a1qk$35$$35$k_$35$$35$4894 weights$35$$35$a1qk) (= lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4894 wxs$35$$35$a1qi) (exists ((VV$35$$35$F$35$$35$7 Int)) (and (< 0 VV$35$$35$F$35$$35$7) (= lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4894 Example.sumBad) (= lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4894 Example.sumOk) (= lq_karg$36$VV$35$$35$4893$35$$35$k_$35$$35$4894 VV$35$$35$F$35$$35$7) (= lq_karg$36$totWeight$35$$35$a1qm$35$$35$k_$35$$35$4894 totWeight$35$$35$a1qm) (= lq_karg$36$weights$35$$35$a1qk$35$$35$k_$35$$35$4894 weights$35$$35$a1qk) (= lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4894 wxs$35$$35$a1qi))))) (= lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4808 Example.sumBad) (= lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4808 Example.sumOk) (= lq_karg$36$VV$35$$35$4807$35$$35$k_$35$$35$4808 VV$35$$35$F$35$$35$11) (= lq_karg$36$totWeight$35$$35$a1qm$35$$35$k_$35$$35$4808 totWeight$35$$35$a1qm) (= lq_karg$36$weights$35$$35$a1qk$35$$35$k_$35$$35$4808 weights$35$$35$a1qk) (= lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4808 wxs$35$$35$a1qi))))) (= (apply$35$$35$0 (as x_Tuple22 Int) lq_anf$36$$35$$35$7205759403792801174$35$$35$d1Ya) Example.sumBad) (= (apply$35$$35$0 (as fst Int) lq_anf$36$$35$$35$7205759403792801174$35$$35$d1Ya) Example.sumOk) (= (apply$35$$35$0 (as snd Int) lq_anf$36$$35$$35$7205759403792801174$35$$35$d1Ya) Example.sumOk) (= 0 1) (= (apply$35$$35$0 (as x_Tuple21 Int) lq_anf$36$$35$$35$7205759403792801174$35$$35$d1Ya) totWeight$35$$35$a1qm) (= (apply$35$$35$0 (as x_Tuple22 Int) lq_anf$36$$35$$35$7205759403792801174$35$$35$d1Ya) Example.sumOk) (= (apply$35$$35$0 (as fst Int) lq_anf$36$$35$$35$7205759403792801174$35$$35$d1Ya) totWeight$35$$35$a1qm) (= (apply$35$$35$0 (as x_Tuple21 Int) lq_anf$36$$35$$35$7205759403792801174$35$$35$d1Ya) Example.sumBad) (= (apply$35$$35$0 (as snd Int) lq_anf$36$$35$$35$7205759403792801174$35$$35$d1Ya) totWeight$35$$35$a1qm) (= (apply$35$$35$0 (as x_Tuple21 Int) lq_anf$36$$35$$35$7205759403792801174$35$$35$d1Ya) Example.sumOk) (= (apply$35$$35$0 (as x_Tuple22 Int) lq_anf$36$$35$$35$7205759403792801174$35$$35$d1Ya) totWeight$35$$35$a1qm) (= (apply$35$$35$0 (as snd Int) lq_anf$36$$35$$35$7205759403792801174$35$$35$d1Ya) Example.sumBad) (= (apply$35$$35$0 (as fst Int) lq_anf$36$$35$$35$7205759403792801174$35$$35$d1Ya) Example.sumBad) (= VV$35$$35$F$35$$35$14 (Z3_OP_MUL w$35$$35$a1qo x$35$$35$a1qp)) (= lq_anf$36$$35$$35$7205759403792801174$35$$35$d1Ya ds_d1Ut) (= lq_anf$36$$35$$35$7205759403792801174$35$$35$d1Ya ds_d1Ut) (= lq_anf$36$$35$$35$7205759403792801174$35$$35$d1Ya ds_d1Ut) (= lq_anf$36$$35$$35$7205759403792801174$35$$35$d1Ya (apply$35$$35$0 (apply$35$$35$0 (as GHC.Tuple.$40$$44$$41$ Int) w$35$$35$a1qo) x$35$$35$a1qp)) (= (apply$35$$35$0 (as fst Int) lq_anf$36$$35$$35$7205759403792801174$35$$35$d1Ya) w$35$$35$a1qo) (= (apply$35$$35$0 (as snd Int) lq_anf$36$$35$$35$7205759403792801174$35$$35$d1Ya) x$35$$35$a1qp) (= (apply$35$$35$0 (as x_Tuple21 Int) lq_anf$36$$35$$35$7205759403792801174$35$$35$d1Ya) w$35$$35$a1qo) (= (apply$35$$35$0 (as x_Tuple22 Int) lq_anf$36$$35$$35$7205759403792801174$35$$35$d1Ya) x$35$$35$a1qp) (= lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4816 Example.sumBad) (= lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4816 Example.sumOk) (= lq_karg$36$VV$35$$35$4815$35$$35$k_$35$$35$4816 VV$35$$35$F$35$$35$14) (= lq_karg$36$ds_d1Ut$35$$35$k_$35$$35$4816 ds_d1Ut) (= lq_karg$36$totWeight$35$$35$a1qm$35$$35$k_$35$$35$4816 totWeight$35$$35$a1qm) (= lq_karg$36$weights$35$$35$a1qk$35$$35$k_$35$$35$4816 weights$35$$35$a1qk) (= lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4816 wxs$35$$35$a1qi))))) (= lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4906 Example.sumBad) (= lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4906 Example.sumOk) (= lq_karg$36$VV$35$$35$4905$35$$35$k_$35$$35$4906 VV$35$$35$F$35$$35$13) (= lq_karg$36$totWeight$35$$35$a1qm$35$$35$k_$35$$35$4906 totWeight$35$$35$a1qm) (= lq_karg$36$weights$35$$35$a1qk$35$$35$k_$35$$35$4906 weights$35$$35$a1qk) (= lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4906 wxs$35$$35$a1qi))))) (< 0 totWeight$35$$35$a1qm) (=> (apply$35$$35$1 (as Example.notEmpty Int) wxs$35$$35$a1qi) (> totWeight$35$$35$a1qm 0)) (not (= 0 totWeight$35$$35$a1qm)) (not (= totWeight$35$$35$a1qm 0)) (> totWeight$35$$35$a1qm 0) (>= totWeight$35$$35$a1qm 0)) b$36$$35$$35$465 b$36$$35$$35$456 b$36$$35$$35$43 b$36$$35$$35$46 b$36$$35$$35$446))
(push 1)
(assert (not (< 0 VV$35$$35$F$35$$35$4)))
(check-sat)
(pop 1)
(push 1)
(assert (not (=> (apply$35$$35$1 (as Example.notEmpty Int) wxs$35$$35$a1qi) (> VV$35$$35$F$35$$35$4 0))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= 0 VV$35$$35$F$35$$35$4))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$4 0))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$4 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$4 0)))
(check-sat)
(pop 1)
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (and (exists ((lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4899 Int) (lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4899 Int) (lq_karg$36$weights$35$$35$a1qk$35$$35$k_$35$$35$4899 Int) (lq_karg$36$VV$35$$35$4898$35$$35$k_$35$$35$4899 Int) (lq_karg$36$totWeight$35$$35$a1qm$35$$35$k_$35$$35$4899 Int) (lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4899 Int)) (and (= lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4899 Example.sumBad) (= lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4899 Example.sumOk) (= lq_karg$36$VV$35$$35$4898$35$$35$k_$35$$35$4899 VV$35$$35$F$35$$35$9) (= lq_karg$36$totWeight$35$$35$a1qm$35$$35$k_$35$$35$4899 totWeight$35$$35$a1qm) (= lq_karg$36$weights$35$$35$a1qk$35$$35$k_$35$$35$4899 weights$35$$35$a1qk) (= lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4899 wxs$35$$35$a1qi) (exists ((VV$35$$35$F$35$$35$5 Int)) (and (= lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4899 Example.sumBad) (= lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4899 Example.sumOk) (= lq_karg$36$VV$35$$35$4898$35$$35$k_$35$$35$4899 VV$35$$35$F$35$$35$5) (= lq_karg$36$totWeight$35$$35$a1qm$35$$35$k_$35$$35$4899 totWeight$35$$35$a1qm) (= lq_karg$36$weights$35$$35$a1qk$35$$35$k_$35$$35$4899 weights$35$$35$a1qk) (= lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4899 wxs$35$$35$a1qi))))) (>= totWeight$35$$35$a1qm 0) (> totWeight$35$$35$a1qm 0) (not (= totWeight$35$$35$a1qm 0)) (not (= 0 totWeight$35$$35$a1qm)) (=> (apply$35$$35$1 (as Example.notEmpty Int) wxs$35$$35$a1qi) (> totWeight$35$$35$a1qm 0)) (< 0 totWeight$35$$35$a1qm)) b$36$$35$$35$456 b$36$$35$$35$43 b$36$$35$$35$46 b$36$$35$$35$446))
(push 1)
(assert (not (= (apply$35$$35$0 (as x_Tuple22 Int) VV$35$$35$F$35$$35$9) Example.sumBad)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as fst Int) VV$35$$35$F$35$$35$9) Example.sumOk)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as snd Int) VV$35$$35$F$35$$35$9) Example.sumOk)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as x_Tuple21 Int) VV$35$$35$F$35$$35$9) totWeight$35$$35$a1qm)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as x_Tuple22 Int) VV$35$$35$F$35$$35$9) Example.sumOk)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as fst Int) VV$35$$35$F$35$$35$9) totWeight$35$$35$a1qm)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as x_Tuple21 Int) VV$35$$35$F$35$$35$9) Example.sumBad)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as snd Int) VV$35$$35$F$35$$35$9) totWeight$35$$35$a1qm)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as x_Tuple21 Int) VV$35$$35$F$35$$35$9) Example.sumOk)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as x_Tuple22 Int) VV$35$$35$F$35$$35$9) totWeight$35$$35$a1qm)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as snd Int) VV$35$$35$F$35$$35$9) Example.sumBad)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as fst Int) VV$35$$35$F$35$$35$9) Example.sumBad)))
(check-sat)
(pop 1)
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (and (>= lq_tmp$36$x$35$$35$4659 0) (> lq_tmp$36$x$35$$35$4659 0) (not (= lq_tmp$36$x$35$$35$4659 0)) (not (= 0 lq_tmp$36$x$35$$35$4659)) (=> (apply$35$$35$1 (as Example.notEmpty Int) wxs$35$$35$a1qi) (> lq_tmp$36$x$35$$35$4659 0)) (< 0 lq_tmp$36$x$35$$35$4659) (>= lq_tmp$36$x$35$$35$4660 0) (> lq_tmp$36$x$35$$35$4660 0) (not (= lq_tmp$36$x$35$$35$4660 0)) (not (= 0 lq_tmp$36$x$35$$35$4660)) (=> (apply$35$$35$1 (as Example.notEmpty Int) wxs$35$$35$a1qi) (> lq_tmp$36$x$35$$35$4660 0)) (< 0 lq_tmp$36$x$35$$35$4660)) b$36$$35$$35$855 b$36$$35$$35$43 b$36$$35$$35$46 b$36$$35$$35$446))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$27 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$27 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$27 0))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= 0 VV$35$$35$F$35$$35$27))))
(check-sat)
(pop 1)
(push 1)
(assert (not (=> (apply$35$$35$1 (as Example.notEmpty Int) wxs$35$$35$a1qi) (> VV$35$$35$F$35$$35$27 0))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< 0 VV$35$$35$F$35$$35$27)))
(check-sat)
(pop 1)
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (and (exists ((lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4906 Int) (lq_karg$36$totWeight$35$$35$a1qm$35$$35$k_$35$$35$4906 Int) (lq_karg$36$weights$35$$35$a1qk$35$$35$k_$35$$35$4906 Int) (lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4906 Int) (lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4906 Int) (lq_karg$36$VV$35$$35$4905$35$$35$k_$35$$35$4906 Int)) (and (= lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4906 Example.sumBad) (= lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4906 Example.sumOk) (= lq_karg$36$VV$35$$35$4905$35$$35$k_$35$$35$4906 VV$35$$35$F$35$$35$4) (= lq_karg$36$totWeight$35$$35$a1qm$35$$35$k_$35$$35$4906 totWeight$35$$35$a1qm) (= lq_karg$36$weights$35$$35$a1qk$35$$35$k_$35$$35$4906 weights$35$$35$a1qk) (= lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4906 wxs$35$$35$a1qi) (exists ((lq_tmp$36$x$35$$35$4885 Int) (VV$35$$35$F$35$$35$13 Int)) (and (exists ((lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4899 Int) (lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4899 Int) (lq_karg$36$weights$35$$35$a1qk$35$$35$k_$35$$35$4899 Int) (lq_karg$36$VV$35$$35$4898$35$$35$k_$35$$35$4899 Int) (lq_karg$36$totWeight$35$$35$a1qm$35$$35$k_$35$$35$4899 Int) (lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4899 Int) (lq_tmp$36$x$35$$35$4904 Int)) (and (= lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4899 Example.sumBad) (= lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4899 Example.sumOk) (= lq_karg$36$VV$35$$35$4898$35$$35$k_$35$$35$4899 lq_tmp$36$x$35$$35$4885) (= lq_karg$36$totWeight$35$$35$a1qm$35$$35$k_$35$$35$4899 totWeight$35$$35$a1qm) (= lq_karg$36$weights$35$$35$a1qk$35$$35$k_$35$$35$4899 weights$35$$35$a1qk) (= lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4899 wxs$35$$35$a1qi) (= lq_tmp$36$x$35$$35$4904 lq_tmp$36$x$35$$35$4885) (exists ((VV$35$$35$F$35$$35$5 Int)) (and (= lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4899 Example.sumBad) (= lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4899 Example.sumOk) (= lq_karg$36$VV$35$$35$4898$35$$35$k_$35$$35$4899 VV$35$$35$F$35$$35$5) (= lq_karg$36$totWeight$35$$35$a1qm$35$$35$k_$35$$35$4899 totWeight$35$$35$a1qm) (= lq_karg$36$weights$35$$35$a1qk$35$$35$k_$35$$35$4899 weights$35$$35$a1qk) (= lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4899 wxs$35$$35$a1qi))))) (exists ((lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4816 Int) (lq_karg$36$weights$35$$35$a1qk$35$$35$k_$35$$35$4816 Int) (lq_karg$36$ds_d1Ut$35$$35$k_$35$$35$4816 Int) (lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4816 Int) (lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4816 Int) (lq_karg$36$totWeight$35$$35$a1qm$35$$35$k_$35$$35$4816 Int) (lq_karg$36$VV$35$$35$4815$35$$35$k_$35$$35$4816 Int)) (and (= lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4816 Example.sumBad) (= lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4816 Example.sumOk) (= lq_karg$36$VV$35$$35$4815$35$$35$k_$35$$35$4816 VV$35$$35$F$35$$35$13) (= lq_karg$36$ds_d1Ut$35$$35$k_$35$$35$4816 lq_tmp$36$x$35$$35$4885) (= lq_karg$36$totWeight$35$$35$a1qm$35$$35$k_$35$$35$4816 totWeight$35$$35$a1qm) (= lq_karg$36$weights$35$$35$a1qk$35$$35$k_$35$$35$4816 weights$35$$35$a1qk) (= lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4816 wxs$35$$35$a1qi) (exists ((VV$35$$35$F$35$$35$14 Int) (ds_d1Ut Int) (lq_anf$36$$35$$35$7205759403792801174$35$$35$d1Ya Int) (lq_anf$36$$35$$35$7205759403792801174$35$$35$d1Ya Int) (w$35$$35$a1qo Int) (x$35$$35$a1qp Int) (lq_anf$36$$35$$35$7205759403792801174$35$$35$d1Ya Int)) (and (exists ((lq_karg$36$totWeight$35$$35$a1qm$35$$35$k_$35$$35$4806 Int) (lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4806 Int) (lq_karg$36$weights$35$$35$a1qk$35$$35$k_$35$$35$4806 Int) (lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4806 Int) (lq_tmp$36$x$35$$35$4824 Int) (lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4806 Int) (lq_karg$36$VV$35$$35$4805$35$$35$k_$35$$35$4806 Int)) (and (= lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4806 Example.sumBad) (= lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4806 Example.sumOk) (= lq_karg$36$VV$35$$35$4805$35$$35$k_$35$$35$4806 w$35$$35$a1qo) (= lq_karg$36$totWeight$35$$35$a1qm$35$$35$k_$35$$35$4806 totWeight$35$$35$a1qm) (= lq_karg$36$weights$35$$35$a1qk$35$$35$k_$35$$35$4806 weights$35$$35$a1qk) (= lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4806 wxs$35$$35$a1qi) (= lq_tmp$36$x$35$$35$4824 w$35$$35$a1qo) (exists ((VV$35$$35$F$35$$35$10 Int) (lq_anf$36$$35$$35$7205759403792801175$35$$35$d1Yb Int)) (and (exists ((lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4892 Int) (lq_karg$36$weights$35$$35$a1qk$35$$35$k_$35$$35$4892 Int) (lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4892 Int) (lq_karg$36$VV$35$$35$4891$35$$35$k_$35$$35$4892 Int) (lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4892 Int) (lq_karg$36$totWeight$35$$35$a1qm$35$$35$k_$35$$35$4892 Int)) (and (= lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4892 Example.sumBad) (= lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4892 Example.sumOk) (= lq_karg$36$VV$35$$35$4891$35$$35$k_$35$$35$4892 VV$35$$35$F$35$$35$10) (= lq_karg$36$totWeight$35$$35$a1qm$35$$35$k_$35$$35$4892 totWeight$35$$35$a1qm) (= lq_karg$36$weights$35$$35$a1qk$35$$35$k_$35$$35$4892 weights$35$$35$a1qk) (= lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4892 wxs$35$$35$a1qi) (exists ((VV$35$$35$F$35$$35$6 Int)) (and (< 0 VV$35$$35$F$35$$35$6) (= lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4892 Example.sumBad) (= lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4892 Example.sumOk) (= lq_karg$36$VV$35$$35$4891$35$$35$k_$35$$35$4892 VV$35$$35$F$35$$35$6) (= lq_karg$36$totWeight$35$$35$a1qm$35$$35$k_$35$$35$4892 totWeight$35$$35$a1qm) (= lq_karg$36$weights$35$$35$a1qk$35$$35$k_$35$$35$4892 weights$35$$35$a1qk) (= lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4892 wxs$35$$35$a1qi))))) (= lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4806 Example.sumBad) (= lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4806 Example.sumOk) (= lq_karg$36$VV$35$$35$4805$35$$35$k_$35$$35$4806 VV$35$$35$F$35$$35$10) (= lq_karg$36$totWeight$35$$35$a1qm$35$$35$k_$35$$35$4806 totWeight$35$$35$a1qm) (= lq_karg$36$weights$35$$35$a1qk$35$$35$k_$35$$35$4806 weights$35$$35$a1qk) (= lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4806 wxs$35$$35$a1qi))))) (exists ((lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4811 Int) (lq_karg$36$weights$35$$35$a1qk$35$$35$k_$35$$35$4811 Int) (lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4811 Int) (lq_tmp$36$x$35$$35$4825 Int) (lq_karg$36$VV$35$$35$4810$35$$35$k_$35$$35$4811 Int) (lq_karg$36$totWeight$35$$35$a1qm$35$$35$k_$35$$35$4811 Int) (lq_karg$36$lq_tmp$36$x$35$$35$4809$35$$35$k_$35$$35$4811 Int) (lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4811 Int)) (and (= lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4811 Example.sumBad) (= lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4811 Example.sumOk) (= lq_karg$36$VV$35$$35$4810$35$$35$k_$35$$35$4811 x$35$$35$a1qp) (= lq_karg$36$lq_tmp$36$x$35$$35$4809$35$$35$k_$35$$35$4811 w$35$$35$a1qo) (= lq_karg$36$totWeight$35$$35$a1qm$35$$35$k_$35$$35$4811 totWeight$35$$35$a1qm) (= lq_karg$36$weights$35$$35$a1qk$35$$35$k_$35$$35$4811 weights$35$$35$a1qk) (= lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4811 wxs$35$$35$a1qi) (= lq_tmp$36$x$35$$35$4825 x$35$$35$a1qp) (exists ((lq_anf$36$$35$$35$7205759403792801175$35$$35$d1Yb Int) (lq_tmp$36$x$35$$35$4917 Int) (VV$35$$35$F$35$$35$12 Int)) (and (exists ((lq_karg$36$totWeight$35$$35$a1qm$35$$35$k_$35$$35$4897 Int) (lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4897 Int) (lq_karg$36$lq_tmp$36$x$35$$35$4895$35$$35$k_$35$$35$4897 Int) (lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4897 Int) (lq_karg$36$weights$35$$35$a1qk$35$$35$k_$35$$35$4897 Int) (lq_karg$36$VV$35$$35$4896$35$$35$k_$35$$35$4897 Int) (lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4897 Int)) (and (= lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4897 Example.sumBad) (= lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4897 Example.sumOk) (= lq_karg$36$VV$35$$35$4896$35$$35$k_$35$$35$4897 VV$35$$35$F$35$$35$12) (= lq_karg$36$lq_tmp$36$x$35$$35$4895$35$$35$k_$35$$35$4897 lq_tmp$36$x$35$$35$4917) (= lq_karg$36$totWeight$35$$35$a1qm$35$$35$k_$35$$35$4897 totWeight$35$$35$a1qm) (= lq_karg$36$weights$35$$35$a1qk$35$$35$k_$35$$35$4897 weights$35$$35$a1qk) (= lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4897 wxs$35$$35$a1qi) (exists ((VV$35$$35$F$35$$35$8 Int) (lq_tmp$36$x$35$$35$4902 Int)) (and (= lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4897 Example.sumBad) (= lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4897 Example.sumOk) (= lq_karg$36$VV$35$$35$4896$35$$35$k_$35$$35$4897 VV$35$$35$F$35$$35$8) (= lq_karg$36$lq_tmp$36$x$35$$35$4895$35$$35$k_$35$$35$4897 lq_tmp$36$x$35$$35$4902) (= lq_karg$36$totWeight$35$$35$a1qm$35$$35$k_$35$$35$4897 totWeight$35$$35$a1qm) (= lq_karg$36$weights$35$$35$a1qk$35$$35$k_$35$$35$4897 weights$35$$35$a1qk) (= lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4897 wxs$35$$35$a1qi))))) (= lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4811 Example.sumBad) (= lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4811 Example.sumOk) (= lq_karg$36$VV$35$$35$4810$35$$35$k_$35$$35$4811 VV$35$$35$F$35$$35$12) (= lq_karg$36$lq_tmp$36$x$35$$35$4809$35$$35$k_$35$$35$4811 lq_tmp$36$x$35$$35$4917) (= lq_karg$36$totWeight$35$$35$a1qm$35$$35$k_$35$$35$4811 totWeight$35$$35$a1qm) (= lq_karg$36$weights$35$$35$a1qk$35$$35$k_$35$$35$4811 weights$35$$35$a1qk) (= lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4811 wxs$35$$35$a1qi))))) (exists ((lq_karg$36$VV$35$$35$4807$35$$35$k_$35$$35$4808 Int) (lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4808 Int) (lq_karg$36$weights$35$$35$a1qk$35$$35$k_$35$$35$4808 Int) (lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4808 Int) (lq_tmp$36$x$35$$35$4825 Int) (lq_karg$36$totWeight$35$$35$a1qm$35$$35$k_$35$$35$4808 Int) (lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4808 Int)) (and (= lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4808 Example.sumBad) (= lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4808 Example.sumOk) (= lq_karg$36$VV$35$$35$4807$35$$35$k_$35$$35$4808 x$35$$35$a1qp) (= lq_karg$36$totWeight$35$$35$a1qm$35$$35$k_$35$$35$4808 totWeight$35$$35$a1qm) (= lq_karg$36$weights$35$$35$a1qk$35$$35$k_$35$$35$4808 weights$35$$35$a1qk) (= lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4808 wxs$35$$35$a1qi) (= lq_tmp$36$x$35$$35$4825 x$35$$35$a1qp) (exists ((lq_anf$36$$35$$35$7205759403792801175$35$$35$d1Yb Int) (VV$35$$35$F$35$$35$11 Int)) (and (exists ((lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4894 Int) (lq_karg$36$weights$35$$35$a1qk$35$$35$k_$35$$35$4894 Int) (lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4894 Int) (lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4894 Int) (lq_karg$36$totWeight$35$$35$a1qm$35$$35$k_$35$$35$4894 Int) (lq_karg$36$VV$35$$35$4893$35$$35$k_$35$$35$4894 Int)) (and (= lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4894 Example.sumBad) (= lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4894 Example.sumOk) (= lq_karg$36$VV$35$$35$4893$35$$35$k_$35$$35$4894 VV$35$$35$F$35$$35$11) (= lq_karg$36$totWeight$35$$35$a1qm$35$$35$k_$35$$35$4894 totWeight$35$$35$a1qm) (= lq_karg$36$weights$35$$35$a1qk$35$$35$k_$35$$35$4894 weights$35$$35$a1qk) (= lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4894 wxs$35$$35$a1qi) (exists ((VV$35$$35$F$35$$35$7 Int)) (and (< 0 VV$35$$35$F$35$$35$7) (= lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4894 Example.sumBad) (= lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4894 Example.sumOk) (= lq_karg$36$VV$35$$35$4893$35$$35$k_$35$$35$4894 VV$35$$35$F$35$$35$7) (= lq_karg$36$totWeight$35$$35$a1qm$35$$35$k_$35$$35$4894 totWeight$35$$35$a1qm) (= lq_karg$36$weights$35$$35$a1qk$35$$35$k_$35$$35$4894 weights$35$$35$a1qk) (= lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4894 wxs$35$$35$a1qi))))) (= lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4808 Example.sumBad) (= lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4808 Example.sumOk) (= lq_karg$36$VV$35$$35$4807$35$$35$k_$35$$35$4808 VV$35$$35$F$35$$35$11) (= lq_karg$36$totWeight$35$$35$a1qm$35$$35$k_$35$$35$4808 totWeight$35$$35$a1qm) (= lq_karg$36$weights$35$$35$a1qk$35$$35$k_$35$$35$4808 weights$35$$35$a1qk) (= lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4808 wxs$35$$35$a1qi))))) (= VV$35$$35$F$35$$35$14 (Z3_OP_MUL w$35$$35$a1qo x$35$$35$a1qp)) (= lq_anf$36$$35$$35$7205759403792801174$35$$35$d1Ya ds_d1Ut) (= lq_anf$36$$35$$35$7205759403792801174$35$$35$d1Ya ds_d1Ut) (= lq_anf$36$$35$$35$7205759403792801174$35$$35$d1Ya ds_d1Ut) (= lq_anf$36$$35$$35$7205759403792801174$35$$35$d1Ya (apply$35$$35$0 (apply$35$$35$0 (as GHC.Tuple.$40$$44$$41$ Int) w$35$$35$a1qo) x$35$$35$a1qp)) (= (apply$35$$35$0 (as fst Int) lq_anf$36$$35$$35$7205759403792801174$35$$35$d1Ya) w$35$$35$a1qo) (= (apply$35$$35$0 (as snd Int) lq_anf$36$$35$$35$7205759403792801174$35$$35$d1Ya) x$35$$35$a1qp) (= (apply$35$$35$0 (as x_Tuple21 Int) lq_anf$36$$35$$35$7205759403792801174$35$$35$d1Ya) w$35$$35$a1qo) (= (apply$35$$35$0 (as x_Tuple22 Int) lq_anf$36$$35$$35$7205759403792801174$35$$35$d1Ya) x$35$$35$a1qp) (= lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4816 Example.sumBad) (= lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4816 Example.sumOk) (= lq_karg$36$VV$35$$35$4815$35$$35$k_$35$$35$4816 VV$35$$35$F$35$$35$14) (= lq_karg$36$ds_d1Ut$35$$35$k_$35$$35$4816 ds_d1Ut) (= lq_karg$36$totWeight$35$$35$a1qm$35$$35$k_$35$$35$4816 totWeight$35$$35$a1qm) (= lq_karg$36$weights$35$$35$a1qk$35$$35$k_$35$$35$4816 weights$35$$35$a1qk) (= lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4816 wxs$35$$35$a1qi))))) (= lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4906 Example.sumBad) (= lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4906 Example.sumOk) (= lq_karg$36$VV$35$$35$4905$35$$35$k_$35$$35$4906 VV$35$$35$F$35$$35$13) (= lq_karg$36$totWeight$35$$35$a1qm$35$$35$k_$35$$35$4906 totWeight$35$$35$a1qm) (= lq_karg$36$weights$35$$35$a1qk$35$$35$k_$35$$35$4906 weights$35$$35$a1qk) (= lq_karg$36$wxs$35$$35$a1qi$35$$35$k_$35$$35$4906 wxs$35$$35$a1qi))))) (< 0 totWeight$35$$35$a1qm) (=> (apply$35$$35$1 (as Example.notEmpty Int) wxs$35$$35$a1qi) (> totWeight$35$$35$a1qm 0)) (not (= 0 totWeight$35$$35$a1qm)) (not (= totWeight$35$$35$a1qm 0)) (> totWeight$35$$35$a1qm 0) (>= totWeight$35$$35$a1qm 0)) b$36$$35$$35$465 b$36$$35$$35$456 b$36$$35$$35$43 b$36$$35$$35$46 b$36$$35$$35$446))
(push 1)
(assert (not (< 0 VV$35$$35$F$35$$35$4)))
(check-sat)
(pop 1)
(push 1)
(assert (not (=> (apply$35$$35$1 (as Example.notEmpty Int) wxs$35$$35$a1qi) (> VV$35$$35$F$35$$35$4 0))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= 0 VV$35$$35$F$35$$35$4))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$4 0))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$4 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$4 0)))
(check-sat)
(pop 1)
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$336 b$36$$35$$35$321 b$36$$35$$35$322 b$36$$35$$35$326 b$36$$35$$35$328 b$36$$35$$35$329 b$36$$35$$35$43 b$36$$35$$35$843 b$36$$35$$35$46 b$36$$35$$35$334 b$36$$35$$35$335))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$121 xs$35$$35$a1ow)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$121))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$121) 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$1 (as Example.notEmpty Int) xs$35$$35$a1ow) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$121))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$121) (+ 1 (apply$35$$35$0 (as len Int) xs$35$$35$a1ow)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$121) x$35$$35$a1ov)))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$121 lq_anf$36$$35$$35$7205759403792801133$35$$35$d1Xv)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$121) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801133$35$$35$d1Xv))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$121 ds_d1RH)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$121) 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$121) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801133$35$$35$d1Xv))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$121) xs$35$$35$a1ow)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$121 xs$35$$35$a1ow))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$121) (apply$35$$35$0 (as len Int) ds_d1RH))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$121 ds_d1RH)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$121 ds_d1RH)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$121 lq_anf$36$$35$$35$7205759403792801133$35$$35$d1Xv)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$121) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801133$35$$35$d1Xv))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$121) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801133$35$$35$d1Xv))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$121 ds_d1RH)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$121) (apply$35$$35$0 (as len Int) ds_d1RH))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$121) (apply$35$$35$0 (as len Int) ds_d1RH))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$121) 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$121) (apply$35$$35$0 (as len Int) ds_d1RH))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$121) (apply$35$$35$0 (as len Int) xs$35$$35$a1ow))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$121 ds_d1RH)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$121) (apply$35$$35$0 (as len Int) xs$35$$35$a1ow))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$121 xs$35$$35$a1ow)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$121) lq_anf$36$$35$$35$7205759403792801133$35$$35$d1Xv)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$121 lq_anf$36$$35$$35$7205759403792801133$35$$35$d1Xv))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$121) (apply$35$$35$0 (as len Int) xs$35$$35$a1ow))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$121 (apply$35$$35$0 (as fst Int) ds_d1RU))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$121 (apply$35$$35$0 (as snd Int) ds_d1RU))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$121 xs$35$$35$a1ow)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$121) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801133$35$$35$d1Xv)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$121) (apply$35$$35$0 (as len Int) xs$35$$35$a1ow))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$121) (apply$35$$35$0 (as len Int) ds_d1RH))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$121) (+ 1 (apply$35$$35$0 (as len Int) ds_d1RH)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$121 lq_anf$36$$35$$35$7205759403792801133$35$$35$d1Xv)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$1 (as Example.notEmpty Int) ds_d1RH) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$121))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801133$35$$35$d1Xv) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$121))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$121 xs$35$$35$a1ow)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$121) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801133$35$$35$d1Xv))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$121 lq_anf$36$$35$$35$7205759403792801133$35$$35$d1Xv)))
(check-sat)
(pop 1)
(push 1)
(assert (not (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$121)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$121) ds_d1RH)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$121 xs$35$$35$a1ow)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$121 lq_anf$36$$35$$35$7205759403792801133$35$$35$d1Xv)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$121) (apply$35$$35$0 (as len Int) xs$35$$35$a1ow))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$121 ds_d1RH))))
(check-sat)
(pop 1)
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (and (not (= ys$35$$35$a1va ds_d1RH)) (<= (apply$35$$35$0 (as len Int) ys$35$$35$a1va) (apply$35$$35$0 (as len Int) xs$35$$35$a1ow)) (<= (apply$35$$35$0 (as len Int) ys$35$$35$a1va) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801133$35$$35$d1Xv)) (< (apply$35$$35$0 (as len Int) ys$35$$35$a1va) (apply$35$$35$0 (as len Int) ds_d1RH)) (= ys$35$$35$a1va (apply$35$$35$0 (as fst Int) ds_d1RU)) (not (= ys$35$$35$a1va lq_anf$36$$35$$35$7205759403792801133$35$$35$d1Xv)) (< (apply$35$$35$0 (as len Int) ys$35$$35$a1va) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801133$35$$35$d1Xv)) (<= (apply$35$$35$0 (as len Int) ys$35$$35$a1va) (apply$35$$35$0 (as len Int) ds_d1RH)) (>= (apply$35$$35$0 (as len Int) ys$35$$35$a1va) 0)) b$36$$35$$35$321 (>= (apply$35$$35$0 (as len Int) ys$35$$35$a1va) 0) b$36$$35$$35$322 b$36$$35$$35$339 b$36$$35$$35$340 b$36$$35$$35$341 b$36$$35$$35$326 b$36$$35$$35$328 b$36$$35$$35$329 b$36$$35$$35$43 b$36$$35$$35$46 b$36$$35$$35$830))
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$118 ys$35$$35$a1va)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$118) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801133$35$$35$d1Xv))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$118 lq_anf$36$$35$$35$7205759403792801133$35$$35$d1Xv)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$118) x$35$$35$a1ov)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$118))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$118) (+ 1 (apply$35$$35$0 (as len Int) xs$35$$35$a1ow)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$118) (apply$35$$35$0 (as len Int) ys$35$$35$a1va))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$118 xs$35$$35$a1ow)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$118) 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$118) (apply$35$$35$0 (as len Int) ys$35$$35$a1va))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$118 ys$35$$35$a1va)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$118) (apply$35$$35$0 (as len Int) ys$35$$35$a1va))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$118) 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$118 lq_anf$36$$35$$35$7205759403792801133$35$$35$d1Xv)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$118 xs$35$$35$a1ow)))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$118 ys$35$$35$a1va)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$118) (apply$35$$35$0 (as len Int) ys$35$$35$a1va))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$118) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801133$35$$35$d1Xv))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$118 ds_d1RH)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$118) (apply$35$$35$0 (as len Int) ds_d1RH))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$118) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801133$35$$35$d1Xv))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801133$35$$35$d1Xv) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$118))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$118 ds_d1RH)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$118) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801133$35$$35$d1Xv))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$118 lq_anf$36$$35$$35$7205759403792801133$35$$35$d1Xv)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$118 (apply$35$$35$0 (as fst Int) ds_d1RU))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$1 (as Example.notEmpty Int) ds_d1RH) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$118))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$118 (apply$35$$35$0 (as snd Int) ds_d1RU))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$118) (apply$35$$35$0 (as len Int) ys$35$$35$a1va))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$118 ds_d1RH)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$118) 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$118 xs$35$$35$a1ow)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$118) (apply$35$$35$0 (as len Int) xs$35$$35$a1ow))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$118) (apply$35$$35$0 (as len Int) xs$35$$35$a1ow))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$118) (apply$35$$35$0 (as len Int) ds_d1RH))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$118 ds_d1RH)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$118 xs$35$$35$a1ow)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$1 (as Example.notEmpty Int) xs$35$$35$a1ow) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$118))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$118 ds_d1RH))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$118) (+ 1 (apply$35$$35$0 (as len Int) ys$35$$35$a1va)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$118) ds_d1RH)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$118 lq_anf$36$$35$$35$7205759403792801133$35$$35$d1Xv)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$118) (apply$35$$35$0 (as len Int) xs$35$$35$a1ow))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$118) (apply$35$$35$0 (as len Int) ds_d1RH))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$118 lq_anf$36$$35$$35$7205759403792801133$35$$35$d1Xv)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$1 (as Example.notEmpty Int) ys$35$$35$a1va) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$118))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$118) ys$35$$35$a1va)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$118) (+ 1 (apply$35$$35$0 (as len Int) ds_d1RH)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$118 ys$35$$35$a1va))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$118) (apply$35$$35$0 (as len Int) xs$35$$35$a1ow))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$118) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801133$35$$35$d1Xv)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$118) (apply$35$$35$0 (as len Int) ds_d1RH))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$118 xs$35$$35$a1ow)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$118 ys$35$$35$a1va)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$118) (apply$35$$35$0 (as len Int) ds_d1RH))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$118 xs$35$$35$a1ow))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$118) xs$35$$35$a1ow)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$118) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801133$35$$35$d1Xv))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$118 ds_d1RH)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$118 lq_anf$36$$35$$35$7205759403792801133$35$$35$d1Xv))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$118 ys$35$$35$a1va)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$118) lq_anf$36$$35$$35$7205759403792801133$35$$35$d1Xv)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$118) (apply$35$$35$0 (as len Int) xs$35$$35$a1ow))))
(check-sat)
(pop 1)
(push 1)
(assert (not (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$118)))
(check-sat)
(pop 1)
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (exists ((lq_tmp$36$x$35$$35$1846 Int) (lq_karg$36$etc$35$$35$a1qx$35$$35$k_$35$$35$1836 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2$35$$35$k_$35$$35$1836 Int) (lq_karg$36$ds_d1Vg$35$$35$k_$35$$35$1836 Int) (lq_karg$36$x$35$$35$a1qu$35$$35$k_$35$$35$1836 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV$35$$35$k_$35$$35$1836 Int) (lq_karg$36$y$35$$35$a1qw$35$$35$k_$35$$35$1836 Int) (lq_karg$36$ds_d1VY$35$$35$k_$35$$35$1836 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW$35$$35$k_$35$$35$1836 Int) (lq_karg$36$VV$35$$35$1835$35$$35$k_$35$$35$1836 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1$35$$35$k_$35$$35$1836 Int)) (and (= lq_karg$36$VV$35$$35$1835$35$$35$k_$35$$35$1836 lq_tmp$36$x$35$$35$1814) (= lq_karg$36$ds_d1VY$35$$35$k_$35$$35$1836 ds_d1VY) (= lq_karg$36$ds_d1Vg$35$$35$k_$35$$35$1836 ds_d1Vg) (= lq_karg$36$etc$35$$35$a1qx$35$$35$k_$35$$35$1836 etc$35$$35$a1qx) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV$35$$35$k_$35$$35$1836 lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW$35$$35$k_$35$$35$1836 lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1$35$$35$k_$35$$35$1836 lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2$35$$35$k_$35$$35$1836 lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2) (= lq_karg$36$x$35$$35$a1qu$35$$35$k_$35$$35$1836 x$35$$35$a1qu) (= lq_karg$36$y$35$$35$a1qw$35$$35$k_$35$$35$1836 y$35$$35$a1qw) (= lq_tmp$36$x$35$$35$1846 lq_tmp$36$x$35$$35$1814) (exists ((VV$35$$35$F$35$$35$211 Int)) (and (=> (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$211)) (= VV$35$$35$F$35$$35$211 lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$211) 0) (= lq_karg$36$VV$35$$35$1835$35$$35$k_$35$$35$1836 VV$35$$35$F$35$$35$211) (= lq_karg$36$ds_d1VY$35$$35$k_$35$$35$1836 ds_d1VY) (= lq_karg$36$ds_d1Vg$35$$35$k_$35$$35$1836 ds_d1Vg) (= lq_karg$36$etc$35$$35$a1qx$35$$35$k_$35$$35$1836 etc$35$$35$a1qx) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV$35$$35$k_$35$$35$1836 lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW$35$$35$k_$35$$35$1836 lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1$35$$35$k_$35$$35$1836 lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2$35$$35$k_$35$$35$1836 lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2) (= lq_karg$36$x$35$$35$a1qu$35$$35$k_$35$$35$1836 x$35$$35$a1qu) (= lq_karg$36$y$35$$35$a1qw$35$$35$k_$35$$35$1836 y$35$$35$a1qw))))) b$36$$35$$35$193 b$36$$35$$35$194 b$36$$35$$35$212 b$36$$35$$35$198 b$36$$35$$35$214 b$36$$35$$35$215 b$36$$35$$35$200 (>= (apply$35$$35$0 (as len Int) lq_tmp$36$x$35$$35$1814) 0) b$36$$35$$35$201 b$36$$35$$35$202 b$36$$35$$35$218 b$36$$35$$35$43 b$36$$35$$35$219 b$36$$35$$35$46))
(push 1)
(assert (not (= (apply$35$$35$0 (as fst Int) VV$35$$35$F$35$$35$222) ds_d1VY)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as fst Int) VV$35$$35$F$35$$35$222) lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as snd Int) VV$35$$35$F$35$$35$222) lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as x_Tuple22 Int) VV$35$$35$F$35$$35$222) lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as x_Tuple21 Int) VV$35$$35$F$35$$35$222) lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as fst Int) VV$35$$35$F$35$$35$222) lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as x_Tuple21 Int) VV$35$$35$F$35$$35$222) ds_d1VY)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as x_Tuple21 Int) VV$35$$35$F$35$$35$222) lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as fst Int) VV$35$$35$F$35$$35$222) lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as x_Tuple21 Int) VV$35$$35$F$35$$35$222) ds_d1Vg)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as x_Tuple21 Int) VV$35$$35$F$35$$35$222) lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as fst Int) VV$35$$35$F$35$$35$222) ds_d1Vg)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as fst Int) VV$35$$35$F$35$$35$222) etc$35$$35$a1qx)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as x_Tuple21 Int) VV$35$$35$F$35$$35$222) etc$35$$35$a1qx)))
(check-sat)
(pop 1)
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (and (exists ((lq_karg$36$x$35$$35$a1qu$35$$35$k_$35$$35$1735 Int) (lq_karg$36$ds_d1Vg$35$$35$k_$35$$35$1735 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV$35$$35$k_$35$$35$1735 Int) (lq_karg$36$VV$35$$35$1734$35$$35$k_$35$$35$1735 Int) (lq_karg$36$ds_d1VY$35$$35$k_$35$$35$1735 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW$35$$35$k_$35$$35$1735 Int) (lq_karg$36$y$35$$35$a1qw$35$$35$k_$35$$35$1735 Int) (lq_karg$36$etc$35$$35$a1qx$35$$35$k_$35$$35$1735 Int)) (and (= lq_karg$36$VV$35$$35$1734$35$$35$k_$35$$35$1735 VV$35$$35$F$35$$35$223) (= lq_karg$36$ds_d1VY$35$$35$k_$35$$35$1735 ds_d1VY) (= lq_karg$36$ds_d1Vg$35$$35$k_$35$$35$1735 ds_d1Vg) (= lq_karg$36$etc$35$$35$a1qx$35$$35$k_$35$$35$1735 etc$35$$35$a1qx) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV$35$$35$k_$35$$35$1735 lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW$35$$35$k_$35$$35$1735 lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW) (= lq_karg$36$x$35$$35$a1qu$35$$35$k_$35$$35$1735 x$35$$35$a1qu) (= lq_karg$36$y$35$$35$a1qw$35$$35$k_$35$$35$1735 y$35$$35$a1qw) (exists ((VV$35$$35$F$35$$35$219 Int)) (and (exists ((lq_karg$36$y$35$$35$a1qw$35$$35$k_$35$$35$1826 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW$35$$35$k_$35$$35$1826 Int) (lq_karg$36$ds_d1VY$35$$35$k_$35$$35$1826 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1$35$$35$k_$35$$35$1826 Int) (lq_karg$36$ds_d1Vg$35$$35$k_$35$$35$1826 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV$35$$35$k_$35$$35$1826 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2$35$$35$k_$35$$35$1826 Int) (lq_karg$36$x$35$$35$a1qu$35$$35$k_$35$$35$1826 Int) (lq_karg$36$etc$35$$35$a1qx$35$$35$k_$35$$35$1826 Int) (lq_karg$36$VV$35$$35$1825$35$$35$k_$35$$35$1826 Int)) (and (= lq_karg$36$VV$35$$35$1825$35$$35$k_$35$$35$1826 VV$35$$35$F$35$$35$219) (= lq_karg$36$ds_d1VY$35$$35$k_$35$$35$1826 ds_d1VY) (= lq_karg$36$ds_d1Vg$35$$35$k_$35$$35$1826 ds_d1Vg) (= lq_karg$36$etc$35$$35$a1qx$35$$35$k_$35$$35$1826 etc$35$$35$a1qx) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV$35$$35$k_$35$$35$1826 lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW$35$$35$k_$35$$35$1826 lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1$35$$35$k_$35$$35$1826 lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2$35$$35$k_$35$$35$1826 lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2) (= lq_karg$36$x$35$$35$a1qu$35$$35$k_$35$$35$1826 x$35$$35$a1qu) (= lq_karg$36$y$35$$35$a1qw$35$$35$k_$35$$35$1826 y$35$$35$a1qw) (exists ((VV$35$$35$F$35$$35$212 Int)) (and (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$212) 0) (= lq_karg$36$VV$35$$35$1825$35$$35$k_$35$$35$1826 VV$35$$35$F$35$$35$212) (= lq_karg$36$ds_d1VY$35$$35$k_$35$$35$1826 ds_d1VY) (= lq_karg$36$ds_d1Vg$35$$35$k_$35$$35$1826 ds_d1Vg) (= lq_karg$36$etc$35$$35$a1qx$35$$35$k_$35$$35$1826 etc$35$$35$a1qx) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV$35$$35$k_$35$$35$1826 lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW$35$$35$k_$35$$35$1826 lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1$35$$35$k_$35$$35$1826 lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2$35$$35$k_$35$$35$1826 lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2) (= lq_karg$36$x$35$$35$a1qu$35$$35$k_$35$$35$1826 x$35$$35$a1qu) (= lq_karg$36$y$35$$35$a1qw$35$$35$k_$35$$35$1826 y$35$$35$a1qw))))) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$219) 0) (= lq_karg$36$VV$35$$35$1734$35$$35$k_$35$$35$1735 VV$35$$35$F$35$$35$219) (= lq_karg$36$ds_d1VY$35$$35$k_$35$$35$1735 ds_d1VY) (= lq_karg$36$ds_d1Vg$35$$35$k_$35$$35$1735 ds_d1Vg) (= lq_karg$36$etc$35$$35$a1qx$35$$35$k_$35$$35$1735 etc$35$$35$a1qx) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV$35$$35$k_$35$$35$1735 lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW$35$$35$k_$35$$35$1735 lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW) (= lq_karg$36$x$35$$35$a1qu$35$$35$k_$35$$35$1735 x$35$$35$a1qu) (= lq_karg$36$y$35$$35$a1qw$35$$35$k_$35$$35$1735 y$35$$35$a1qw))))) (exists ((lq_tmp$36$x$35$$35$1846 Int) (lq_karg$36$etc$35$$35$a1qx$35$$35$k_$35$$35$1836 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2$35$$35$k_$35$$35$1836 Int) (lq_karg$36$ds_d1Vg$35$$35$k_$35$$35$1836 Int) (lq_karg$36$x$35$$35$a1qu$35$$35$k_$35$$35$1836 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV$35$$35$k_$35$$35$1836 Int) (lq_karg$36$y$35$$35$a1qw$35$$35$k_$35$$35$1836 Int) (lq_karg$36$ds_d1VY$35$$35$k_$35$$35$1836 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW$35$$35$k_$35$$35$1836 Int) (lq_karg$36$VV$35$$35$1835$35$$35$k_$35$$35$1836 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1$35$$35$k_$35$$35$1836 Int)) (and (= lq_karg$36$VV$35$$35$1835$35$$35$k_$35$$35$1836 lq_tmp$36$x$35$$35$1814) (= lq_karg$36$ds_d1VY$35$$35$k_$35$$35$1836 ds_d1VY) (= lq_karg$36$ds_d1Vg$35$$35$k_$35$$35$1836 ds_d1Vg) (= lq_karg$36$etc$35$$35$a1qx$35$$35$k_$35$$35$1836 etc$35$$35$a1qx) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV$35$$35$k_$35$$35$1836 lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW$35$$35$k_$35$$35$1836 lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1$35$$35$k_$35$$35$1836 lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2$35$$35$k_$35$$35$1836 lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2) (= lq_karg$36$x$35$$35$a1qu$35$$35$k_$35$$35$1836 x$35$$35$a1qu) (= lq_karg$36$y$35$$35$a1qw$35$$35$k_$35$$35$1836 y$35$$35$a1qw) (= lq_tmp$36$x$35$$35$1846 lq_tmp$36$x$35$$35$1814) (exists ((VV$35$$35$F$35$$35$211 Int)) (and (=> (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$211)) (= VV$35$$35$F$35$$35$211 lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$211) 0) (= lq_karg$36$VV$35$$35$1835$35$$35$k_$35$$35$1836 VV$35$$35$F$35$$35$211) (= lq_karg$36$ds_d1VY$35$$35$k_$35$$35$1836 ds_d1VY) (= lq_karg$36$ds_d1Vg$35$$35$k_$35$$35$1836 ds_d1Vg) (= lq_karg$36$etc$35$$35$a1qx$35$$35$k_$35$$35$1836 etc$35$$35$a1qx) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV$35$$35$k_$35$$35$1836 lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW$35$$35$k_$35$$35$1836 lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1$35$$35$k_$35$$35$1836 lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2$35$$35$k_$35$$35$1836 lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2) (= lq_karg$36$x$35$$35$a1qu$35$$35$k_$35$$35$1836 x$35$$35$a1qu) (= lq_karg$36$y$35$$35$a1qw$35$$35$k_$35$$35$1836 y$35$$35$a1qw)))))) b$36$$35$$35$193 b$36$$35$$35$194 b$36$$35$$35$212 b$36$$35$$35$198 b$36$$35$$35$214 b$36$$35$$35$215 b$36$$35$$35$200 (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$223) 0) (>= (apply$35$$35$0 (as len Int) lq_tmp$36$x$35$$35$1814) 0) b$36$$35$$35$201 b$36$$35$$35$202 b$36$$35$$35$218 b$36$$35$$35$43 b$36$$35$$35$219 b$36$$35$$35$46))
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$223) (apply$35$$35$0 (as len Int) ds_d1VY))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$223 ds_d1VY)))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$223 lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$223) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$223 ds_d1Vg)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$223) 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$223 lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$223) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$223) (apply$35$$35$0 (as len Int) ds_d1VY))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$223) (apply$35$$35$0 (as len Int) etc$35$$35$a1qx))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$223) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$223) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$223 ds_d1Vg)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$223 lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$223 lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$223))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$223) 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$223) ds_d1VY)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$223 lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$223 ds_d1VY))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$223) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$223) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$1 (as Example.notEmpty Int) etc$35$$35$a1qx) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$223))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$223) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$223 etc$35$$35$a1qx)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$223) (apply$35$$35$0 (as len Int) ds_d1Vg))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$223 lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$223 ds_d1VY)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$223 etc$35$$35$a1qx)))
(check-sat)
(pop 1)
(push 1)
(assert (not (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$223)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$223) lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$223) x$35$$35$a1qu)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$223 lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$223) 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$223 lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$223) (apply$35$$35$0 (as len Int) ds_d1VY))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$223))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$223 lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$223 ds_d1Vg)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$223) (apply$35$$35$0 (as len Int) etc$35$$35$a1qx))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$223) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$223))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$223) (+ 1 (apply$35$$35$0 (as len Int) ds_d1Vg)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$223) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$223) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$223))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$223 lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$223) (apply$35$$35$0 (as len Int) ds_d1VY))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$1 (as Example.notEmpty Int) ds_d1Vg) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$223))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$223) (apply$35$$35$0 (as len Int) etc$35$$35$a1qx))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$223 ds_d1Vg)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$223) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$223) etc$35$$35$a1qx)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$223 etc$35$$35$a1qx))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$223) lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$223) (apply$35$$35$0 (as len Int) ds_d1Vg))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$223) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$223 lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$223 lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$223 ds_d1VY)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$1 (as Example.notEmpty Int) ds_d1VY) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$223))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$223))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$223) (+ 1 (apply$35$$35$0 (as len Int) ds_d1VY)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$223) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$223) (apply$35$$35$0 (as len Int) ds_d1Vg))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$223 ds_d1Vg)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$223 ds_d1VY)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$223) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$223) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$223 lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$223 lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$223) (apply$35$$35$0 (as len Int) etc$35$$35$a1qx))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$223) lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW)))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$223 etc$35$$35$a1qx)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$223) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$223 lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$223) y$35$$35$a1qw)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$223 lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$223) (apply$35$$35$0 (as len Int) etc$35$$35$a1qx))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$223) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$223) (apply$35$$35$0 (as len Int) ds_d1VY))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$223) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$223) ds_d1Vg)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$223 ds_d1Vg))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$223) (apply$35$$35$0 (as len Int) ds_d1Vg))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$223) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$223) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$223 lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$223 etc$35$$35$a1qx)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$223) (+ 1 (apply$35$$35$0 (as len Int) etc$35$$35$a1qx)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$223) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$223) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$223) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$223 etc$35$$35$a1qx)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$223 lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$223 ds_d1VY)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$223) (apply$35$$35$0 (as len Int) ds_d1Vg))))
(check-sat)
(pop 1)
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (and (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$208) 0) (>= (apply$35$$35$0 (as len Int) s$35$$35$a1Lx) 0)) (and (= ds_d1W1 (apply$35$$35$0 (apply$35$$35$0 (as GHC.Tuple.$40$$44$$41$ Int) s$35$$35$a1Lx) ss$35$$35$a1Lz)) (= (apply$35$$35$0 (as fst Int) ds_d1W1) s$35$$35$a1Lx) (= (apply$35$$35$0 (as snd Int) ds_d1W1) ss$35$$35$a1Lz) (= (apply$35$$35$0 (as x_Tuple21 Int) ds_d1W1) s$35$$35$a1Lx) (= (apply$35$$35$0 (as x_Tuple22 Int) ds_d1W1) ss$35$$35$a1Lz)) b$36$$35$$35$193 b$36$$35$$35$194 b$36$$35$$35$212 b$36$$35$$35$198 b$36$$35$$35$214 b$36$$35$$35$215 b$36$$35$$35$200 (and (= VV$35$$35$F$35$$35$208 s$35$$35$a1Lx) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$208) 0)) b$36$$35$$35$201 b$36$$35$$35$202 b$36$$35$$35$218 b$36$$35$$35$43 b$36$$35$$35$219 b$36$$35$$35$46 (>= (apply$35$$35$0 (as len Int) s$35$$35$a1Lx) 0) b$36$$35$$35$223))
(push 1)
(assert (not (< VV$35$$35$F$35$$35$208 ds_d1Vg)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$208 ds_d1VY)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$208) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$208) 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$208 lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$208 lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$208) (apply$35$$35$0 (as len Int) ds_d1Vg))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$208) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$208) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$208 (apply$35$$35$0 (as fst Int) ds_d1W1))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$208) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$208 lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$208 ds_d1VY)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$208 etc$35$$35$a1qx)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$208) (apply$35$$35$0 (as len Int) ds_d1Vg))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$208) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$1 (as Example.notEmpty Int) etc$35$$35$a1qx) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$208))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$208) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$208) etc$35$$35$a1qx)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$208 etc$35$$35$a1qx))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$208) ds_d1Vg)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$208) 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$208) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$208 ds_d1Vg))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$208) (apply$35$$35$0 (as len Int) ds_d1VY))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$208 ds_d1Vg)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$208) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$208) (apply$35$$35$0 (as len Int) etc$35$$35$a1qx))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$208 lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV)))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$208 etc$35$$35$a1qx)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$208) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$208) lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$208 lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$208) (apply$35$$35$0 (as len Int) etc$35$$35$a1qx))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$208) 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$208)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$208 etc$35$$35$a1qx)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$208 ds_d1VY)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$208) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$208))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$208 lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$208) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$208) (apply$35$$35$0 (as len Int) ds_d1Vg))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$208 ds_d1VY)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$208) (+ 1 (apply$35$$35$0 (as len Int) ds_d1VY)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$208))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$208 lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$208) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$208) (apply$35$$35$0 (as len Int) ds_d1Vg))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$208 lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$208) lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$1 (as Example.notEmpty Int) ds_d1VY) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$208))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$208 lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$208))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$208 lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$208) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$1 (as Example.notEmpty Int) ds_d1Vg) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$208))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$208) (apply$35$$35$0 (as len Int) ds_d1VY))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$208))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$208 ds_d1Vg)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$208) (+ 1 (apply$35$$35$0 (as len Int) ds_d1Vg)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$208) (apply$35$$35$0 (as len Int) etc$35$$35$a1qx))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$208) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$208 ds_d1VY)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$208 lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$208 ds_d1Vg)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$208) (apply$35$$35$0 (as len Int) ds_d1VY))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$208 lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$208) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$208 etc$35$$35$a1qx)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$208) x$35$$35$a1qu)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$208 lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$208 lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$208) lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV)))
(check-sat)
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$208) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$208 lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1)))
(check-sat)
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$208) (apply$35$$35$0 (as len Int) ds_d1Vg))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$208) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$208 etc$35$$35$a1qx)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$208) (+ 1 (apply$35$$35$0 (as len Int) etc$35$$35$a1qx)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$208) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$208) ds_d1VY)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$208 ds_d1VY))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$208) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$208 lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$208))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$208) (apply$35$$35$0 (as len Int) etc$35$$35$a1qx))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$208) y$35$$35$a1qw)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$208 lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1)))
(check-sat)
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$208) (apply$35$$35$0 (as len Int) ds_d1VY))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$208) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$208) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$208 lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$208) (apply$35$$35$0 (as len Int) etc$35$$35$a1qx))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$208) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$208) (apply$35$$35$0 (as len Int) ds_d1VY))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$208 ds_d1Vg)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$208) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2))))
(check-sat)
(pop 1)
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (exists ((lq_tmp$36$x$35$$35$1846 Int) (lq_karg$36$etc$35$$35$a1qx$35$$35$k_$35$$35$1836 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2$35$$35$k_$35$$35$1836 Int) (lq_karg$36$ds_d1Vg$35$$35$k_$35$$35$1836 Int) (lq_karg$36$x$35$$35$a1qu$35$$35$k_$35$$35$1836 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV$35$$35$k_$35$$35$1836 Int) (lq_karg$36$y$35$$35$a1qw$35$$35$k_$35$$35$1836 Int) (lq_karg$36$ds_d1VY$35$$35$k_$35$$35$1836 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW$35$$35$k_$35$$35$1836 Int) (lq_karg$36$VV$35$$35$1835$35$$35$k_$35$$35$1836 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1$35$$35$k_$35$$35$1836 Int)) (and (= lq_karg$36$VV$35$$35$1835$35$$35$k_$35$$35$1836 lq_tmp$36$x$35$$35$1814) (= lq_karg$36$ds_d1VY$35$$35$k_$35$$35$1836 ds_d1VY) (= lq_karg$36$ds_d1Vg$35$$35$k_$35$$35$1836 ds_d1Vg) (= lq_karg$36$etc$35$$35$a1qx$35$$35$k_$35$$35$1836 etc$35$$35$a1qx) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV$35$$35$k_$35$$35$1836 lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW$35$$35$k_$35$$35$1836 lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1$35$$35$k_$35$$35$1836 lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2$35$$35$k_$35$$35$1836 lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2) (= lq_karg$36$x$35$$35$a1qu$35$$35$k_$35$$35$1836 x$35$$35$a1qu) (= lq_karg$36$y$35$$35$a1qw$35$$35$k_$35$$35$1836 y$35$$35$a1qw) (= lq_tmp$36$x$35$$35$1846 lq_tmp$36$x$35$$35$1814) (exists ((VV$35$$35$F$35$$35$211 Int)) (and (=> (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$211)) (= VV$35$$35$F$35$$35$211 lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$211) 0) (= lq_karg$36$VV$35$$35$1835$35$$35$k_$35$$35$1836 VV$35$$35$F$35$$35$211) (= lq_karg$36$ds_d1VY$35$$35$k_$35$$35$1836 ds_d1VY) (= lq_karg$36$ds_d1Vg$35$$35$k_$35$$35$1836 ds_d1Vg) (= lq_karg$36$etc$35$$35$a1qx$35$$35$k_$35$$35$1836 etc$35$$35$a1qx) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV$35$$35$k_$35$$35$1836 lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW$35$$35$k_$35$$35$1836 lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1$35$$35$k_$35$$35$1836 lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2$35$$35$k_$35$$35$1836 lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2) (= lq_karg$36$x$35$$35$a1qu$35$$35$k_$35$$35$1836 x$35$$35$a1qu) (= lq_karg$36$y$35$$35$a1qw$35$$35$k_$35$$35$1836 y$35$$35$a1qw))))) b$36$$35$$35$193 b$36$$35$$35$194 b$36$$35$$35$212 b$36$$35$$35$198 b$36$$35$$35$214 b$36$$35$$35$215 b$36$$35$$35$200 (>= (apply$35$$35$0 (as len Int) lq_tmp$36$x$35$$35$1814) 0) b$36$$35$$35$201 b$36$$35$$35$202 b$36$$35$$35$218 b$36$$35$$35$43 b$36$$35$$35$219 b$36$$35$$35$46 b$36$$35$$35$670 b$36$$35$$35$847))
(push 1)
(assert (not (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$233) etc$35$$35$a1qx)))
(check-sat)
(pop 1)
(push 1)
(assert (not (=> (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$233))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$233) lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$233) (apply$35$$35$0 (as len Int) ds_d1VY))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$233) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$233) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$233) (apply$35$$35$0 (as len Int) lq_tmp$36$x$35$$35$1905))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$233) (apply$35$$35$0 (as len Int) ds_d1VY))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$233) (apply$35$$35$0 (as len Int) ds_d1Vg))))
(check-sat)
(pop 1)
(push 1)
(assert (not (=> (apply$35$$35$1 (as Example.notEmpty Int) lq_tmp$36$x$35$$35$1905) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$233))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$233) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$233) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$233) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$233) (apply$35$$35$0 (as len Int) lq_tmp$36$x$35$$35$1905))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$233))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$233) (apply$35$$35$0 (as len Int) etc$35$$35$a1qx))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$233) lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$233))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$233) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$233 lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$233) lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$233 lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$233) ds_d1Vg)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$233) (apply$35$$35$0 (as len Int) lq_tmp$36$x$35$$35$1905))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$233) (apply$35$$35$0 (as len Int) etc$35$$35$a1qx))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$233) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1))))
(check-sat)
(pop 1)
(push 1)
(assert (not (=> (apply$35$$35$1 (as Example.notEmpty Int) ds_d1Vg) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$233))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$233))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$233) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$233))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$1 (as Example.notEmpty Int) ds_d1Vg) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$233))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$233) (apply$35$$35$0 (as len Int) ds_d1VY))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$233) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$233) (apply$35$$35$0 (as len Int) etc$35$$35$a1qx))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$233) (apply$35$$35$0 (as len Int) ds_d1VY))))
(check-sat)
(pop 1)
(push 1)
(assert (not (=> (apply$35$$35$1 (as Example.notEmpty Int) ds_d1VY) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$233))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$233) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$233) (apply$35$$35$0 (as len Int) ds_d1Vg))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$233) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$1 (as Example.notEmpty Int) etc$35$$35$a1qx) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$233))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$233) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$233 lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$233) lq_tmp$36$x$35$$35$1905)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$233) (apply$35$$35$0 (as len Int) ds_d1Vg))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$233) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW))))
(check-sat)
(pop 1)
(push 1)
(assert (not (=> (apply$35$$35$1 (as Example.notEmpty Int) etc$35$$35$a1qx) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$233))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$233))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$1 (as Example.notEmpty Int) ds_d1VY) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$233))))
(check-sat)
(pop 1)
(push 1)
(assert (not (=> (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$233))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$233 lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$233) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$1 (as Example.notEmpty Int) lq_tmp$36$x$35$$35$1905) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$233))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$233) 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$233)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$233) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$233) ds_d1VY)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$233) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$233) (apply$35$$35$0 (as len Int) lq_tmp$36$x$35$$35$1905))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$233) (apply$35$$35$0 (as len Int) etc$35$$35$a1qx))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$233) (apply$35$$35$0 (as len Int) ds_d1VY))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$233) (apply$35$$35$0 (as len Int) etc$35$$35$a1qx))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$233) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$233) 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$233) lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV)))
(check-sat)
(pop 1)
(push 1)
(assert (not (=> (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$233))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$233) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$233) (apply$35$$35$0 (as len Int) lq_tmp$36$x$35$$35$1905))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$233) 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$233) (apply$35$$35$0 (as len Int) ds_d1Vg))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$233) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$233 lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$233 lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$233) (apply$35$$35$0 (as len Int) ds_d1Vg))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$233) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$233) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW))))
(check-sat)
(pop 1)
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (exists ((lq_tmp$36$x$35$$35$1846 Int) (lq_karg$36$etc$35$$35$a1qx$35$$35$k_$35$$35$1836 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2$35$$35$k_$35$$35$1836 Int) (lq_karg$36$ds_d1Vg$35$$35$k_$35$$35$1836 Int) (lq_karg$36$x$35$$35$a1qu$35$$35$k_$35$$35$1836 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV$35$$35$k_$35$$35$1836 Int) (lq_karg$36$y$35$$35$a1qw$35$$35$k_$35$$35$1836 Int) (lq_karg$36$ds_d1VY$35$$35$k_$35$$35$1836 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW$35$$35$k_$35$$35$1836 Int) (lq_karg$36$VV$35$$35$1835$35$$35$k_$35$$35$1836 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1$35$$35$k_$35$$35$1836 Int)) (and (= lq_karg$36$VV$35$$35$1835$35$$35$k_$35$$35$1836 lq_tmp$36$x$35$$35$1814) (= lq_karg$36$ds_d1VY$35$$35$k_$35$$35$1836 ds_d1VY) (= lq_karg$36$ds_d1Vg$35$$35$k_$35$$35$1836 ds_d1Vg) (= lq_karg$36$etc$35$$35$a1qx$35$$35$k_$35$$35$1836 etc$35$$35$a1qx) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV$35$$35$k_$35$$35$1836 lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW$35$$35$k_$35$$35$1836 lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1$35$$35$k_$35$$35$1836 lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2$35$$35$k_$35$$35$1836 lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2) (= lq_karg$36$x$35$$35$a1qu$35$$35$k_$35$$35$1836 x$35$$35$a1qu) (= lq_karg$36$y$35$$35$a1qw$35$$35$k_$35$$35$1836 y$35$$35$a1qw) (= lq_tmp$36$x$35$$35$1846 lq_tmp$36$x$35$$35$1814) (exists ((VV$35$$35$F$35$$35$211 Int)) (and (=> (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$211)) (= VV$35$$35$F$35$$35$211 lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$211) 0) (= lq_karg$36$VV$35$$35$1835$35$$35$k_$35$$35$1836 VV$35$$35$F$35$$35$211) (= lq_karg$36$ds_d1VY$35$$35$k_$35$$35$1836 ds_d1VY) (= lq_karg$36$ds_d1Vg$35$$35$k_$35$$35$1836 ds_d1Vg) (= lq_karg$36$etc$35$$35$a1qx$35$$35$k_$35$$35$1836 etc$35$$35$a1qx) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV$35$$35$k_$35$$35$1836 lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW$35$$35$k_$35$$35$1836 lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1$35$$35$k_$35$$35$1836 lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2$35$$35$k_$35$$35$1836 lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2) (= lq_karg$36$x$35$$35$a1qu$35$$35$k_$35$$35$1836 x$35$$35$a1qu) (= lq_karg$36$y$35$$35$a1qw$35$$35$k_$35$$35$1836 y$35$$35$a1qw))))) b$36$$35$$35$801 b$36$$35$$35$193 b$36$$35$$35$194 b$36$$35$$35$212 b$36$$35$$35$198 b$36$$35$$35$214 b$36$$35$$35$215 b$36$$35$$35$200 (>= (apply$35$$35$0 (as len Int) lq_tmp$36$x$35$$35$1814) 0) b$36$$35$$35$201 b$36$$35$$35$202 b$36$$35$$35$218 b$36$$35$$35$43 b$36$$35$$35$219 b$36$$35$$35$46))
(push 1)
(assert (not (< (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$226) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$226) (apply$35$$35$0 (as len Int) ds_d1Vg))))
(check-sat)
(pop 1)
(push 1)
(assert (not (=> (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$226))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$226 lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$226) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$226) 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$226) (apply$35$$35$0 (as len Int) etc$35$$35$a1qx))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$226) 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$226) etc$35$$35$a1qx)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$226) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW))))
(check-sat)
(pop 1)
(push 1)
(assert (not (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$226)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$226) (apply$35$$35$0 (as len Int) ds_d1Vg))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$226) (apply$35$$35$0 (as len Int) etc$35$$35$a1qx))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$226) lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$226) ds_d1Vg)))
(check-sat)
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$226) (apply$35$$35$0 (as len Int) ds_d1Vg))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$226) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$226 lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2)))
(check-sat)
(pop 1)
(push 1)
(assert (not (=> (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$226))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$226) 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$226 lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$226) (apply$35$$35$0 (as len Int) etc$35$$35$a1qx))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$226) (apply$35$$35$0 (as len Int) ds_d1VY))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$226) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$226) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$226) (apply$35$$35$0 (as len Int) ds_d1VY))))
(check-sat)
(pop 1)
(push 1)
(assert (not (=> (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$226))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$226) (apply$35$$35$0 (as len Int) ds_d1VY))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$226) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$226) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$226) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$226) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$226) (apply$35$$35$0 (as len Int) ds_d1VY))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$226))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$226) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$226) (apply$35$$35$0 (as len Int) ds_d1Vg))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$226))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$226) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$226) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$226) (apply$35$$35$0 (as len Int) etc$35$$35$a1qx))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$226) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$226) (apply$35$$35$0 (as len Int) ds_d1VY))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$226 lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$226) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$226) lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$226) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$226) (apply$35$$35$0 (as len Int) ds_d1Vg))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$226 lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$226) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$226) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$226) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2))))
(check-sat)
(pop 1)
(push 1)
(assert (not (=> (apply$35$$35$1 (as Example.notEmpty Int) ds_d1Vg) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$226))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$226) (apply$35$$35$0 (as len Int) etc$35$$35$a1qx))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$226))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$226) lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$226) ds_d1VY)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$226))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$1 (as Example.notEmpty Int) ds_d1Vg) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$226))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$1 (as Example.notEmpty Int) etc$35$$35$a1qx) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$226))))
(check-sat)
(pop 1)
(push 1)
(assert (not (=> (apply$35$$35$1 (as Example.notEmpty Int) ds_d1VY) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$226))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$226) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$226) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$226))))
(check-sat)
(pop 1)
(push 1)
(assert (not (=> (apply$35$$35$1 (as Example.notEmpty Int) etc$35$$35$a1qx) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$226))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$226 lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$1 (as Example.notEmpty Int) ds_d1VY) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$226))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$226) lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1)))
(check-sat)
(pop 1)
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (and (= s$35$$35$a1Lx (apply$35$$35$0 (as fst Int) ds_d1W1)) (>= (apply$35$$35$0 (as len Int) s$35$$35$a1Lx) 0) (>= (apply$35$$35$0 (as len Int) ss$35$$35$a1Lz) 0) (>= (apply$35$$35$0 (as len Int) ss$35$$35$a1Lz) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$201) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$201) 0)) b$36$$35$$35$193 (>= (apply$35$$35$0 (as len Int) s$35$$35$a1Lx) 0) b$36$$35$$35$194 b$36$$35$$35$227 b$36$$35$$35$212 (>= (apply$35$$35$0 (as len Int) ss$35$$35$a1Lz) 0) (and (= ds_d1W1 (apply$35$$35$0 (apply$35$$35$0 (as GHC.Tuple.$40$$44$$41$ Int) s$35$$35$a1Lx) ss$35$$35$a1Lz)) (= (apply$35$$35$0 (as fst Int) ds_d1W1) s$35$$35$a1Lx) (= (apply$35$$35$0 (as snd Int) ds_d1W1) ss$35$$35$a1Lz) (= (apply$35$$35$0 (as x_Tuple21 Int) ds_d1W1) s$35$$35$a1Lx) (= (apply$35$$35$0 (as x_Tuple22 Int) ds_d1W1) ss$35$$35$a1Lz)) b$36$$35$$35$198 b$36$$35$$35$214 b$36$$35$$35$215 b$36$$35$$35$200 b$36$$35$$35$201 b$36$$35$$35$202 b$36$$35$$35$218 b$36$$35$$35$43 b$36$$35$$35$219 b$36$$35$$35$46 (and (= VV$35$$35$F$35$$35$201 ss$35$$35$a1Lz) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$201) 0))))
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$201 lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$201) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$201) 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$201) (apply$35$$35$0 (as len Int) ds_d1Vg))))
(check-sat)
(pop 1)
(push 1)
(assert (not (=> (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$201))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$201) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$201 lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$201) (apply$35$$35$0 (as len Int) ds_d1Vg))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$201) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (=> (apply$35$$35$1 (as Example.notEmpty Int) s$35$$35$a1Lx) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$201))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$201) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$201 (apply$35$$35$0 (as snd Int) ds_d1W1))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$201) 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$201) (apply$35$$35$0 (as len Int) etc$35$$35$a1qx))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$201 lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$1 (as Example.notEmpty Int) etc$35$$35$a1qx) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$201))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$201) (apply$35$$35$0 (as len Int) ds_d1VY))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$201) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW))))
(check-sat)
(pop 1)
(push 1)
(assert (not (=> (apply$35$$35$1 (as Example.notEmpty Int) ds_d1VY) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$201))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$201) lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$201))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$201) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$201) (apply$35$$35$0 (as len Int) s$35$$35$a1Lx))))
(check-sat)
(pop 1)
(push 1)
(assert (not (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$201)))
(check-sat)
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$201) (apply$35$$35$0 (as len Int) ds_d1VY))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$201) (apply$35$$35$0 (as len Int) etc$35$$35$a1qx))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$201) s$35$$35$a1Lx)))
(check-sat)
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$201) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$201) 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (=> (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$201))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$201))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$201) lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$201) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$201) (apply$35$$35$0 (as len Int) ds_d1Vg))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$1 (as Example.notEmpty Int) s$35$$35$a1Lx) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$201))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$201 lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$201) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$201) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$201))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$201) (apply$35$$35$0 (as len Int) ds_d1VY))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$1 (as Example.notEmpty Int) ds_d1Vg) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$201))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$201) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$201) lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$201) (apply$35$$35$0 (as len Int) etc$35$$35$a1qx))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$201))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$201) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$201) etc$35$$35$a1qx)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$201) (apply$35$$35$0 (as len Int) s$35$$35$a1Lx))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$201) (apply$35$$35$0 (as len Int) ds_d1VY))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$201 lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$201) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$201) (apply$35$$35$0 (as len Int) etc$35$$35$a1qx))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$201) (apply$35$$35$0 (as len Int) ds_d1VY))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$201) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$201) (apply$35$$35$0 (as len Int) s$35$$35$a1Lx))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$201) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$201) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$201) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$201) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$201) (apply$35$$35$0 (as len Int) ds_d1Vg))))
(check-sat)
(pop 1)
(push 1)
(assert (not (=> (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$201))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$201 lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$201) ds_d1Vg)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$201) lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$201) (apply$35$$35$0 (as len Int) ds_d1Vg))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$201) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2))))
(check-sat)
(pop 1)
(push 1)
(assert (not (=> (apply$35$$35$1 (as Example.notEmpty Int) ds_d1Vg) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$201))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$201) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$201) (apply$35$$35$0 (as len Int) s$35$$35$a1Lx))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$201) ds_d1VY)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$201) (apply$35$$35$0 (as len Int) etc$35$$35$a1qx))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$1 (as Example.notEmpty Int) ds_d1VY) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$201))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$201) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1))))
(check-sat)
(pop 1)
(push 1)
(assert (not (=> (apply$35$$35$1 (as Example.notEmpty Int) etc$35$$35$a1qx) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$201))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$201))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$201) (apply$35$$35$0 (as len Int) s$35$$35$a1Lx))))
(check-sat)
(pop 1)
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$819 b$36$$35$$35$43 b$36$$35$$35$46))
(push 1)
(assert (not false))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (apply$35$$35$9 (as Example.notEmpty Int) VV$35$$35$F$35$$35$277))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$8 (as len Int) VV$35$$35$F$35$$35$277) 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (apply$35$$35$9 (as Example.notEmpty Int) VV$35$$35$F$35$$35$277)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$8 (as len Int) VV$35$$35$F$35$$35$277) 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$8 (as len Int) VV$35$$35$F$35$$35$277) 0)))
(check-sat)
(pop 1)
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
(pop 1)
(push 1)
(push 1)
(assert (and true b$36$$35$$35$160 b$36$$35$$35$161 b$36$$35$$35$162 b$36$$35$$35$789 b$36$$35$$35$43 b$36$$35$$35$157 b$36$$35$$35$46 b$36$$35$$35$158 b$36$$35$$35$159))
(push 1)
(assert (not false))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$400 b$36$$35$$35$790 b$36$$35$$35$393 b$36$$35$$35$394 b$36$$35$$35$43 b$36$$35$$35$395 b$36$$35$$35$396 b$36$$35$$35$46 b$36$$35$$35$399))
(push 1)
(assert (not (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$80)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$791 b$36$$35$$35$360 b$36$$35$$35$361 b$36$$35$$35$362 b$36$$35$$35$43 b$36$$35$$35$363 b$36$$35$$35$364 b$36$$35$$35$365 b$36$$35$$35$46))
(push 1)
(assert (not false))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and false b$36$$35$$35$321 b$36$$35$$35$322 b$36$$35$$35$323 b$36$$35$$35$324 (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$128) 0) b$36$$35$$35$43 b$36$$35$$35$46))
(push 1)
(assert (not (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$128)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$152 b$36$$35$$35$153 b$36$$35$$35$154 b$36$$35$$35$795 b$36$$35$$35$43 b$36$$35$$35$155 b$36$$35$$35$46))
(push 1)
(assert (not (not (= 0 VV$35$$35$F$35$$35$273))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$275 b$36$$35$$35$277 b$36$$35$$35$278 b$36$$35$$35$279 b$36$$35$$35$280 b$36$$35$$35$281 b$36$$35$$35$282 b$36$$35$$35$43 b$36$$35$$35$796 b$36$$35$$35$270 b$36$$35$$35$46 b$36$$35$$35$271))
(push 1)
(assert (not (< 0 VV$35$$35$F$35$$35$145)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (and (>= totElems$35$$35$a1ql 0) (> totElems$35$$35$a1ql 0) (not (= totElems$35$$35$a1ql 0)) (not (= 0 totElems$35$$35$a1ql)) (=> (apply$35$$35$1 (as Example.notEmpty Int) wxs$35$$35$a1qi) (> totElems$35$$35$a1ql 0)) (< 0 totElems$35$$35$a1ql) (>= totWeight$35$$35$a1qm 0) (> totWeight$35$$35$a1qm 0) (not (= totWeight$35$$35$a1qm 0)) (not (= 0 totWeight$35$$35$a1qm)) (=> (apply$35$$35$1 (as Example.notEmpty Int) wxs$35$$35$a1qi) (> totWeight$35$$35$a1qm 0)) (< 0 totWeight$35$$35$a1qm) (>= VV$35$$35$F$35$$35$2 0) (> VV$35$$35$F$35$$35$2 0) (not (= VV$35$$35$F$35$$35$2 0)) (not (= 0 VV$35$$35$F$35$$35$2)) (=> (apply$35$$35$1 (as Example.notEmpty Int) wxs$35$$35$a1qi) (> VV$35$$35$F$35$$35$2 0)) (< 0 VV$35$$35$F$35$$35$2)) b$36$$35$$35$465 b$36$$35$$35$456 b$36$$35$$35$43 (= VV$35$$35$F$35$$35$2 totWeight$35$$35$a1qm) b$36$$35$$35$46 b$36$$35$$35$446))
(push 1)
(assert (not (not (= 0 VV$35$$35$F$35$$35$2))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$145 b$36$$35$$35$146 b$36$$35$$35$147 b$36$$35$$35$43 b$36$$35$$35$46 b$36$$35$$35$799))
(push 1)
(assert (not (not (= 0 VV$35$$35$F$35$$35$274))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and false b$36$$35$$35$272 b$36$$35$$35$273 b$36$$35$$35$274 b$36$$35$$35$43 b$36$$35$$35$270 b$36$$35$$35$46 b$36$$35$$35$271))
(push 1)
(assert (not (< 0 VV$35$$35$F$35$$35$146)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (and (>= totWeight$35$$35$a1qm 0) (> totWeight$35$$35$a1qm 0) (not (= totWeight$35$$35$a1qm 0)) (not (= 0 totWeight$35$$35$a1qm)) (=> (apply$35$$35$1 (as Example.notEmpty Int) wxs$35$$35$a1qi) (> totWeight$35$$35$a1qm 0)) (< 0 totWeight$35$$35$a1qm)) b$36$$35$$35$465 b$36$$35$$35$802 b$36$$35$$35$456 b$36$$35$$35$43 b$36$$35$$35$46 b$36$$35$$35$446))
(push 1)
(assert (not (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$3)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$804 b$36$$35$$35$132 b$36$$35$$35$133 b$36$$35$$35$134 b$36$$35$$35$136 b$36$$35$$35$137 b$36$$35$$35$43 b$36$$35$$35$139 b$36$$35$$35$140 b$36$$35$$35$141 b$36$$35$$35$46))
(push 1)
(assert (not false))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$389 b$36$$35$$35$806 b$36$$35$$35$390 b$36$$35$$35$43 b$36$$35$$35$46))
(push 1)
(assert (not (not (= 0 VV$35$$35$F$35$$35$83))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$272 b$36$$35$$35$273 b$36$$35$$35$274 b$36$$35$$35$807 b$36$$35$$35$43 b$36$$35$$35$270 b$36$$35$$35$46 b$36$$35$$35$271))
(push 1)
(assert (not (apply$35$$35$9 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$132 b$36$$35$$35$133 b$36$$35$$35$134 b$36$$35$$35$136 b$36$$35$$35$137 b$36$$35$$35$138 b$36$$35$$35$43 b$36$$35$$35$811 b$36$$35$$35$46))
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$276 0))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$43 b$36$$35$$35$812 b$36$$35$$35$428 b$36$$35$$35$429 b$36$$35$$35$46 b$36$$35$$35$430 b$36$$35$$35$431))
(push 1)
(assert (not (= (apply$35$$35$1 (as Example.notEmpty Int) ds_d1Ri) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$52))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$389 b$36$$35$$35$390 b$36$$35$$35$43 b$36$$35$$35$813 b$36$$35$$35$46))
(push 1)
(assert (not (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$84)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (and (not (= ys$35$$35$a1va ds_d1RH)) (<= (apply$35$$35$0 (as len Int) ys$35$$35$a1va) (apply$35$$35$0 (as len Int) xs$35$$35$a1ow)) (<= (apply$35$$35$0 (as len Int) ys$35$$35$a1va) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801133$35$$35$d1Xv)) (< (apply$35$$35$0 (as len Int) ys$35$$35$a1va) (apply$35$$35$0 (as len Int) ds_d1RH)) (= ys$35$$35$a1va (apply$35$$35$0 (as fst Int) ds_d1RU)) (not (= ys$35$$35$a1va lq_anf$36$$35$$35$7205759403792801133$35$$35$d1Xv)) (< (apply$35$$35$0 (as len Int) ys$35$$35$a1va) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801133$35$$35$d1Xv)) (<= (apply$35$$35$0 (as len Int) ys$35$$35$a1va) (apply$35$$35$0 (as len Int) ds_d1RH)) (>= (apply$35$$35$0 (as len Int) ys$35$$35$a1va) 0) (not (= zs$35$$35$a1vc lq_anf$36$$35$$35$7205759403792801133$35$$35$d1Xv)) (<= (apply$35$$35$0 (as len Int) zs$35$$35$a1vc) (apply$35$$35$0 (as len Int) ds_d1RH)) (< (apply$35$$35$0 (as len Int) zs$35$$35$a1vc) (apply$35$$35$0 (as len Int) ds_d1RH)) (<= (apply$35$$35$0 (as len Int) zs$35$$35$a1vc) (apply$35$$35$0 (as len Int) xs$35$$35$a1ow)) (not (= zs$35$$35$a1vc ds_d1RH)) (= zs$35$$35$a1vc (apply$35$$35$0 (as snd Int) ds_d1RU)) (< (apply$35$$35$0 (as len Int) zs$35$$35$a1vc) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801133$35$$35$d1Xv)) (<= (apply$35$$35$0 (as len Int) zs$35$$35$a1vc) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801133$35$$35$d1Xv)) (>= (apply$35$$35$0 (as len Int) zs$35$$35$a1vc) 0) (or (exists ((lq_karg$36$x$35$$35$a1ov$35$$35$k_$35$$35$3380 Int) (lq_karg$36$ds_d1RU$35$$35$k_$35$$35$3380 Int) (lq_karg$36$ds_d1RH$35$$35$k_$35$$35$3380 Int) (lq_karg$36$VV$35$$35$3379$35$$35$k_$35$$35$3380 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792801135$35$$35$d1Xx$35$$35$k_$35$$35$3380 Int) (lq_karg$36$zs$35$$35$a1vc$35$$35$k_$35$$35$3380 Int) (lq_karg$36$ys$35$$35$a1va$35$$35$k_$35$$35$3380 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792801136$35$$35$d1Xy$35$$35$k_$35$$35$3380 Int) (lq_karg$36$xs$35$$35$a1ow$35$$35$k_$35$$35$3380 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792801133$35$$35$d1Xv$35$$35$k_$35$$35$3380 Int)) (and (= lq_karg$36$VV$35$$35$3379$35$$35$k_$35$$35$3380 VV$35$$35$F$35$$35$100) (= lq_karg$36$ds_d1RH$35$$35$k_$35$$35$3380 ds_d1RH) (= lq_karg$36$ds_d1RU$35$$35$k_$35$$35$3380 ds_d1RU) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792801133$35$$35$d1Xv$35$$35$k_$35$$35$3380 lq_anf$36$$35$$35$7205759403792801133$35$$35$d1Xv) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792801135$35$$35$d1Xx$35$$35$k_$35$$35$3380 lq_anf$36$$35$$35$7205759403792801135$35$$35$d1Xx) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792801136$35$$35$d1Xy$35$$35$k_$35$$35$3380 lq_anf$36$$35$$35$7205759403792801136$35$$35$d1Xy) (= lq_karg$36$x$35$$35$a1ov$35$$35$k_$35$$35$3380 x$35$$35$a1ov) (= lq_karg$36$xs$35$$35$a1ow$35$$35$k_$35$$35$3380 xs$35$$35$a1ow) (= lq_karg$36$ys$35$$35$a1va$35$$35$k_$35$$35$3380 ys$35$$35$a1va) (= lq_karg$36$zs$35$$35$a1vc$35$$35$k_$35$$35$3380 zs$35$$35$a1vc) (exists ((VV$35$$35$F$35$$35$110 Int)) (and (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$110) (= VV$35$$35$F$35$$35$110 lq_anf$36$$35$$35$7205759403792801135$35$$35$d1Xx) (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$110) x$35$$35$a1ov) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$110) (+ 1 (apply$35$$35$0 (as len Int) ys$35$$35$a1va))) (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$110) ys$35$$35$a1va) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$110) 0) (= lq_karg$36$VV$35$$35$3379$35$$35$k_$35$$35$3380 VV$35$$35$F$35$$35$110) (= lq_karg$36$ds_d1RH$35$$35$k_$35$$35$3380 ds_d1RH) (= lq_karg$36$ds_d1RU$35$$35$k_$35$$35$3380 ds_d1RU) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792801133$35$$35$d1Xv$35$$35$k_$35$$35$3380 lq_anf$36$$35$$35$7205759403792801133$35$$35$d1Xv) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792801135$35$$35$d1Xx$35$$35$k_$35$$35$3380 lq_anf$36$$35$$35$7205759403792801135$35$$35$d1Xx) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792801136$35$$35$d1Xy$35$$35$k_$35$$35$3380 lq_anf$36$$35$$35$7205759403792801136$35$$35$d1Xy) (= lq_karg$36$x$35$$35$a1ov$35$$35$k_$35$$35$3380 x$35$$35$a1ov) (= lq_karg$36$xs$35$$35$a1ow$35$$35$k_$35$$35$3380 xs$35$$35$a1ow) (= lq_karg$36$ys$35$$35$a1va$35$$35$k_$35$$35$3380 ys$35$$35$a1va) (= lq_karg$36$zs$35$$35$a1vc$35$$35$k_$35$$35$3380 zs$35$$35$a1vc))))) (exists ((lq_karg$36$x$35$$35$a1ov$35$$35$k_$35$$35$3380 Int) (lq_karg$36$ds_d1RU$35$$35$k_$35$$35$3380 Int) (lq_karg$36$ds_d1RH$35$$35$k_$35$$35$3380 Int) (lq_karg$36$VV$35$$35$3379$35$$35$k_$35$$35$3380 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792801135$35$$35$d1Xx$35$$35$k_$35$$35$3380 Int) (lq_karg$36$zs$35$$35$a1vc$35$$35$k_$35$$35$3380 Int) (lq_karg$36$ys$35$$35$a1va$35$$35$k_$35$$35$3380 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792801136$35$$35$d1Xy$35$$35$k_$35$$35$3380 Int) (lq_karg$36$xs$35$$35$a1ow$35$$35$k_$35$$35$3380 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792801133$35$$35$d1Xv$35$$35$k_$35$$35$3380 Int)) (and (= lq_karg$36$VV$35$$35$3379$35$$35$k_$35$$35$3380 VV$35$$35$F$35$$35$100) (= lq_karg$36$ds_d1RH$35$$35$k_$35$$35$3380 ds_d1RH) (= lq_karg$36$ds_d1RU$35$$35$k_$35$$35$3380 ds_d1RU) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792801133$35$$35$d1Xv$35$$35$k_$35$$35$3380 lq_anf$36$$35$$35$7205759403792801133$35$$35$d1Xv) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792801135$35$$35$d1Xx$35$$35$k_$35$$35$3380 lq_anf$36$$35$$35$7205759403792801135$35$$35$d1Xx) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792801136$35$$35$d1Xy$35$$35$k_$35$$35$3380 lq_anf$36$$35$$35$7205759403792801136$35$$35$d1Xy) (= lq_karg$36$x$35$$35$a1ov$35$$35$k_$35$$35$3380 x$35$$35$a1ov) (= lq_karg$36$xs$35$$35$a1ow$35$$35$k_$35$$35$3380 xs$35$$35$a1ow) (= lq_karg$36$ys$35$$35$a1va$35$$35$k_$35$$35$3380 ys$35$$35$a1va) (= lq_karg$36$zs$35$$35$a1vc$35$$35$k_$35$$35$3380 zs$35$$35$a1vc) (exists ((VV$35$$35$F$35$$35$101 Int)) (and (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$101) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$101) 0) (= lq_karg$36$VV$35$$35$3379$35$$35$k_$35$$35$3380 VV$35$$35$F$35$$35$101) (= lq_karg$36$ds_d1RH$35$$35$k_$35$$35$3380 ds_d1RH) (= lq_karg$36$ds_d1RU$35$$35$k_$35$$35$3380 ds_d1RU) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792801133$35$$35$d1Xv$35$$35$k_$35$$35$3380 lq_anf$36$$35$$35$7205759403792801133$35$$35$d1Xv) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792801135$35$$35$d1Xx$35$$35$k_$35$$35$3380 lq_anf$36$$35$$35$7205759403792801135$35$$35$d1Xx) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792801136$35$$35$d1Xy$35$$35$k_$35$$35$3380 lq_anf$36$$35$$35$7205759403792801136$35$$35$d1Xy) (= lq_karg$36$x$35$$35$a1ov$35$$35$k_$35$$35$3380 x$35$$35$a1ov) (= lq_karg$36$xs$35$$35$a1ow$35$$35$k_$35$$35$3380 xs$35$$35$a1ow) (= lq_karg$36$ys$35$$35$a1va$35$$35$k_$35$$35$3380 ys$35$$35$a1va) (= lq_karg$36$zs$35$$35$a1vc$35$$35$k_$35$$35$3380 zs$35$$35$a1vc))))))) b$36$$35$$35$321 (>= (apply$35$$35$0 (as len Int) ys$35$$35$a1va) 0) b$36$$35$$35$322 b$36$$35$$35$326 (>= (apply$35$$35$0 (as len Int) zs$35$$35$a1vc) 0) b$36$$35$$35$328 b$36$$35$$35$344 b$36$$35$$35$329 b$36$$35$$35$345 b$36$$35$$35$43 b$36$$35$$35$46 (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$100) 0)))
(push 1)
(assert (not (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$100)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$256 b$36$$35$$35$257 b$36$$35$$35$258 b$36$$35$$35$259 b$36$$35$$35$248 b$36$$35$$35$249 b$36$$35$$35$43 b$36$$35$$35$253 b$36$$35$$35$46 b$36$$35$$35$815 b$36$$35$$35$255))
(push 1)
(assert (not (=> (apply$35$$35$1 (as Example.notEmpty Int) ds_d1Tn) (> VV$35$$35$F$35$$35$148 0))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$820 b$36$$35$$35$424 b$36$$35$$35$43 b$36$$35$$35$46))
(push 1)
(assert (not (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$53)))
(check-sat)
(pop 1)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$309 b$36$$35$$35$310 b$36$$35$$35$822 b$36$$35$$35$311 b$36$$35$$35$312 b$36$$35$$35$313 b$36$$35$$35$43 b$36$$35$$35$46))
(push 1)
(assert (not (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$133)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$256 b$36$$35$$35$257 b$36$$35$$35$258 b$36$$35$$35$259 b$36$$35$$35$823 b$36$$35$$35$248 b$36$$35$$35$249 b$36$$35$$35$43 b$36$$35$$35$253 b$36$$35$$35$46 b$36$$35$$35$255))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$149 0)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$208 b$36$$35$$35$193 b$36$$35$$35$194 b$36$$35$$35$210 b$36$$35$$35$198 b$36$$35$$35$824 b$36$$35$$35$200 b$36$$35$$35$201 b$36$$35$$35$202 b$36$$35$$35$43 b$36$$35$$35$203 b$36$$35$$35$204 b$36$$35$$35$46 b$36$$35$$35$206))
(push 1)
(assert (not (=> (apply$35$$35$1 (as Example.notEmpty Int) ds_d1Vg) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$245))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$193 b$36$$35$$35$194 b$36$$35$$35$195 b$36$$35$$35$196 b$36$$35$$35$826 b$36$$35$$35$43 b$36$$35$$35$46))
(push 1)
(assert (not (=> (apply$35$$35$1 (as Example.notEmpty Int) ds_d1Vg) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$262))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$417 b$36$$35$$35$419 b$36$$35$$35$405 b$36$$35$$35$421 b$36$$35$$35$406 b$36$$35$$35$407 b$36$$35$$35$408 b$36$$35$$35$409 b$36$$35$$35$43 b$36$$35$$35$411 b$36$$35$$35$828 b$36$$35$$35$413 b$36$$35$$35$46 b$36$$35$$35$415))
(push 1)
(assert (not (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$54)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$385 b$36$$35$$35$386 b$36$$35$$35$43 b$36$$35$$35$829 b$36$$35$$35$46))
(push 1)
(assert (not (not (= 0 VV$35$$35$F$35$$35$86))))
(check-sat)
(pop 1)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$833 b$36$$35$$35$385 b$36$$35$$35$386 b$36$$35$$35$43 b$36$$35$$35$46))
(push 1)
(assert (not (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$87)))
(check-sat)
(pop 1)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$834 b$36$$35$$35$248 b$36$$35$$35$249 b$36$$35$$35$250 b$36$$35$$35$43 b$36$$35$$35$251 b$36$$35$$35$252 b$36$$35$$35$46))
(push 1)
(assert (not (=> (apply$35$$35$1 (as Example.notEmpty Int) ds_d1Tn) (> VV$35$$35$F$35$$35$151 0))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$304 b$36$$35$$35$306 b$36$$35$$35$307 b$36$$35$$35$837 b$36$$35$$35$43 b$36$$35$$35$300 b$36$$35$$35$301 b$36$$35$$35$46))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$136 (not (apply$35$$35$1 (as Example.notEmpty Int) ds_d1S3)))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$838 b$36$$35$$35$248 b$36$$35$$35$249 b$36$$35$$35$250 b$36$$35$$35$43 b$36$$35$$35$251 b$36$$35$$35$252 b$36$$35$$35$46))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$152 0)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and false b$36$$35$$35$112 b$36$$35$$35$113 (>= (apply$35$$35$8 (as len Int) msg$35$$35$a1iu) 0) b$36$$35$$35$114 b$36$$35$$35$115 b$36$$35$$35$116 b$36$$35$$35$117 b$36$$35$$35$118 b$36$$35$$35$119 b$36$$35$$35$120 (and (= VV$35$$35$F$35$$35$281 msg$35$$35$a1iu) (>= (apply$35$$35$8 (as len Int) VV$35$$35$F$35$$35$281) 0)) b$36$$35$$35$121 b$36$$35$$35$106 b$36$$35$$35$43 b$36$$35$$35$107 b$36$$35$$35$108 b$36$$35$$35$124 b$36$$35$$35$109 b$36$$35$$35$46 b$36$$35$$35$110 b$36$$35$$35$126 b$36$$35$$35$111))
(push 1)
(assert (not false))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$373 b$36$$35$$35$374 b$36$$35$$35$842 b$36$$35$$35$43 b$36$$35$$35$379 b$36$$35$$35$381 b$36$$35$$35$46 b$36$$35$$35$382))
(push 1)
(assert (not (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$89)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$43 b$36$$35$$35$300 b$36$$35$$35$844 b$36$$35$$35$301 b$36$$35$$35$46 b$36$$35$$35$302 b$36$$35$$35$303))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$137 (not (apply$35$$35$1 (as Example.notEmpty Int) ds_d1S3)))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (and (= s$35$$35$a1Lx (apply$35$$35$0 (as fst Int) ds_d1W1)) (>= (apply$35$$35$0 (as len Int) s$35$$35$a1Lx) 0) (= ss$35$$35$a1Lz (apply$35$$35$0 (as snd Int) ds_d1W1)) (>= (apply$35$$35$0 (as len Int) ss$35$$35$a1Lz) 0)) b$36$$35$$35$193 (>= (apply$35$$35$0 (as len Int) s$35$$35$a1Lx) 0) b$36$$35$$35$194 b$36$$35$$35$242 b$36$$35$$35$243 b$36$$35$$35$212 b$36$$35$$35$245 b$36$$35$$35$198 b$36$$35$$35$214 (>= (apply$35$$35$0 (as len Int) ss$35$$35$a1Lz) 0) b$36$$35$$35$215 b$36$$35$$35$231 b$36$$35$$35$200 b$36$$35$$35$232 b$36$$35$$35$201 b$36$$35$$35$202 b$36$$35$$35$218 b$36$$35$$35$43 b$36$$35$$35$219 b$36$$35$$35$845 b$36$$35$$35$46))
(push 1)
(assert (not (=> (apply$35$$35$1 (as Example.notEmpty Int) ds_d1Vg) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$153))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (exists ((lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4481 Int) (lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4481 Int) (lq_karg$36$xs$35$$35$a1q8$35$$35$k_$35$$35$4481 Int) (lq_karg$36$VV$35$$35$4480$35$$35$k_$35$$35$4481 Int)) (and (= lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4481 Example.sumBad) (= lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4481 Example.sumOk) (= lq_karg$36$VV$35$$35$4480$35$$35$k_$35$$35$4481 VV$35$$35$F$35$$35$42) (= lq_karg$36$xs$35$$35$a1q8$35$$35$k_$35$$35$4481 xs$35$$35$a1q8) (exists ((VV$35$$35$F$35$$35$35 Int) (lq_anf$36$$35$$35$7205759403792801169$35$$35$d1Y5 Int) (lq_anf$36$$35$$35$7205759403792801170$35$$35$d1Y6 Int)) (and (exists ((lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4554 Int) (lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4554 Int) (lq_karg$36$xs$35$$35$a1q8$35$$35$k_$35$$35$4554 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792801170$35$$35$d1Y6$35$$35$k_$35$$35$4554 Int) (lq_karg$36$VV$35$$35$4553$35$$35$k_$35$$35$4554 Int)) (and (= lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4554 Example.sumBad) (= lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4554 Example.sumOk) (= lq_karg$36$VV$35$$35$4553$35$$35$k_$35$$35$4554 VV$35$$35$F$35$$35$35) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792801170$35$$35$d1Y6$35$$35$k_$35$$35$4554 lq_anf$36$$35$$35$7205759403792801170$35$$35$d1Y6) (= lq_karg$36$xs$35$$35$a1q8$35$$35$k_$35$$35$4554 xs$35$$35$a1q8) (exists ((VV$35$$35$F$35$$35$29 Int)) (and (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$29) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$29) 0) (= lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4554 Example.sumBad) (= lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4554 Example.sumOk) (= lq_karg$36$VV$35$$35$4553$35$$35$k_$35$$35$4554 VV$35$$35$F$35$$35$29) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792801170$35$$35$d1Y6$35$$35$k_$35$$35$4554 lq_anf$36$$35$$35$7205759403792801170$35$$35$d1Y6) (= lq_karg$36$xs$35$$35$a1q8$35$$35$k_$35$$35$4554 xs$35$$35$a1q8))))) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$35) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792801170$35$$35$d1Y6) 0) (= lq_karg$36$Example.sumBad$35$$35$k_$35$$35$4481 Example.sumBad) (= lq_karg$36$Example.sumOk$35$$35$k_$35$$35$4481 Example.sumOk) (= lq_karg$36$VV$35$$35$4480$35$$35$k_$35$$35$4481 VV$35$$35$F$35$$35$35) (= lq_karg$36$xs$35$$35$a1q8$35$$35$k_$35$$35$4481 xs$35$$35$a1q8))))) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$42) 0) b$36$$35$$35$441 b$36$$35$$35$43 b$36$$35$$35$46))
(push 1)
(assert (not (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$42)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$290 b$36$$35$$35$291 b$36$$35$$35$851 b$36$$35$$35$295 b$36$$35$$35$297 b$36$$35$$35$298 b$36$$35$$35$43 b$36$$35$$35$46))
(push 1)
(assert (not (=> (apply$35$$35$1 (as Example.notEmpty Int) ds_d1SP) (> VV$35$$35$F$35$$35$138 0))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (and (= s$35$$35$a1Lx (apply$35$$35$0 (as fst Int) ds_d1W1)) (>= (apply$35$$35$0 (as len Int) s$35$$35$a1Lx) 0) (= ss$35$$35$a1Lz (apply$35$$35$0 (as snd Int) ds_d1W1)) (>= (apply$35$$35$0 (as len Int) ss$35$$35$a1Lz) 0)) b$36$$35$$35$240 b$36$$35$$35$193 (>= (apply$35$$35$0 (as len Int) s$35$$35$a1Lx) 0) b$36$$35$$35$194 b$36$$35$$35$852 b$36$$35$$35$212 b$36$$35$$35$198 b$36$$35$$35$214 (>= (apply$35$$35$0 (as len Int) ss$35$$35$a1Lz) 0) b$36$$35$$35$215 b$36$$35$$35$231 b$36$$35$$35$200 b$36$$35$$35$232 b$36$$35$$35$201 b$36$$35$$35$233 b$36$$35$$35$202 b$36$$35$$35$218 b$36$$35$$35$234 b$36$$35$$35$43 b$36$$35$$35$219 b$36$$35$$35$236 b$36$$35$$35$46 b$36$$35$$35$238))
(push 1)
(assert (not (=> (apply$35$$35$1 (as Example.notEmpty Int) ds_d1Vg) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$170))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (exists ((lq_karg$36$etc$35$$35$a1qx$35$$35$k_$35$$35$1836 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2$35$$35$k_$35$$35$1836 Int) (lq_karg$36$ds_d1Vg$35$$35$k_$35$$35$1836 Int) (lq_karg$36$x$35$$35$a1qu$35$$35$k_$35$$35$1836 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV$35$$35$k_$35$$35$1836 Int) (lq_karg$36$y$35$$35$a1qw$35$$35$k_$35$$35$1836 Int) (lq_karg$36$ds_d1VY$35$$35$k_$35$$35$1836 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW$35$$35$k_$35$$35$1836 Int) (lq_karg$36$VV$35$$35$1835$35$$35$k_$35$$35$1836 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1$35$$35$k_$35$$35$1836 Int)) (and (= lq_karg$36$VV$35$$35$1835$35$$35$k_$35$$35$1836 VV$35$$35$F$35$$35$218) (= lq_karg$36$ds_d1VY$35$$35$k_$35$$35$1836 ds_d1VY) (= lq_karg$36$ds_d1Vg$35$$35$k_$35$$35$1836 ds_d1Vg) (= lq_karg$36$etc$35$$35$a1qx$35$$35$k_$35$$35$1836 etc$35$$35$a1qx) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV$35$$35$k_$35$$35$1836 lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW$35$$35$k_$35$$35$1836 lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1$35$$35$k_$35$$35$1836 lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2$35$$35$k_$35$$35$1836 lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2) (= lq_karg$36$x$35$$35$a1qu$35$$35$k_$35$$35$1836 x$35$$35$a1qu) (= lq_karg$36$y$35$$35$a1qw$35$$35$k_$35$$35$1836 y$35$$35$a1qw) (exists ((VV$35$$35$F$35$$35$211 Int)) (and (=> (apply$35$$35$1 (as Example.notEmpty Int) lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$211)) (= VV$35$$35$F$35$$35$211 lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$211) 0) (= lq_karg$36$VV$35$$35$1835$35$$35$k_$35$$35$1836 VV$35$$35$F$35$$35$211) (= lq_karg$36$ds_d1VY$35$$35$k_$35$$35$1836 ds_d1VY) (= lq_karg$36$ds_d1Vg$35$$35$k_$35$$35$1836 ds_d1Vg) (= lq_karg$36$etc$35$$35$a1qx$35$$35$k_$35$$35$1836 etc$35$$35$a1qx) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV$35$$35$k_$35$$35$1836 lq_anf$36$$35$$35$7205759403792801097$35$$35$d1WV) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW$35$$35$k_$35$$35$1836 lq_anf$36$$35$$35$7205759403792801098$35$$35$d1WW) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1$35$$35$k_$35$$35$1836 lq_anf$36$$35$$35$7205759403792801103$35$$35$d1X1) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2$35$$35$k_$35$$35$1836 lq_anf$36$$35$$35$7205759403792801104$35$$35$d1X2) (= lq_karg$36$x$35$$35$a1qu$35$$35$k_$35$$35$1836 x$35$$35$a1qu) (= lq_karg$36$y$35$$35$a1qw$35$$35$k_$35$$35$1836 y$35$$35$a1qw))))) b$36$$35$$35$193 b$36$$35$$35$194 b$36$$35$$35$212 (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$218) 0) b$36$$35$$35$198 b$36$$35$$35$214 b$36$$35$$35$215 b$36$$35$$35$200 b$36$$35$$35$201 b$36$$35$$35$202 b$36$$35$$35$218 b$36$$35$$35$43 b$36$$35$$35$219 b$36$$35$$35$46))
(push 1)
(assert (not (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$218)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$290 b$36$$35$$35$291 b$36$$35$$35$295 b$36$$35$$35$856 b$36$$35$$35$297 b$36$$35$$35$298 b$36$$35$$35$43 b$36$$35$$35$46))
(push 1)
(assert (not (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$139)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$373 b$36$$35$$35$374 b$36$$35$$35$375 b$36$$35$$35$376 b$36$$35$$35$377 b$36$$35$$35$378 b$36$$35$$35$43 b$36$$35$$35$859 b$36$$35$$35$46))
(push 1)
(assert (not false))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$433 b$36$$35$$35$435 b$36$$35$$35$436 b$36$$35$$35$438 b$36$$35$$35$43 b$36$$35$$35$428 b$36$$35$$35$429 b$36$$35$$35$46 b$36$$35$$35$862))
(push 1)
(assert (not (= (apply$35$$35$1 (as Example.notEmpty Int) ds_d1Ri) (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$45))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$290 b$36$$35$$35$291 b$36$$35$$35$292 b$36$$35$$35$293 b$36$$35$$35$294 b$36$$35$$35$43 b$36$$35$$35$46 b$36$$35$$35$863))
(push 1)
(assert (not (=> (apply$35$$35$1 (as Example.notEmpty Int) ds_d1SP) (> VV$35$$35$F$35$$35$141 0))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$865 b$36$$35$$35$179 b$36$$35$$35$180 b$36$$35$$35$181 b$36$$35$$35$182 b$36$$35$$35$183 b$36$$35$$35$184 b$36$$35$$35$43 b$36$$35$$35$46))
(push 1)
(assert (not false))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$288 b$36$$35$$35$289 b$36$$35$$35$275 b$36$$35$$35$867 b$36$$35$$35$277 b$36$$35$$35$278 b$36$$35$$35$279 b$36$$35$$35$283 b$36$$35$$35$43 b$36$$35$$35$285 b$36$$35$$35$270 b$36$$35$$35$286 b$36$$35$$35$46 b$36$$35$$35$271 b$36$$35$$35$287))
(push 1)
(assert (not (< 0 VV$35$$35$F$35$$35$142)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$869 b$36$$35$$35$456 b$36$$35$$35$43 b$36$$35$$35$46 b$36$$35$$35$446))
(push 1)
(assert (not (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$15)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$870 b$36$$35$$35$168 b$36$$35$$35$169 b$36$$35$$35$170 b$36$$35$$35$43 b$36$$35$$35$171 b$36$$35$$35$172 b$36$$35$$35$173 b$36$$35$$35$46))
(push 1)
(assert (not false))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$400 b$36$$35$$35$871 b$36$$35$$35$393 b$36$$35$$35$394 b$36$$35$$35$43 b$36$$35$$35$395 b$36$$35$$35$396 b$36$$35$$35$46 b$36$$35$$35$399))
(push 1)
(assert (not (not (= 0 VV$35$$35$F$35$$35$79))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$288 b$36$$35$$35$275 b$36$$35$$35$277 b$36$$35$$35$278 b$36$$35$$35$279 b$36$$35$$35$872 b$36$$35$$35$283 b$36$$35$$35$43 b$36$$35$$35$285 b$36$$35$$35$270 b$36$$35$$35$286 b$36$$35$$35$46 b$36$$35$$35$271 b$36$$35$$35$287))
(push 1)
(assert (not (apply$35$$35$1 (as Example.notEmpty Int) VV$35$$35$F$35$$35$143)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(pop 1)
(pop 1)
(exit)
