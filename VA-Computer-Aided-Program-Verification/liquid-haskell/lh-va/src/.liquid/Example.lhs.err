{"o_vars":null,"o_types":[[{"spanInfo":{"startLine":79,"endLine":79,"endCol":8,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.avgMany","[GHC.Types.Int] -> GHC.Types.Int"]]],[{"spanInfo":{"startLine":270,"endLine":270,"endCol":44,"startCol":34,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801170","[{v : [a] | notEmpty v}]"]]],[{"spanInfo":{"startLine":321,"endLine":321,"endCol":38,"startCol":37,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["x","{v : GHC.Types.Int | v == x}"]]],[{"spanInfo":{"startLine":289,"endLine":289,"endCol":38,"startCol":37,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"startLine":160,"endLine":160,"endCol":21,"startCol":19,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["xs","{v : [GHC.Types.Int] | notEmpty v\n                       && v == xs\n                       && len v >= 0}"]]],[{"spanInfo":{"startLine":352,"endLine":352,"endCol":33,"startCol":31,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["ss","{v : [[a]] | v == ss\n             && len v >= 0}"]]],[{"spanInfo":{"startLine":354,"endLine":354,"endCol":46,"startCol":32,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801104","[[a]]"]]],[{"spanInfo":{"startLine":61,"endLine":61,"endCol":27,"startCol":26,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["y","{v : GHC.Types.Int | v == y}"]]],[{"spanInfo":{"startLine":170,"endLine":170,"endCol":9,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.average'","[GHC.Types.Int] -> (GHC.Maybe.Maybe GHC.Types.Int)"]]],[{"spanInfo":{"startLine":321,"endLine":321,"endCol":34,"startCol":33,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["w","{v : GHC.Types.Int | v == w}"]]],[{"spanInfo":{"startLine":284,"endLine":284,"endCol":34,"startCol":22,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.foldl","forall a b . (a -> b -> a) -> a -> [b] -> a"]]],[{"spanInfo":{"startLine":211,"endLine":211,"endCol":5,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.head","forall a . {VV : [a] | notEmpty VV} -> a"]]],[{"spanInfo":{"startLine":193,"endLine":193,"endCol":27,"startCol":25,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["ds_d1SP","{v : [a] | len v >= 0}"]]],[{"spanInfo":{"startLine":351,"endLine":351,"endCol":30,"startCol":28,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["ss","{v : [[a]] | v == ss\n             && len v >= 0}"]]],[{"spanInfo":{"startLine":284,"endLine":284,"endCol":9,"startCol":8,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["f","a -> a -> a"]]],[{"spanInfo":{"startLine":159,"endLine":159,"endCol":20,"startCol":14,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[[null,"GHC.Types.Int"]]],[{"spanInfo":{"startLine":284,"endLine":285,"endCol":34,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801139","{v : [a] | notEmpty v\n           && len v >= 0}"]]],[{"spanInfo":{"startLine":188,"endLine":188,"endCol":18,"startCol":17,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801123","{v : GHC.Prim.Int# | v == 1}"]]],[{"spanInfo":{"startLine":357,"endLine":358,"endCol":47,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801094","{v : [a] | notEmpty v\n           && len v >= 0}"]]],[{"spanInfo":{"startLine":321,"endLine":321,"endCol":39,"startCol":21,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801174","(GHC.Types.Int, GHC.Types.Int)"]]],[{"spanInfo":{"startLine":192,"endLine":192,"endCol":20,"startCol":19,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801127","{v : GHC.Prim.Int# | v == 0}"]]],[{"spanInfo":{"startLine":352,"endLine":352,"endCol":28,"startCol":27,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["s","{v : [a] | v == s\n           && len v >= 0}"]]],[{"spanInfo":{"startLine":255,"endLine":255,"endCol":32,"startCol":18,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801134","x1:a -> {v : GHC.Types.Bool | v <=> x == x1}"]]],[{"spanInfo":{"startLine":171,"endLine":171,"endCol":45,"startCol":17,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801150","x1:GHC.Types.Int -> {v : (GHC.Maybe.Maybe GHC.Types.Int) | isJust v\n                                                           && fromJust v == x1}"]]],[{"spanInfo":{"startLine":322,"endLine":322,"endCol":12,"startCol":5,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["weights","{v : [GHC.Types.Int] | notEmpty wxs <=> notEmpty v}"]]],[{"spanInfo":{"startLine":358,"endLine":358,"endCol":47,"startCol":20,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.die","{VV : forall a . {v : [GHC.Types.Char] | false} -> a | VV == die}"]]],[{"spanInfo":{"startLine":351,"endLine":351,"endCol":22,"startCol":21,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"startLine":329,"endLine":329,"endCol":21,"startCol":18,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801166","a"]]],[{"spanInfo":{"startLine":351,"endLine":351,"endCol":24,"startCol":23,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["s","{v : [a] | v == s\n           && len v >= 0}"]]],[{"spanInfo":{"startLine":284,"endLine":284,"endCol":34,"startCol":32,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["xs","{v : [a] | v == xs\n           && len v >= 0}"]]],[{"spanInfo":{"startLine":352,"endLine":352,"endCol":34,"startCol":20,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["GHC.Types.:","{VV : forall a <p :: a a -> Bool>.\n      x1:a -> x2:[{VV : a<p x1> | true}]<\\x7 VV -> {VV : a<p x7> | true}> -> {v : [a]<\\x7 VV -> {VV : a<p x7> | true}> | notEmpty v\n                                                                                                                         && head v == x1\n                                                                                                                         && len v == 1 + len x2\n                                                                                                                         && tail v == x2} | VV == :}"]]],[{"spanInfo":{"startLine":319,"endLine":319,"endCol":10,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.wtAverage","{VV : [({VV : GHC.Types.Int | 0 < VV}, {VV : GHC.Types.Int | 0 < VV})] | notEmpty VV} -> GHC.Types.Int"]]],[{"spanInfo":{"startLine":319,"endLine":319,"endCol":42,"startCol":17,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.divide","GHC.Types.Int -> {v : GHC.Types.Int | 0 /= v} -> GHC.Types.Int"]]],[{"spanInfo":{"startLine":252,"endLine":252,"endCol":20,"startCol":18,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[[null,"{VV : forall a <p :: a a -> Bool>.\n      {v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | not (notEmpty v)\n                                                  && len v == 0} | VV == []}"]]],[{"spanInfo":{"startLine":63,"endLine":63,"endCol":11,"startCol":10,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["z","GHC.Types.Int"]]],[{"spanInfo":{"startLine":323,"endLine":323,"endCol":26,"startCol":21,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["elems","{v : [GHC.Types.Int] | (notEmpty wxs <=> notEmpty v)\n                       && v == elems\n                       && len v >= 0}"]]],[{"spanInfo":{"startLine":115,"endLine":116,"endCol":22,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801116","{v : [a] | len v >= 0}"]]],[{"spanInfo":{"startLine":72,"endLine":72,"endCol":5,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.size","forall a .\nx1:[a] -> {VV : GHC.Types.Int | (notEmpty x1 => VV > 0)\n                                && VV >= 0}"]]],[{"spanInfo":{"startLine":63,"endLine":63,"endCol":27,"startCol":26,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["y","{v : GHC.Types.Int | v == y}"]]],[{"spanInfo":{"startLine":308,"endLine":308,"endCol":16,"startCol":14,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[[null,"{VV : forall a <p :: a a -> Bool>.\n      {v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | not (notEmpty v)\n                                                  && len v == 0} | VV == []}"]]],[{"spanInfo":{"startLine":325,"endLine":325,"endCol":27,"startCol":24,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801171","x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : GHC.Types.Int | v == x1 + x2}"]]],[{"spanInfo":{"startLine":351,"endLine":351,"endCol":11,"startCol":10,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["y","{VV : a | VV == y}"]]],[{"spanInfo":{"startLine":325,"endLine":325,"endCol":8,"startCol":5,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["sum","{v : [{v : GHC.Types.Int | (notEmpty wxs => v > 0)\n                           && 0 /= v\n                           && v /= 0\n                           && v > 0\n                           && v >= 0\n                           && 0 < v}] | notEmpty v} -> {v : GHC.Types.Int | (notEmpty wxs => v > 0)\n                                                                            && 0 /= v\n                                                                            && v /= 0\n                                                                            && v > 0\n                                                                            && v >= 0\n                                                                            && 0 < v}"]]],[{"spanInfo":{"startLine":351,"endLine":351,"endCol":6,"startCol":5,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"startLine":319,"endLine":319,"endCol":42,"startCol":33,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["totWeight","{v : GHC.Types.Int | (notEmpty wxs => v > 0)\n                     && v == totWeight\n                     && 0 /= v\n                     && v /= 0\n                     && v > 0\n                     && v >= 0\n                     && 0 < v}"]]],[{"spanInfo":{"startLine":329,"endLine":329,"endCol":32,"startCol":30,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["xs","{v : [a] | v == xs\n           && len v >= 0}"]]],[{"spanInfo":{"startLine":299,"endLine":299,"endCol":41,"startCol":11,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.die","{VV : forall a . {v : [GHC.Types.Char] | false} -> a | VV == die}"]]],[{"spanInfo":{"startLine":300,"endLine":300,"endCol":21,"startCol":18,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801143","x1:a -> x2:a -> {VV : a | VV == x1 + x2}"]]],[{"spanInfo":{"startLine":319,"endLine":319,"endCol":32,"startCol":24,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["totElems","{v : GHC.Types.Int | (notEmpty wxs => v > 0)\n                     && v == totElems\n                     && 0 /= v\n                     && v /= 0\n                     && v > 0\n                     && v >= 0\n                     && 0 < v}"]]],[{"spanInfo":{"startLine":50,"endLine":50,"endCol":23,"startCol":22,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["ds_d1TC","{v : GHC.Types.Int | 0 /= v}"]]],[{"spanInfo":{"startLine":61,"endLine":61,"endCol":5,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.avg2","GHC.Types.Int -> GHC.Types.Int -> GHC.Types.Int"]]],[{"spanInfo":{"startLine":322,"endLine":322,"endCol":34,"startCol":33,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["w","{v : GHC.Types.Int | (notEmpty wxs => v > 0)\n                     && v == w\n                     && 0 /= v\n                     && v /= 0\n                     && v > 0\n                     && v >= 0\n                     && 0 < v}"]]],[{"spanInfo":{"startLine":174,"endLine":174,"endCol":10,"startCol":5,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["elems","{v : GHC.Types.Int | (notEmpty xs => v > 0)\n                     && v >= 0}"]]],[{"spanInfo":{"startLine":328,"endLine":328,"endCol":4,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.map","forall a b .\n(a -> b) -> x3:[a] -> {ys : [b] | notEmpty x3 <=> notEmpty ys}"]]],[{"spanInfo":{"startLine":357,"endLine":357,"endCol":26,"startCol":24,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["xs","{v : [a] | v == xs\n           && len v >= 0}"]]],[{"spanInfo":{"startLine":306,"endLine":306,"endCol":18,"startCol":17,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801154","{v : GHC.Integer.Type.Integer | v == 2}"]]],[{"spanInfo":{"startLine":252,"endLine":255,"endCol":32,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801133","{v : [a] | len v >= 0}"]]],[{"spanInfo":{"startLine":50,"endLine":50,"endCol":15,"startCol":14,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["ds_d1TB","GHC.Types.Int"]]],[{"spanInfo":{"startLine":1,"endLine":1,"endCol":1,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.$trModule","GHC.Types.Module"]]],[{"spanInfo":{"startLine":239,"endLine":239,"endCol":31,"startCol":29,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["xs","{v : [a] | v == xs\n           && len v >= 0}"]]],[{"spanInfo":{"startLine":189,"endLine":189,"endCol":18,"startCol":17,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801121","GHC.Types.Int"]]],[{"spanInfo":{"startLine":253,"endLine":253,"endCol":20,"startCol":19,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"startLine":284,"endLine":284,"endCol":7,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.foldl1","forall a . (a -> a -> a) -> {VV : [a] | notEmpty VV} -> a"]]],[{"spanInfo":{"startLine":61,"endLine":61,"endCol":34,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.divide","GHC.Types.Int -> {v : GHC.Types.Int | 0 /= v} -> GHC.Types.Int"]]],[{"spanInfo":{"startLine":329,"endLine":329,"endCol":29,"startCol":28,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["ds_d1Rh","a -> b"]]],[{"spanInfo":{"startLine":192,"endLine":193,"endCol":27,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801126","{v : [a] | len v >= 0}"]]],[{"spanInfo":{"startLine":357,"endLine":357,"endCol":10,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.safeSplit","forall a . {VV : [a] | notEmpty VV} -> (a, [a])"]]],[{"spanInfo":{"startLine":299,"endLine":300,"endCol":24,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801142","{v : [a] | notEmpty v\n           && len v >= 0}"]]],[{"spanInfo":{"startLine":354,"endLine":354,"endCol":46,"startCol":20,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801102","{v : [[a]] | notEmpty v} -> ([a], [[a]])"]]],[{"spanInfo":{"startLine":170,"endLine":170,"endCol":12,"startCol":10,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["xs","[GHC.Types.Int]"]]],[{"spanInfo":{"startLine":348,"endLine":348,"endCol":7,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.risers","forall a .\n(Ord<[]> a) =>\nx2:[a] -> {v : [[a]] | notEmpty x2 => notEmpty v}"]]],[{"spanInfo":{"startLine":63,"endLine":63,"endCol":32,"startCol":21,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801085","GHC.Types.Int"]]],[{"spanInfo":{"startLine":270,"endLine":270,"endCol":17,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.eliminateStutter","forall a . (Eq<[]> a) => [a] -> [a]"]]],[{"spanInfo":{"startLine":321,"endLine":321,"endCol":38,"startCol":33,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["GHC.Num.$fNumInt","{v : (GHC.Num.Num GHC.Types.Int) | v == $fNumInt}"]]],[{"spanInfo":{"startLine":242,"endLine":242,"endCol":5,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.null","forall a . x1:[a] -> {b : GHC.Types.Bool | b <=> not (notEmpty x1)}"]]],[{"spanInfo":{"startLine":61,"endLine":61,"endCol":34,"startCol":33,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801083","GHC.Types.Int"]]],[{"spanInfo":{"startLine":329,"endLine":329,"endCol":21,"startCol":20,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"startLine":175,"endLine":175,"endCol":28,"startCol":17,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801148","{v : GHC.Types.Bool | v <=> notEmpty xs}"]]],[{"spanInfo":{"startLine":175,"endLine":175,"endCol":28,"startCol":26,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["xs","{v : [GHC.Types.Int] | v == xs\n                       && len v >= 0}"]]],[{"spanInfo":{"startLine":255,"endLine":255,"endCol":12,"startCol":10,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["zs","{VV : [a] | len VV >= 0\n            && len VV <= len xs}"]]],[{"spanInfo":{"startLine":72,"endLine":72,"endCol":17,"startCol":16,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801112","{v : GHC.Prim.Int# | v == 0}"]]],[{"spanInfo":{"startLine":49,"endLine":50,"endCol":23,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801078","GHC.Prim.Int#"]]],[{"spanInfo":{"startLine":253,"endLine":253,"endCol":37,"startCol":35,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["zs","{v : [a] | v == zs\n           && len v >= 0\n           && len v <= len xs}"]]],[{"spanInfo":{"startLine":79,"endLine":79,"endCol":32,"startCol":14,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.divide","GHC.Types.Int -> {v : GHC.Types.Int | 0 /= v} -> GHC.Types.Int"]]],[{"spanInfo":{"startLine":288,"endLine":289,"endCol":42,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801137","{v : [a] | len v >= 0}"]]],[{"spanInfo":{"startLine":171,"endLine":171,"endCol":38,"startCol":36,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["xs","{v : [GHC.Types.Int] | v == xs\n                       && len v >= 0}"]]],[{"spanInfo":{"startLine":49,"endLine":49,"endCol":7,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.divide","GHC.Types.Int -> {VV : GHC.Types.Int | 0 /= VV} -> GHC.Types.Int"]]],[{"spanInfo":{"startLine":215,"endLine":215,"endCol":5,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.tail","forall a . {VV : [a] | notEmpty VV} -> [a]"]]],[{"spanInfo":{"startLine":329,"endLine":329,"endCol":32,"startCol":24,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801167","{v : [a] | notEmpty xs <=> notEmpty v}"]]],[{"spanInfo":{"startLine":170,"endLine":175,"endCol":28,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801149","{v : GHC.Types.Bool | v <=> notEmpty xs}"]]],[{"spanInfo":{"startLine":189,"endLine":189,"endCol":29,"startCol":27,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["ds_d1SK","{v : [a] | len v >= 0}"]]],[{"spanInfo":{"startLine":284,"endLine":284,"endCol":31,"startCol":30,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"startLine":157,"endLine":157,"endCol":11,"startCol":9,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["xs","{VV : [GHC.Types.Int] | notEmpty VV}"]]],[{"spanInfo":{"startLine":23,"endLine":23,"endCol":5,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.main","(GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":323,"endLine":323,"endCol":13,"startCol":5,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["totElems","{v : GHC.Types.Int | (notEmpty wxs => v > 0)\n                     && 0 /= v\n                     && v /= 0\n                     && v > 0\n                     && v >= 0\n                     && 0 < v}"]]],[{"spanInfo":{"startLine":188,"endLine":188,"endCol":6,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.size1","forall a .\n{VV : [a] | notEmpty VV} -> {VV : GHC.Types.Int | 0 < VV}"]]],[{"spanInfo":{"startLine":352,"endLine":352,"endCol":22,"startCol":21,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"startLine":325,"endLine":325,"endCol":27,"startCol":17,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[[null,"{v : [{v : GHC.Types.Int | (notEmpty wxs => v > 0)\n                           && 0 /= v\n                           && v /= 0\n                           && v > 0\n                           && v >= 0\n                           && 0 < v}] | notEmpty v} -> {v : GHC.Types.Int | (notEmpty wxs => v > 0)\n                                                                            && 0 /= v\n                                                                            && v /= 0\n                                                                            && v > 0\n                                                                            && v >= 0\n                                                                            && 0 < v}"]]],[{"spanInfo":{"startLine":255,"endLine":255,"endCol":32,"startCol":30,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["xs","{v : [a] | v == xs\n           && len v >= 0}"]]],[{"spanInfo":{"startLine":253,"endLine":253,"endCol":23,"startCol":21,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["ys","{v : [a] | v == ys\n           && len v >= 0\n           && len v <= len xs}"]]],[{"spanInfo":{"startLine":306,"endLine":306,"endCol":25,"startCol":14,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801163","{v : [GHC.Integer.Type.Integer] | notEmpty v}"]]],[{"spanInfo":{"startLine":238,"endLine":238,"endCol":12,"startCol":5,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801129","{v : GHC.Types.Bool | v <=> not (notEmpty xs)}"]]],[{"spanInfo":{"startLine":159,"endLine":159,"endCol":20,"startCol":18,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["xs","{v : [GHC.Types.Int] | notEmpty v\n                       && v == xs\n                       && len v >= 0}"]]],[{"spanInfo":{"startLine":255,"endLine":255,"endCol":8,"startCol":6,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["ys","{VV : [a] | len VV >= 0\n            && len VV <= len xs}"]]],[{"spanInfo":{"startLine":73,"endLine":73,"endCol":27,"startCol":16,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["GHC.Num.$fNumInt","{v : (GHC.Num.Num GHC.Types.Int) | v == $fNumInt}"]]],[{"spanInfo":{"startLine":79,"endLine":79,"endCol":32,"startCol":27,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["elems","{v : GHC.Types.Int | (notEmpty xs => v > 0)\n                     && v == elems\n                     && v >= 0}"]]],[{"spanInfo":{"startLine":289,"endLine":289,"endCol":36,"startCol":33,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["acc","{VV : a | VV == acc}"]]],[{"spanInfo":{"startLine":215,"endLine":216,"endCol":54,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801091","{v : [a] | notEmpty v\n           && len v >= 0}"]]],[{"spanInfo":{"startLine":211,"endLine":211,"endCol":16,"startCol":15,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"startLine":357,"endLine":357,"endCol":27,"startCol":20,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["GHC.Tuple.(,)","{VV : forall a b <p2 :: a b -> Bool>.\n      x1:a -> x2:{VV : b<p2 x1> | true} -> {v : (a, b)<\\x5 VV -> {VV : b<p2 x5> | true}> | fst v == x1\n                                                                                           && snd v == x2\n                                                                                           && x_Tuple21 v == x1\n                                                                                           && x_Tuple22 v == x2} | VV == (,)}"]]],[{"spanInfo":{"startLine":63,"endLine":63,"endCol":27,"startCol":22,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801084","{v : GHC.Types.Int | v == x + y}"]]],[{"spanInfo":{"startLine":321,"endLine":321,"endCol":43,"startCol":40,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["wxs","{v : [({v : GHC.Types.Int | 0 < v}, {v : GHC.Types.Int | 0 < v})] | notEmpty v\n                                                                    && v == wxs\n                                                                    && len v >= 0}"]]],[{"spanInfo":{"startLine":242,"endLine":243,"endCol":23,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801128","{v : [a] | len v >= 0}"]]],[{"spanInfo":{"startLine":253,"endLine":253,"endCol":37,"startCol":18,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["GHC.Types.:","{VV : forall a <p :: a a -> Bool>.\n      x1:a -> x2:[{VV : a<p x1> | true}]<\\x7 VV -> {VV : a<p x7> | true}> -> {v : [a]<\\x7 VV -> {VV : a<p x7> | true}> | notEmpty v\n                                                                                                                         && head v == x1\n                                                                                                                         && len v == 1 + len x2\n                                                                                                                         && tail v == x2} | VV == :}"]]],[{"spanInfo":{"startLine":352,"endLine":352,"endCol":23,"startCol":20,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801108","{v : [a] | notEmpty v\n           && head v == x}"]]],[{"spanInfo":{"startLine":324,"endLine":324,"endCol":28,"startCol":17,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[[null,"{v : GHC.Types.Int | (notEmpty wxs => v > 0)\n                     && 0 /= v\n                     && v /= 0\n                     && v > 0\n                     && v >= 0\n                     && 0 < v}"]]],[{"spanInfo":{"startLine":239,"endLine":239,"endCol":31,"startCol":17,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801131","x1:a -> {v : (GHC.Maybe.Maybe a) | isJust v\n                                   && fromJust v == x1}"]]],[{"spanInfo":{"startLine":329,"endLine":329,"endCol":32,"startCol":18,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["GHC.Types.:","{VV : forall a <p :: a a -> Bool>.\n      x1:a -> x2:[{VV : a<p x1> | true}]<\\x7 VV -> {VV : a<p x7> | true}> -> {v : [a]<\\x7 VV -> {VV : a<p x7> | true}> | notEmpty v\n                                                                                                                         && head v == x1\n                                                                                                                         && len v == 1 + len x2\n                                                                                                                         && tail v == x2} | VV == :}"]]],[{"spanInfo":{"startLine":193,"endLine":193,"endCol":27,"startCol":19,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.size1","forall a .\n{VV : [a] | notEmpty VV} -> {VV : GHC.Types.Int | 0 < VV}"]]],[{"spanInfo":{"startLine":354,"endLine":354,"endCol":29,"startCol":20,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[[null,"{VV : forall a .\n      {v : [a] | notEmpty v} -> (a, [a]) | VV == safeSplit}"]]],[{"spanInfo":{"startLine":157,"endLine":157,"endCol":32,"startCol":14,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.divide","GHC.Types.Int -> {v : GHC.Types.Int | 0 /= v} -> GHC.Types.Int"]]],[{"spanInfo":{"startLine":255,"endLine":255,"endCol":29,"startCol":23,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[[null,"GHC.Types.Bool"]]],[{"spanInfo":{"startLine":82,"endLine":82,"endCol":10,"startCol":5,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["elems","{v : GHC.Types.Int | (notEmpty xs => v > 0)\n                     && v >= 0}"]]],[{"spanInfo":{"startLine":237,"endLine":237,"endCol":12,"startCol":10,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["xs","[a]"]]],[{"spanInfo":{"startLine":299,"endLine":299,"endCol":41,"startCol":15,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801145","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":289,"endLine":289,"endCol":42,"startCol":40,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["xs","{v : [a] | v == xs\n           && len v >= 0}"]]],[{"spanInfo":{"startLine":328,"endLine":329,"endCol":32,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801165","{v : [a] | len v >= 0}"]]],[{"spanInfo":{"startLine":306,"endLine":306,"endCol":6,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.sumOk","GHC.Integer.Type.Integer"]]],[{"spanInfo":{"startLine":174,"endLine":174,"endCol":24,"startCol":22,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["xs","{v : [GHC.Types.Int] | v == xs\n                       && len v >= 0}"]]],[{"spanInfo":{"startLine":238,"endLine":238,"endCol":12,"startCol":10,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["xs","{v : [a] | v == xs\n           && len v >= 0}"]]],[{"spanInfo":{"startLine":61,"endLine":61,"endCol":7,"startCol":6,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["x","GHC.Types.Int"]]],[{"spanInfo":{"startLine":270,"endLine":270,"endCol":31,"startCol":27,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[[null,"{VV : forall a . {v : [a] | notEmpty v} -> a | VV == head}"]]],[{"spanInfo":{"startLine":352,"endLine":352,"endCol":34,"startCol":26,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801109","{v : [[a]] | notEmpty v\n             && head v == s\n             && len v == 1 + len ss\n             && tail v == ss}"]]],[{"spanInfo":{"startLine":299,"endLine":299,"endCol":4,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.sum","forall a . (Num<[]> a) => {VV : [a] | notEmpty VV} -> a"]]],[{"spanInfo":{"startLine":61,"endLine":61,"endCol":23,"startCol":22,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["x","{v : GHC.Types.Int | v == x}"]]],[{"spanInfo":{"startLine":116,"endLine":116,"endCol":22,"startCol":18,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["GHC.Types.True","{v : GHC.Types.Bool | v\n                      && v == True}"]]],[{"spanInfo":{"startLine":157,"endLine":157,"endCol":32,"startCol":27,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["elems","{v : GHC.Types.Int | (notEmpty xs => v > 0)\n                     && v == elems\n                     && v >= 0}"]]],[{"spanInfo":{"startLine":157,"endLine":157,"endCol":26,"startCol":21,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["total","{v : GHC.Types.Int | v == total}"]]],[{"spanInfo":{"startLine":61,"endLine":61,"endCol":9,"startCol":8,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["y","GHC.Types.Int"]]],[{"spanInfo":{"startLine":23,"endLine":23,"endCol":24,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["System.IO.putStrLn","[GHC.Types.Char] -> (GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":349,"endLine":349,"endCol":23,"startCol":22,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"startLine":319,"endLine":319,"endCol":14,"startCol":11,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["wxs","{VV : [({VV : GHC.Types.Int | 0 < VV}, {VV : GHC.Types.Int | 0 < VV})] | notEmpty VV}"]]],[{"spanInfo":{"startLine":23,"endLine":23,"endCol":24,"startCol":17,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801055","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":270,"endLine":270,"endCol":20,"startCol":18,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["xs","[a]"]]],[{"spanInfo":{"startLine":270,"endLine":270,"endCol":44,"startCol":42,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["xs","{v : [a] | v == xs\n           && len v >= 0}"]]],[{"spanInfo":{"startLine":306,"endLine":306,"endCol":25,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["GHC.Num.$fNumInteger","{v : (GHC.Num.Num GHC.Integer.Type.Integer) | v == $fNumInteger}"]]],[{"spanInfo":{"startLine":73,"endLine":73,"endCol":27,"startCol":25,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["xs","{v : [a] | v == xs\n           && len v >= 0}"]]],[{"spanInfo":{"startLine":49,"endLine":49,"endCol":34,"startCol":14,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.die","{VV : forall a . {v : [GHC.Types.Char] | false} -> a | VV == die}"]]],[{"spanInfo":{"startLine":82,"endLine":82,"endCol":21,"startCol":14,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.size","forall a .\nx1:[a] -> {VV : GHC.Types.Int | (notEmpty x1 => VV > 0)\n                                && VV >= 0}"]]],[{"spanInfo":{"startLine":354,"endLine":354,"endCol":46,"startCol":39,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801103","{v : [a] | notEmpty v\n           && head v == y\n           && len v == 1 + len etc\n           && tail v == etc}"]]],[{"spanInfo":{"startLine":171,"endLine":171,"endCol":39,"startCol":31,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801151","GHC.Types.Int"]]],[{"spanInfo":{"startLine":300,"endLine":300,"endCol":24,"startCol":11,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.foldl1","{VV : forall a .\n      (a -> a -> a) -> {v : [a] | notEmpty v} -> a | VV == foldl1}"]]],[{"spanInfo":{"startLine":192,"endLine":192,"endCol":6,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.size2","forall a . x1:[a] -> {v : GHC.Types.Int | notEmpty x1 => v > 0}"]]],[{"spanInfo":{"startLine":284,"endLine":284,"endCol":29,"startCol":28,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["f","a -> a -> a"]]],[{"spanInfo":{"startLine":288,"endLine":288,"endCol":6,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.foldl","forall a b . (a -> b -> a) -> a -> [b] -> a"]]],[{"spanInfo":{"startLine":237,"endLine":239,"endCol":31,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801130","{v : GHC.Types.Bool | v <=> not (notEmpty xs)}"]]],[{"spanInfo":{"startLine":324,"endLine":324,"endCol":14,"startCol":5,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["totWeight","{v : GHC.Types.Int | (notEmpty wxs => v > 0)\n                     && 0 /= v\n                     && v /= 0\n                     && v > 0\n                     && v >= 0\n                     && 0 < v}"]]],[{"spanInfo":{"startLine":212,"endLine":212,"endCol":56,"startCol":19,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801090","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":285,"endLine":285,"endCol":34,"startCol":26,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801141","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":289,"endLine":289,"endCol":42,"startCol":22,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.foldl","forall a b . (a -> b -> a) -> a -> [b] -> a"]]],[{"spanInfo":{"startLine":81,"endLine":81,"endCol":21,"startCol":19,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["xs","{v : [GHC.Types.Int] | v == xs\n                       && len v >= 0}"]]],[{"spanInfo":{"startLine":270,"endLine":270,"endCol":44,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["GHC.Base.$","{VV : forall a b c . (c -> c) -> c -> c | VV == $}"]]],[{"spanInfo":{"startLine":351,"endLine":351,"endCol":30,"startCol":20,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["GHC.Types.:","{VV : forall a <p :: a a -> Bool>.\n      x1:a -> x2:[{VV : a<p x1> | true}]<\\x7 VV -> {VV : a<p x7> | true}> -> {v : [a]<\\x7 VV -> {VV : a<p x7> | true}> | notEmpty v\n                                                                                                                         && head v == x1\n                                                                                                                         && len v == 1 + len x2\n                                                                                                                         && tail v == x2} | VV == :}"]]],[{"spanInfo":{"startLine":160,"endLine":160,"endCol":10,"startCol":5,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["elems","{v : GHC.Types.Int | (notEmpty xs => v > 0)\n                     && v >= 0}"]]],[{"spanInfo":{"startLine":321,"endLine":321,"endCol":43,"startCol":17,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801175","(GHC.Types.Int, GHC.Types.Int) -> GHC.Types.Int"]]],[{"spanInfo":{"startLine":171,"endLine":171,"endCol":21,"startCol":17,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[[null,"{VV : forall a .\n      x1:a -> {v : (GHC.Maybe.Maybe a) | isJust v\n                                         && fromJust v == x1} | VV == Just}"]]],[{"spanInfo":{"startLine":171,"endLine":171,"endCol":45,"startCol":24,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801152","GHC.Types.Int"]]],[{"spanInfo":{"startLine":322,"endLine":322,"endCol":39,"startCol":21,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801172","({v : GHC.Types.Int | (notEmpty wxs => v > 0)\n                      && 0 /= v\n                      && v /= 0\n                      && v > 0\n                      && v >= 0\n                      && 0 < v}, GHC.Types.Int)"]]],[{"spanInfo":{"startLine":348,"endLine":348,"endCol":22,"startCol":20,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[[null,"{VV : forall a <p :: a a -> Bool>.\n      {v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | not (notEmpty v)\n                                                  && len v == 0} | VV == []}"]]],[{"spanInfo":{"startLine":63,"endLine":63,"endCol":34,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.divide","GHC.Types.Int -> {v : GHC.Types.Int | 0 /= v} -> GHC.Types.Int"]]],[{"spanInfo":{"startLine":63,"endLine":63,"endCol":7,"startCol":6,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["x","GHC.Types.Int"]]],[{"spanInfo":{"startLine":255,"endLine":255,"endCol":25,"startCol":24,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"startLine":63,"endLine":63,"endCol":9,"startCol":8,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["y","GHC.Types.Int"]]],[{"spanInfo":{"startLine":349,"endLine":349,"endCol":24,"startCol":21,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801100","{v : [a] | notEmpty v\n           && head v == x}"]]],[{"spanInfo":{"startLine":115,"endLine":115,"endCol":23,"startCol":18,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["GHC.Types.False","{v : GHC.Types.Bool | not v\n                      && v == False}"]]],[{"spanInfo":{"startLine":63,"endLine":63,"endCol":23,"startCol":22,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["x","{v : GHC.Types.Int | v == x}"]]],[{"spanInfo":{"startLine":171,"endLine":171,"endCol":45,"startCol":40,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["elems","{v : GHC.Types.Int | (notEmpty xs => v > 0)\n                     && v == elems\n                     && v >= 0}"]]],[{"spanInfo":{"startLine":300,"endLine":300,"endCol":24,"startCol":22,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["ds_d1UM","{v : [a] | notEmpty v\n           && len v >= 0}"]]],[{"spanInfo":{"startLine":63,"endLine":63,"endCol":31,"startCol":30,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["z","{v : GHC.Types.Int | v == z}"]]],[{"spanInfo":{"startLine":322,"endLine":322,"endCol":43,"startCol":17,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801173","({VV : GHC.Types.Int | (notEmpty wxs => VV > 0)\n                       && 0 /= VV\n                       && VV /= 0\n                       && VV > 0\n                       && VV >= 0\n                       && 0 < VV}, GHC.Types.Int) -> GHC.Types.Int"]]],[{"spanInfo":{"startLine":243,"endLine":243,"endCol":23,"startCol":18,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["GHC.Types.False","{v : GHC.Types.Bool | not v\n                      && v == False}"]]],[{"spanInfo":{"startLine":73,"endLine":73,"endCol":27,"startCol":20,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801115","{v : GHC.Types.Int | (notEmpty xs => v > 0)\n                     && v >= 0}"]]],[{"spanInfo":{"startLine":63,"endLine":63,"endCol":34,"startCol":33,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801087","GHC.Types.Int"]]],[{"spanInfo":{"startLine":189,"endLine":189,"endCol":29,"startCol":17,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["GHC.Num.$fNumInt","{v : (GHC.Num.Num GHC.Types.Int) | v == $fNumInt}"]]],[{"spanInfo":{"startLine":288,"endLine":288,"endCol":12,"startCol":9,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["acc","a"]]],[{"spanInfo":{"startLine":32,"endLine":32,"endCol":8,"startCol":5,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["msg","{VV : [GHC.Types.Char] | false}"]]],[{"spanInfo":{"startLine":324,"endLine":324,"endCol":28,"startCol":21,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["weights","{v : [GHC.Types.Int] | (notEmpty wxs <=> notEmpty v)\n                       && v == weights\n                       && len v >= 0}"]]],[{"spanInfo":{"startLine":172,"endLine":172,"endCol":24,"startCol":17,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[[null,"{VV : forall a .\n      {v : (GHC.Maybe.Maybe a) | not (isJust v)} | VV == Nothing}"]]],[{"spanInfo":{"startLine":32,"endLine":32,"endCol":20,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["$dIP_a1E9","{v : (GHC.Classes.IP [GHC.Types.Char] GHC.Stack.Types.CallStack) | v == $dIP_a1E9}"]]],[{"spanInfo":{"startLine":32,"endLine":32,"endCol":4,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.die","forall a . {v : [GHC.Types.Char] | false} -> a"]]],[{"spanInfo":{"startLine":308,"endLine":308,"endCol":16,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801164","{v : [GHC.Integer.Type.Integer] | not (notEmpty v)\n                                  && len v == 0}"]]],[{"spanInfo":{"startLine":79,"endLine":79,"endCol":11,"startCol":9,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["xs","[GHC.Types.Int]"]]],[{"spanInfo":{"startLine":215,"endLine":215,"endCol":17,"startCol":15,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["xs","{v : [a] | v == xs\n           && len v >= 0}"]]],[{"spanInfo":{"startLine":216,"endLine":216,"endCol":54,"startCol":19,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801093","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":32,"endLine":32,"endCol":20,"startCol":17,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["msg","{v : [GHC.Types.Char] | false}"]]],[{"spanInfo":{"startLine":50,"endLine":50,"endCol":23,"startCol":14,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["GHC.Real.$fIntegralInt","{v : (GHC.Real.Integral GHC.Types.Int) | v == $fIntegralInt}"]]],[{"spanInfo":{"startLine":160,"endLine":160,"endCol":21,"startCol":14,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.size","forall a .\nx1:[a] -> {VV : GHC.Types.Int | (notEmpty x1 => VV > 0)\n                                && VV >= 0}"]]],[{"spanInfo":{"startLine":253,"endLine":253,"endCol":24,"startCol":18,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801135","{v : [a] | notEmpty v\n           && head v == x\n           && len v == 1 + len ys\n           && tail v == ys}"]]],[{"spanInfo":{"startLine":306,"endLine":306,"endCol":22,"startCol":21,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801156","{v : GHC.Integer.Type.Integer | v == 4}"]]],[{"spanInfo":{"startLine":252,"endLine":252,"endCol":8,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.groupEq","forall a . (Eq<[]> a) => [a] -> [{VV : [a] | notEmpty VV}]"]]],[{"spanInfo":{"startLine":73,"endLine":73,"endCol":17,"startCol":16,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801114","GHC.Types.Int"]]],[{"spanInfo":{"startLine":239,"endLine":239,"endCol":31,"startCol":24,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801132","a"]]],[{"spanInfo":{"startLine":211,"endLine":212,"endCol":56,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801088","{v : [a] | notEmpty v\n           && len v >= 0}"]]],[{"spanInfo":{"startLine":270,"endLine":270,"endCol":31,"startCol":23,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801169","x1:[[a]] -> {v : [a] | notEmpty x1 <=> notEmpty v}"]]],[{"spanInfo":{"startLine":308,"endLine":308,"endCol":7,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.sumBad","GHC.Integer.Type.Integer"]]],[{"spanInfo":{"startLine":289,"endLine":289,"endCol":39,"startCol":30,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801138","a"]]],[{"spanInfo":{"startLine":289,"endLine":289,"endCol":29,"startCol":28,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["ds_d1Rt","a -> b -> a"]]],[{"spanInfo":{"startLine":81,"endLine":81,"endCol":10,"startCol":5,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["total","GHC.Types.Int"]]],[{"spanInfo":{"startLine":72,"endLine":73,"endCol":27,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801111","{v : [a] | len v >= 0}"]]],[{"spanInfo":{"startLine":357,"endLine":357,"endCol":22,"startCol":21,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"startLine":349,"endLine":349,"endCol":25,"startCol":20,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801101","{v : [[a]] | not (notEmpty v)\n             && len v == 0}"]]],[{"spanInfo":{"startLine":321,"endLine":321,"endCol":10,"startCol":5,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["elems","{v : [GHC.Types.Int] | notEmpty wxs <=> notEmpty v}"]]],[{"spanInfo":{"startLine":322,"endLine":322,"endCol":43,"startCol":40,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["wxs","{v : [({v : GHC.Types.Int | 0 < v}, {v : GHC.Types.Int | 0 < v})] | notEmpty v\n                                                                    && v == wxs\n                                                                    && len v >= 0}"]]],[{"spanInfo":{"startLine":174,"endLine":174,"endCol":24,"startCol":17,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.size","forall a .\nx1:[a] -> {VV : GHC.Types.Int | (notEmpty x1 => VV > 0)\n                                && VV >= 0}"]]],[{"spanInfo":{"startLine":212,"endLine":212,"endCol":56,"startCol":15,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.die","{VV : forall a . {v : [GHC.Types.Char] | false} -> a | VV == die}"]]],[{"spanInfo":{"startLine":239,"endLine":239,"endCol":21,"startCol":17,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[[null,"{VV : forall a .\n      x1:a -> {v : (GHC.Maybe.Maybe a) | isJust v\n                                         && fromJust v == x1} | VV == Just}"]]],[{"spanInfo":{"startLine":63,"endLine":63,"endCol":5,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.avg3","GHC.Types.Int -> GHC.Types.Int -> GHC.Types.Int -> GHC.Types.Int"]]],[{"spanInfo":{"startLine":238,"endLine":238,"endCol":24,"startCol":17,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[[null,"{VV : forall a .\n      {v : (GHC.Maybe.Maybe a) | not (isJust v)} | VV == Nothing}"]]],[{"spanInfo":{"startLine":285,"endLine":285,"endCol":34,"startCol":22,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.die","{VV : forall a . {v : [GHC.Types.Char] | false} -> a | VV == die}"]]],[{"spanInfo":{"startLine":115,"endLine":115,"endCol":9,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.notEmpty","forall a . x1:[a] -> {VV : GHC.Types.Bool | VV <=> notEmpty x1}"]]],[{"spanInfo":{"startLine":354,"endLine":354,"endCol":45,"startCol":42,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["etc","{v : [a] | v == etc\n           && len v >= 0}"]]],[{"spanInfo":{"startLine":348,"endLine":354,"endCol":46,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801106","{v : GHC.Types.Bool | v <=> x <= y}"]]],[{"spanInfo":{"startLine":358,"endLine":358,"endCol":47,"startCol":24,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801096","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":49,"endLine":49,"endCol":34,"startCol":18,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801080","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":253,"endLine":253,"endCol":37,"startCol":27,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801136","[{v : [a] | notEmpty v}]"]]],[{"spanInfo":{"startLine":157,"endLine":157,"endCol":8,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.average","{VV : [GHC.Types.Int] | notEmpty VV} -> GHC.Types.Int"]]],[{"spanInfo":{"startLine":159,"endLine":159,"endCol":10,"startCol":5,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["total","GHC.Types.Int"]]],[{"spanInfo":{"startLine":79,"endLine":79,"endCol":26,"startCol":21,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["total","{v : GHC.Types.Int | v == total}"]]],[{"spanInfo":{"startLine":328,"endLine":328,"endCol":20,"startCol":18,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[[null,"{VV : forall a <p :: a a -> Bool>.\n      {v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | not (notEmpty v)\n                                                  && len v == 0} | VV == []}"]]],[{"spanInfo":{"startLine":81,"endLine":81,"endCol":21,"startCol":14,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[[null,"GHC.Types.Int"]]],[{"spanInfo":{"startLine":242,"endLine":242,"endCol":22,"startCol":18,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["GHC.Types.True","{v : GHC.Types.Bool | v\n                      && v == True}"]]],[{"spanInfo":{"startLine":351,"endLine":351,"endCol":25,"startCol":20,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801110","{v : [a] | notEmpty v\n           && head v == x\n           && len v == 1 + len s\n           && tail v == s}"]]],[{"spanInfo":{"startLine":188,"endLine":189,"endCol":29,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801119","{v : [a] | len v >= 0}"]]],[{"spanInfo":{"startLine":323,"endLine":323,"endCol":26,"startCol":17,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[[null,"{v : GHC.Types.Int | (notEmpty wxs => v > 0)\n                     && 0 /= v\n                     && v /= 0\n                     && v > 0\n                     && v >= 0\n                     && 0 < v}"]]],[{"spanInfo":{"startLine":354,"endLine":354,"endCol":13,"startCol":11,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["ss","{VV : [[a]] | len VV >= 0}"]]],[{"spanInfo":{"startLine":61,"endLine":61,"endCol":28,"startCol":21,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801081","{v : GHC.Types.Int | v == x + y}"]]],[{"spanInfo":{"startLine":82,"endLine":82,"endCol":21,"startCol":19,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["xs","{v : [GHC.Types.Int] | v == xs\n                       && len v >= 0}"]]],[{"spanInfo":{"startLine":354,"endLine":354,"endCol":9,"startCol":8,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["s","{VV : [a] | len VV >= 0}"]]],[{"spanInfo":{"startLine":189,"endLine":189,"endCol":29,"startCol":21,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801122","{v : GHC.Types.Int | 0 < v}"]]],[{"spanInfo":{"startLine":306,"endLine":306,"endCol":16,"startCol":15,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801153","{v : GHC.Integer.Type.Integer | v == 1}"]]],[{"spanInfo":{"startLine":306,"endLine":306,"endCol":20,"startCol":19,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801155","{v : GHC.Integer.Type.Integer | v == 3}"]]],[{"spanInfo":{"startLine":237,"endLine":237,"endCol":9,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.safeHead","forall a . [a] -> (GHC.Maybe.Maybe a)"]]],[{"spanInfo":{"startLine":306,"endLine":306,"endCol":24,"startCol":23,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801157","{v : GHC.Integer.Type.Integer | v == 5}"]]],[{"spanInfo":{"startLine":216,"endLine":216,"endCol":54,"startCol":15,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.die","{VV : forall a . {v : [GHC.Types.Char] | false} -> a | VV == die}"]]],[{"spanInfo":{"startLine":351,"endLine":351,"endCol":11,"startCol":5,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801105","{v : GHC.Types.Bool | v <=> x <= y}"]]],[{"spanInfo":{"startLine":354,"endLine":354,"endCol":41,"startCol":40,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["y","{VV : a | VV == y}"]]],[{"spanInfo":{"startLine":288,"endLine":288,"endCol":25,"startCol":22,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["acc","{VV : a | VV == acc}"]]]],"o_templs":[[{"spanInfo":{"startLine":79,"endLine":79,"endCol":8,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.avgMany","lq_tmp$x##3821:[GHC.Types.Int] -> GHC.Types.Int"]]],[{"spanInfo":{"startLine":270,"endLine":270,"endCol":44,"startCol":34,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801170","[{lq_tmp$x##4508 : [{lq_tmp$x##4526 : a | $k_##4525[VV##4524:=lq_tmp$x##4526][lq_tmp$x##4518:=fix$36$$36$dEq_a1FZ][lq_tmp$x##4519:=xs##a1q8]}] | Example.notEmpty lq_tmp$x##4508}]"]]],[{"spanInfo":{"startLine":321,"endLine":321,"endCol":38,"startCol":37,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["x","{lq_tmp$x##4870 : GHC.Types.Int | lq_tmp$x##4870 == x##a1qp\n                                  && $k_##4808[VV##4807:=lq_tmp$x##4870][VV##4812:=lq_anf$##7205759403792801174##d1Ya][lq_tmp$x##4818:=lq_tmp$x##4870][lq_tmp$x##4821:=lq_anf$##7205759403792801174##d1Ya][lq_tmp$x##4825:=lq_tmp$x##4870][lq_tmp$x##4828:=lq_anf$##7205759403792801174##d1Ya][lq_tmp$x##4839:=w##a1qo]\n                                  && $k_##4811[VV##4810:=lq_tmp$x##4870][VV##4812:=lq_anf$##7205759403792801174##d1Ya][lq_tmp$x##4809:=w##a1qo][lq_tmp$x##4819:=w##a1qo][lq_tmp$x##4820:=lq_tmp$x##4870][lq_tmp$x##4821:=lq_anf$##7205759403792801174##d1Ya][lq_tmp$x##4822:=w##a1qo][lq_tmp$x##4825:=lq_tmp$x##4870][lq_tmp$x##4826:=w##a1qo][lq_tmp$x##4827:=lq_tmp$x##4870][lq_tmp$x##4828:=lq_anf$##7205759403792801174##d1Ya][lq_tmp$x##4829:=w##a1qo][lq_tmp$x##4839:=w##a1qo]}"]]],[{"spanInfo":{"startLine":289,"endLine":289,"endCol":38,"startCol":37,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["x","{lq_tmp$x##3491 : b | lq_tmp$x##3491 == x##a1qf}"]]],[{"spanInfo":{"startLine":160,"endLine":160,"endCol":21,"startCol":19,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["xs","{lq_tmp$x##3893 : [GHC.Types.Int] | Example.notEmpty lq_tmp$x##3893\n                                    && lq_tmp$x##3893 == xs##a1ok\n                                    && len lq_tmp$x##3893 >= 0}"]]],[{"spanInfo":{"startLine":352,"endLine":352,"endCol":33,"startCol":31,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["ss","{lq_tmp$x##2264 : [{lq_tmp$x##2258 : [{lq_tmp$x##2255 : a | $k_##2056[VV##2055:=lq_tmp$x##2255][VV##2060:=lq_tmp$x##2258][VV##2070:=lq_tmp$x##2264]}]<\\lq_tmp$x##2265 VV -> {lq_tmp$x##2257 : a | $k_##2059[VV##2058:=lq_tmp$x##2257][VV##2060:=lq_tmp$x##2258][VV##2070:=lq_tmp$x##2264][lq_tmp$x##2057:=lq_tmp$x##2265][lq_tmp$x##2256:=lq_tmp$x##2265]}> | $k_##2061[VV##2060:=lq_tmp$x##2258][VV##2070:=lq_tmp$x##2264]}]<\\lq_tmp$x##2267 VV -> {lq_tmp$x##2263 : [{lq_tmp$x##2260 : a | $k_##2064[VV##2063:=lq_tmp$x##2260][VV##2068:=lq_tmp$x##2263][VV##2070:=lq_tmp$x##2264][lq_tmp$x##2062:=lq_tmp$x##2267][lq_tmp$x##2259:=lq_tmp$x##2267]}]<\\lq_tmp$x##2266 VV -> {lq_tmp$x##2262 : a | $k_##2067[VV##2066:=lq_tmp$x##2262][VV##2068:=lq_tmp$x##2263][VV##2070:=lq_tmp$x##2264][lq_tmp$x##2062:=lq_tmp$x##2267][lq_tmp$x##2065:=lq_tmp$x##2266][lq_tmp$x##2259:=lq_tmp$x##2267][lq_tmp$x##2261:=lq_tmp$x##2266]}> | $k_##2069[VV##2068:=lq_tmp$x##2263][VV##2070:=lq_tmp$x##2264][lq_tmp$x##2062:=lq_tmp$x##2267][lq_tmp$x##2259:=lq_tmp$x##2267]}> | lq_tmp$x##2264 == ss##a1Lz\nlen lq_tmp$x##2264 >= 0\nk_##2071[VV##2070:=lq_tmp$x##2264]}"]]],[{"spanInfo":{"startLine":354,"endLine":354,"endCol":46,"startCol":32,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801104","{lq_tmp$x##1786 : [[{lq_tmp$x##1798 : a | $k_##1797[VV##1796:=lq_tmp$x##1798][lq_tmp$x##1790:=fix$36$$36$dOrd_a1Lp][lq_tmp$x##1791:=lq_anf$##7205759403792801103##d1X1]}]] | Example.notEmpty lq_anf$##7205759403792801103##d1X1 => Example.notEmpty lq_tmp$x##1786}"]]],[{"spanInfo":{"startLine":61,"endLine":61,"endCol":27,"startCol":26,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["y","{lq_tmp$x##989 : GHC.Types.Int | lq_tmp$x##989 == y##a1nc}"]]],[{"spanInfo":{"startLine":170,"endLine":170,"endCol":9,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.average'","lq_tmp$x##3929:[GHC.Types.Int] -> (GHC.Maybe.Maybe GHC.Types.Int)"]]],[{"spanInfo":{"startLine":321,"endLine":321,"endCol":34,"startCol":33,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["w","{lq_tmp$x##4869 : GHC.Types.Int | lq_tmp$x##4869 == w##a1qo\n                                  && $k_##4806[VV##4805:=lq_tmp$x##4869][VV##4812:=lq_anf$##7205759403792801174##d1Ya][lq_tmp$x##4817:=lq_tmp$x##4869][lq_tmp$x##4821:=lq_anf$##7205759403792801174##d1Ya][lq_tmp$x##4824:=lq_tmp$x##4869][lq_tmp$x##4828:=lq_anf$##7205759403792801174##d1Ya]}"]]],[{"spanInfo":{"startLine":284,"endLine":284,"endCol":34,"startCol":22,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.foldl","forall a b .\nlq_tmp$x##3416:(lq_tmp$x##3413:a -> lq_tmp$x##3414:b -> a) -> lq_tmp$x##3417:a -> lq_tmp$x##3418:[b] -> a"]]],[{"spanInfo":{"startLine":211,"endLine":211,"endCol":5,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.head","forall p .\nlq_tmp$x##1072:{VV##0 : [p] | Example.notEmpty VV##0} -> p"]]],[{"spanInfo":{"startLine":193,"endLine":193,"endCol":27,"startCol":25,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["ds_d1SP","{lq_tmp$x##2857 : [a] | lq_tmp$x##2857 == ds_d1SP\n                        && len lq_tmp$x##2857 >= 0}"]]],[{"spanInfo":{"startLine":351,"endLine":351,"endCol":30,"startCol":28,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["ss","{lq_tmp$x##2408 : [{lq_tmp$x##2402 : [{lq_tmp$x##2399 : a | $k_##2056[VV##2055:=lq_tmp$x##2399][VV##2060:=lq_tmp$x##2402][VV##2070:=lq_tmp$x##2408]}]<\\lq_tmp$x##2409 VV -> {lq_tmp$x##2401 : a | $k_##2059[VV##2058:=lq_tmp$x##2401][VV##2060:=lq_tmp$x##2402][VV##2070:=lq_tmp$x##2408][lq_tmp$x##2057:=lq_tmp$x##2409][lq_tmp$x##2400:=lq_tmp$x##2409]}> | $k_##2061[VV##2060:=lq_tmp$x##2402][VV##2070:=lq_tmp$x##2408]}]<\\lq_tmp$x##2411 VV -> {lq_tmp$x##2407 : [{lq_tmp$x##2404 : a | $k_##2064[VV##2063:=lq_tmp$x##2404][VV##2068:=lq_tmp$x##2407][VV##2070:=lq_tmp$x##2408][lq_tmp$x##2062:=lq_tmp$x##2411][lq_tmp$x##2403:=lq_tmp$x##2411]}]<\\lq_tmp$x##2410 VV -> {lq_tmp$x##2406 : a | $k_##2067[VV##2066:=lq_tmp$x##2406][VV##2068:=lq_tmp$x##2407][VV##2070:=lq_tmp$x##2408][lq_tmp$x##2062:=lq_tmp$x##2411][lq_tmp$x##2065:=lq_tmp$x##2410][lq_tmp$x##2403:=lq_tmp$x##2411][lq_tmp$x##2405:=lq_tmp$x##2410]}> | $k_##2069[VV##2068:=lq_tmp$x##2407][VV##2070:=lq_tmp$x##2408][lq_tmp$x##2062:=lq_tmp$x##2411][lq_tmp$x##2403:=lq_tmp$x##2411]}> | lq_tmp$x##2408 == ss##a1Lz\nlen lq_tmp$x##2408 >= 0\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 && $k_##2071[VV##2070:=lq_tmp$x##2408]}"]]],[{"spanInfo":{"startLine":284,"endLine":284,"endCol":9,"startCol":8,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["f","lq_tmp$x##3538:p -> lq_tmp$x##3539:p -> p"]]],[{"spanInfo":{"startLine":159,"endLine":159,"endCol":20,"startCol":14,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[[null,"GHC.Types.Int"]]],[{"spanInfo":{"startLine":284,"endLine":285,"endCol":34,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801139","{lq_tmp$x##3549 : [p] | Example.notEmpty lq_tmp$x##3549\n                        && lq_tmp$x##3549 == ds_d1Uk\n                        && len lq_tmp$x##3549 >= 0}"]]],[{"spanInfo":{"startLine":188,"endLine":188,"endCol":18,"startCol":17,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801123","{lq_tmp$x##2688 : GHC.Prim.Int# | lq_tmp$x##2688 == 1}"]]],[{"spanInfo":{"startLine":357,"endLine":358,"endCol":47,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801094","{lq_tmp$x##1280 : [a] | Example.notEmpty lq_tmp$x##1280\n                        && lq_tmp$x##1280 == ds_d1V4\n                        && len lq_tmp$x##1280 >= 0}"]]],[{"spanInfo":{"startLine":321,"endLine":321,"endCol":39,"startCol":21,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801174","{lq_tmp$x##4821 : ({lq_tmp$x##4817 : GHC.Types.Int | $k_##4806[VV##4805:=lq_tmp$x##4817][VV##4812:=lq_tmp$x##4821]}, {lq_tmp$x##4818 : GHC.Types.Int | $k_##4808[VV##4807:=lq_tmp$x##4818][VV##4812:=lq_tmp$x##4821]})<\\lq_tmp$x##4822 VV -> {lq_tmp$x##4820 : GHC.Types.Int | $k_##4811[VV##4810:=lq_tmp$x##4820][VV##4812:=lq_tmp$x##4821][lq_tmp$x##4809:=lq_tmp$x##4822][lq_tmp$x##4819:=lq_tmp$x##4822]}> | lq_tmp$x##4821 == ds_d1Ut\n                                                                                                                                                                                                                                                                                                                                                                                                                 && $k_##4813[VV##4812:=lq_tmp$x##4821]}"]]],[{"spanInfo":{"startLine":192,"endLine":192,"endCol":20,"startCol":19,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801127","{lq_tmp$x##2799 : GHC.Prim.Int# | lq_tmp$x##2799 == 0}"]]],[{"spanInfo":{"startLine":352,"endLine":352,"endCol":28,"startCol":27,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["s","{lq_tmp$x##2253 : [{lq_tmp$x##2250 : a | $k_##1984[VV##1983:=lq_tmp$x##2250][VV##1988:=lq_tmp$x##2253]}]<\\lq_tmp$x##2254 VV -> {lq_tmp$x##2252 : a | $k_##1987[VV##1986:=lq_tmp$x##2252][VV##1988:=lq_tmp$x##2253][lq_tmp$x##1985:=lq_tmp$x##2254][lq_tmp$x##2251:=lq_tmp$x##2254]}> | lq_tmp$x##2253 == s##a1Lx\n                                                                                                                                                                                                                                                                                       && len lq_tmp$x##2253 >= 0\n                                                                                                                                                                                                                                                                                       && $k_##1989[VV##1988:=lq_tmp$x##2253]}"]]],[{"spanInfo":{"startLine":255,"endLine":255,"endCol":32,"startCol":18,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801134","ds_d1RT:{VV##3113 : a | $k_##3114} -> {lq_tmp$x##3120 : GHC.Types.Bool | lq_tmp$x##3120 <=> x##a1ov == ds_d1RT}"]]],[{"spanInfo":{"startLine":171,"endLine":171,"endCol":45,"startCol":17,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801150","lq_tmp$x##3989:{lq_tmp$x##3992 : GHC.Types.Int | $k_##3991[VV##3990:=lq_tmp$x##3992]} -> {lq_tmp$x##3987 : (GHC.Maybe.Maybe {lq_tmp$x##3992 : GHC.Types.Int | $k_##3991[VV##3990:=lq_tmp$x##3992]}) | isJust lq_tmp$x##3987\n                                                                                                                                                                                                      && fromJust lq_tmp$x##3987 == lq_tmp$x##3989}"]]],[{"spanInfo":{"startLine":322,"endLine":322,"endCol":12,"startCol":5,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["weights","{lq_tmp$x##4738 : [{lq_tmp$x##4763 : GHC.Types.Int | $k_##4762[VV##4761:=lq_tmp$x##4763][lq_tmp$x##4743:=lq_anf$##7205759403792801173##d1Y9][lq_tmp$x##4744:=wxs##a1qi]}] | Example.notEmpty wxs##a1qi <=> Example.notEmpty lq_tmp$x##4738}"]]],[{"spanInfo":{"startLine":358,"endLine":358,"endCol":47,"startCol":20,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.die","{VV : forall a .\n      lq_tmp$x##1318:{lq_tmp$x##1314 : [GHC.Types.Char] | false} -> a | VV == Example.die}"]]],[{"spanInfo":{"startLine":351,"endLine":351,"endCol":22,"startCol":21,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["x","{lq_tmp$x##2351 : a | lq_tmp$x##2351 == x##a1qu}"]]],[{"spanInfo":{"startLine":329,"endLine":329,"endCol":21,"startCol":18,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801166","a"]]],[{"spanInfo":{"startLine":351,"endLine":351,"endCol":24,"startCol":23,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["s","{lq_tmp$x##2355 : [{lq_tmp$x##2352 : a | $k_##1984[VV##1983:=lq_tmp$x##2352][VV##1988:=lq_tmp$x##2355]}]<\\lq_tmp$x##2356 VV -> {lq_tmp$x##2354 : a | $k_##1987[VV##1986:=lq_tmp$x##2354][VV##1988:=lq_tmp$x##2355][lq_tmp$x##1985:=lq_tmp$x##2356][lq_tmp$x##2353:=lq_tmp$x##2356]}> | lq_tmp$x##2355 == s##a1Lx\n                                                                                                                                                                                                                                                                                       && len lq_tmp$x##2355 >= 0\n                                                                                                                                                                                                                                                                                       && $k_##1989[VV##1988:=lq_tmp$x##2355]}"]]],[{"spanInfo":{"startLine":284,"endLine":284,"endCol":34,"startCol":32,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["xs","{lq_tmp$x##3671 : [p] | lq_tmp$x##3671 == xs##a1qb\n                        && len lq_tmp$x##3671 >= 0}"]]],[{"spanInfo":{"startLine":352,"endLine":352,"endCol":34,"startCol":20,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["GHC.Types.:","{VV : forall a <p :: a a -> Bool>.\n      lq_tmp$x##2281:a -> lq_tmp$x##2282:[{lq_tmp$x##2270 : a<p lq_tmp$x##2281> | true}]<\\lq_tmp$x##2283 VV -> {lq_tmp$x##2272 : a<p lq_tmp$x##2283> | true}> -> {lq_tmp$x##2277 : [a]<\\lq_tmp$x##2284 VV -> {lq_tmp$x##2276 : a<p lq_tmp$x##2284> | true}> | Example.notEmpty lq_tmp$x##2277\n                                                                                                                                                                                                                                                              && head lq_tmp$x##2277 == lq_tmp$x##2281\n                                                                                                                                                                                                                                                              && len lq_tmp$x##2277 == 1 + len lq_tmp$x##2282\n                                                                                                                                                                                                                                                              && tail lq_tmp$x##2277 == lq_tmp$x##2282} | VV == GHC.Types.:}"]]],[{"spanInfo":{"startLine":319,"endLine":319,"endCol":10,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.wtAverage","lq_tmp$x##4627:{VV##0 : [({VV##0 : GHC.Types.Int | 0 < VV##0}, {VV##0 : GHC.Types.Int | 0 < VV##0})] | Example.notEmpty VV##0} -> GHC.Types.Int"]]],[{"spanInfo":{"startLine":319,"endLine":319,"endCol":42,"startCol":17,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.divide","lq_tmp$x##4954:GHC.Types.Int -> lq_tmp$x##4955:{lq_tmp$x##4950 : GHC.Types.Int | 0 /= lq_tmp$x##4950} -> GHC.Types.Int"]]],[{"spanInfo":{"startLine":252,"endLine":252,"endCol":20,"startCol":18,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[[null,"{VV : forall a <p :: a a -> Bool>.\n      {lq_tmp$x##3055 : [a]<\\lq_tmp$x##3056 VV -> {lq_tmp$x##3054 : a<p lq_tmp$x##3056> | true}> | not (Example.notEmpty lq_tmp$x##3055)\n                                                                                                   && len lq_tmp$x##3055 == 0} | VV == GHC.Types.[]}"]]],[{"spanInfo":{"startLine":63,"endLine":63,"endCol":11,"startCol":10,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["z","GHC.Types.Int"]]],[{"spanInfo":{"startLine":323,"endLine":323,"endCol":26,"startCol":21,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["elems","{lq_tmp$x##4946 : [{lq_tmp$x##4943 : GHC.Types.Int | $k_##4906[VV##4905:=lq_tmp$x##4943][lq_tmp$x##4882:=lq_tmp$x##4946][lq_tmp$x##4887:=lq_anf$##7205759403792801175##d1Yb][lq_tmp$x##4888:=wxs##a1qi][lq_tmp$x##4907:=lq_tmp$x##4943]}] | (Example.notEmpty wxs##a1qi <=> Example.notEmpty lq_tmp$x##4946)\n                                                                                                                                                                                                                                            && lq_tmp$x##4946 == elems##a1qj\n                                                                                                                                                                                                                                            && len lq_tmp$x##4946 >= 0}"]]],[{"spanInfo":{"startLine":115,"endLine":116,"endCol":22,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801116","{lq_tmp$x##2532 : [a] | lq_tmp$x##2532 == ds_d1T6\n                        && len lq_tmp$x##2532 >= 0}"]]],[{"spanInfo":{"startLine":72,"endLine":72,"endCol":5,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.size","forall a .\nlq_tmp$x##2414:[a] -> {VV##0 : GHC.Types.Int | (Example.notEmpty lq_tmp$x##2414 => VV##0 > 0)\n                                               && VV##0 >= 0}"]]],[{"spanInfo":{"startLine":63,"endLine":63,"endCol":27,"startCol":26,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["y","{lq_tmp$x##1031 : GHC.Types.Int | lq_tmp$x##1031 == y##a1oe}"]]],[{"spanInfo":{"startLine":308,"endLine":308,"endCol":16,"startCol":14,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[[null,"{VV : forall a <p :: a a -> Bool>.\n      {lq_tmp$x##4253 : [a]<\\lq_tmp$x##4254 VV -> {lq_tmp$x##4252 : a<p lq_tmp$x##4254> | true}> | not (Example.notEmpty lq_tmp$x##4253)\n                                                                                                   && len lq_tmp$x##4253 == 0} | VV == GHC.Types.[]}"]]],[{"spanInfo":{"startLine":325,"endLine":325,"endCol":27,"startCol":24,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801171","lq_tmp$x##4641:GHC.Types.Int -> lq_tmp$x##4642:GHC.Types.Int -> {lq_tmp$x##4643 : GHC.Types.Int | lq_tmp$x##4643 == lq_tmp$x##4641 + lq_tmp$x##4642}"]]],[{"spanInfo":{"startLine":351,"endLine":351,"endCol":11,"startCol":10,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["y","{lq_tmp$x##2162 : a | lq_tmp$x##2162 == y##a1qw}"]]],[{"spanInfo":{"startLine":325,"endLine":325,"endCol":8,"startCol":5,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["sum","lq_tmp$x##4663:{lq_tmp$x##4655 : [{lq_tmp$x##4667 : GHC.Types.Int | $k_##4666[VV##4665:=lq_tmp$x##4667][lq_tmp$x##4662:=lq_anf$##7205759403792801171##d1Y7]}] | Example.notEmpty lq_tmp$x##4655} -> {lq_tmp$x##4667 : GHC.Types.Int | $k_##4666[VV##4665:=lq_tmp$x##4667][lq_tmp$x##4662:=lq_anf$##7205759403792801171##d1Y7]}"]]],[{"spanInfo":{"startLine":351,"endLine":351,"endCol":6,"startCol":5,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["x","{lq_tmp$x##2161 : a | lq_tmp$x##2161 == x##a1qu}"]]],[{"spanInfo":{"startLine":319,"endLine":319,"endCol":42,"startCol":33,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["totWeight","{lq_tmp$x##4957 : GHC.Types.Int | lq_tmp$x##4957 == totWeight##a1qm\n                                  && $k_##4666[VV##4665:=lq_tmp$x##4957][lq_tmp$x##4662:=lq_anf$##7205759403792801171##d1Y7][lq_tmp$x##4663:=weights##a1qk][lq_tmp$x##4667:=lq_tmp$x##4957][lq_tmp$x##4794:=lq_tmp$x##4957][lq_tmp$x##4797:=weights##a1qk]}"]]],[{"spanInfo":{"startLine":329,"endLine":329,"endCol":32,"startCol":30,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["xs","{lq_tmp$x##4402 : [t] | lq_tmp$x##4402 == xs##a1qt\n                        && len lq_tmp$x##4402 >= 0}"]]],[{"spanInfo":{"startLine":299,"endLine":299,"endCol":41,"startCol":11,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.die","{VV : forall a .\n      lq_tmp$x##3724:{lq_tmp$x##3720 : [GHC.Types.Char] | false} -> a | VV == Example.die}"]]],[{"spanInfo":{"startLine":300,"endLine":300,"endCol":21,"startCol":18,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801143","lq_tmp$x##3779:p -> lq_tmp$x##3780:p -> {lq_tmp$x##3781 : p | lq_tmp$x##3781 == lq_tmp$x##3779 + lq_tmp$x##3780}"]]],[{"spanInfo":{"startLine":319,"endLine":319,"endCol":32,"startCol":24,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["totElems","{lq_tmp$x##4956 : GHC.Types.Int | lq_tmp$x##4956 == totElems##a1ql\n                                  && $k_##4666[VV##4665:=lq_tmp$x##4956][lq_tmp$x##4662:=lq_anf$##7205759403792801171##d1Y7][lq_tmp$x##4663:=elems##a1qj][lq_tmp$x##4667:=lq_tmp$x##4956][lq_tmp$x##4938:=lq_tmp$x##4956][lq_tmp$x##4941:=elems##a1qj]}"]]],[{"spanInfo":{"startLine":50,"endLine":50,"endCol":23,"startCol":22,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["ds_d1TC","{lq_tmp$x##936 : GHC.Types.Int | lq_tmp$x##936 == ds_d1TC\n                                 && 0 /= lq_tmp$x##936}"]]],[{"spanInfo":{"startLine":61,"endLine":61,"endCol":5,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.avg2","lq_tmp$x##970:GHC.Types.Int -> lq_tmp$x##971:GHC.Types.Int -> GHC.Types.Int"]]],[{"spanInfo":{"startLine":322,"endLine":322,"endCol":34,"startCol":33,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["w","{lq_tmp$x##4726 : GHC.Types.Int | lq_tmp$x##4726 == w##a1qq\n                                  && $k_##4677[VV##4676:=lq_tmp$x##4726][VV##4683:=lq_anf$##7205759403792801172##d1Y8][lq_tmp$x##4688:=lq_tmp$x##4726][lq_tmp$x##4692:=lq_anf$##7205759403792801172##d1Y8][lq_tmp$x##4695:=lq_tmp$x##4726][lq_tmp$x##4699:=lq_anf$##7205759403792801172##d1Y8]}"]]],[{"spanInfo":{"startLine":174,"endLine":174,"endCol":10,"startCol":5,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["elems","{lq_tmp$x##3936 : GHC.Types.Int | (Example.notEmpty xs##a1on => lq_tmp$x##3936 > 0)\n                                  && lq_tmp$x##3936 >= 0}"]]],[{"spanInfo":{"startLine":328,"endLine":328,"endCol":4,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.map","forall t a .\nlq_tmp$x##4287:(lq_tmp$x##4285:t -> a) -> lq_tmp$x##4288:[t] -> {ys : [a] | Example.notEmpty lq_tmp$x##4288 <=> Example.notEmpty ys}"]]],[{"spanInfo":{"startLine":357,"endLine":357,"endCol":26,"startCol":24,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["xs","{lq_tmp$x##1430 : [a] | lq_tmp$x##1430 == xs##a1qB\n                        && len lq_tmp$x##1430 >= 0}"]]],[{"spanInfo":{"startLine":306,"endLine":306,"endCol":18,"startCol":17,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801154","{lq_tmp$x##4057 : GHC.Integer.Type.Integer | lq_tmp$x##4057 == 2}"]]],[{"spanInfo":{"startLine":252,"endLine":255,"endCol":32,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801133","{lq_tmp$x##3033 : [a] | lq_tmp$x##3033 == ds_d1RH\n                        && len lq_tmp$x##3033 >= 0}"]]],[{"spanInfo":{"startLine":50,"endLine":50,"endCol":15,"startCol":14,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["ds_d1TB","{lq_tmp$x##935 : GHC.Types.Int | lq_tmp$x##935 == ds_d1TB}"]]],[{"spanInfo":{"startLine":1,"endLine":1,"endCol":1,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.$trModule","{VV##4959 : GHC.Types.Module | $k_##4960}"]]],[{"spanInfo":{"startLine":239,"endLine":239,"endCol":31,"startCol":29,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["xs","{lq_tmp$x##2978 : [a] | lq_tmp$x##2978 == xs##a1ou\n                        && len lq_tmp$x##2978 >= 0}"]]],[{"spanInfo":{"startLine":189,"endLine":189,"endCol":18,"startCol":17,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801121","{lq_tmp$x##2734 : GHC.Types.Int | lq_tmp$x##2734 == (lq_anf$##7205759403792801120##d1Xi : int)}"]]],[{"spanInfo":{"startLine":253,"endLine":253,"endCol":20,"startCol":19,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["x","{lq_tmp$x##3315 : a | lq_tmp$x##3315 == x##a1ov}"]]],[{"spanInfo":{"startLine":284,"endLine":284,"endCol":7,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.foldl1","forall p .\nlq_tmp$x##3541:(lq_tmp$x##3538:p -> lq_tmp$x##3539:p -> p) -> lq_tmp$x##3542:{VV##0 : [p] | Example.notEmpty VV##0} -> p"]]],[{"spanInfo":{"startLine":61,"endLine":61,"endCol":34,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.divide","lq_tmp$x##1004:GHC.Types.Int -> lq_tmp$x##1005:{lq_tmp$x##1000 : GHC.Types.Int | 0 /= lq_tmp$x##1000} -> GHC.Types.Int"]]],[{"spanInfo":{"startLine":329,"endLine":329,"endCol":29,"startCol":28,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["ds_d1Rh","lq_tmp$x##4398:t -> a"]]],[{"spanInfo":{"startLine":192,"endLine":193,"endCol":27,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801126","{lq_tmp$x##2780 : [a] | lq_tmp$x##2780 == ds_d1SP\n                        && len lq_tmp$x##2780 >= 0}"]]],[{"spanInfo":{"startLine":357,"endLine":357,"endCol":10,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.safeSplit","forall a .\nlq_tmp$x##1271:{VV##0 : [a] | Example.notEmpty VV##0} -> (a, [a])"]]],[{"spanInfo":{"startLine":299,"endLine":300,"endCol":24,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801142","{lq_tmp$x##3686 : [p] | Example.notEmpty lq_tmp$x##3686\n                        && lq_tmp$x##3686 == ds_d1UM\n                        && len lq_tmp$x##3686 >= 0}"]]],[{"spanInfo":{"startLine":354,"endLine":354,"endCol":46,"startCol":20,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801102","lq_tmp$x##1724:{lq_tmp$x##1710 : [{lq_tmp$x##1739 : [{lq_tmp$x##1736 : a | $k_##1730[VV##1729:=lq_tmp$x##1736][VV##1734:=lq_tmp$x##1739]}]<\\lq_tmp$x##1737 VV -> {lq_tmp$x##1738 : a | $k_##1733[VV##1732:=lq_tmp$x##1738][VV##1734:=lq_tmp$x##1739][lq_tmp$x##1731:=lq_tmp$x##1737]}> | $k_##1735[VV##1734:=lq_tmp$x##1739]}] | Example.notEmpty lq_tmp$x##1710} -> ({lq_tmp$x##1739 : [{lq_tmp$x##1736 : a | $k_##1730[VV##1729:=lq_tmp$x##1736][VV##1734:=lq_tmp$x##1739]}]<\\lq_tmp$x##1737 VV -> {lq_tmp$x##1738 : a | $k_##1733[VV##1732:=lq_tmp$x##1738][VV##1734:=lq_tmp$x##1739][lq_tmp$x##1731:=lq_tmp$x##1737]}> | $k_##1735[VV##1734:=lq_tmp$x##1739]}, [{lq_tmp$x##1739 : [{lq_tmp$x##1736 : a | $k_##1730[VV##1729:=lq_tmp$x##1736][VV##1734:=lq_tmp$x##1739]}]<\\lq_tmp$x##1737 VV -> {lq_tmp$x##1738 : a | $k_##1733[VV##1732:=lq_tmp$x##1738][VV##1734:=lq_tmp$x##1739][lq_tmp$x##1731:=lq_tmp$x##1737]}> | $k_##1735[VV##1734:=lq_tmp$x##1739]}])"]]],[{"spanInfo":{"startLine":170,"endLine":170,"endCol":12,"startCol":10,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["xs","[GHC.Types.Int]"]]],[{"spanInfo":{"startLine":348,"endLine":348,"endCol":7,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.risers","forall a .\n(Ord<[]> a) =>\nlq_tmp$x##1435:[a] -> {v : [[a]] | Example.notEmpty lq_tmp$x##1435 => Example.notEmpty v}"]]],[{"spanInfo":{"startLine":63,"endLine":63,"endCol":32,"startCol":21,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801085","{lq_tmp$x##1044 : GHC.Types.Int | lq_tmp$x##1044 == lq_anf$##7205759403792801084##d1WI + z##a1of}"]]],[{"spanInfo":{"startLine":270,"endLine":270,"endCol":17,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.eliminateStutter","forall a . (Eq<[]> a) => lq_tmp$x##4438:[a] -> [a]"]]],[{"spanInfo":{"startLine":321,"endLine":321,"endCol":38,"startCol":33,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["GHC.Num.$fNumInt","{lq_tmp$x##4868 : (GHC.Num.Num GHC.Types.Int) | lq_tmp$x##4868 == GHC.Num.$fNumInt}"]]],[{"spanInfo":{"startLine":242,"endLine":242,"endCol":5,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.null","forall a .\nlq_tmp$x##2861:[a] -> {b : GHC.Types.Bool | b <=> not (Example.notEmpty lq_tmp$x##2861)}"]]],[{"spanInfo":{"startLine":61,"endLine":61,"endCol":34,"startCol":33,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801083","{lq_tmp$x##994 : GHC.Types.Int | lq_tmp$x##994 == (lq_anf$##7205759403792801082##d1WG : int)}"]]],[{"spanInfo":{"startLine":329,"endLine":329,"endCol":21,"startCol":20,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["x","{lq_tmp$x##4368 : t | lq_tmp$x##4368 == x##a1qs}"]]],[{"spanInfo":{"startLine":175,"endLine":175,"endCol":28,"startCol":17,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801148","{lq_tmp$x##3954 : GHC.Types.Bool | lq_tmp$x##3954 <=> Example.notEmpty xs##a1on}"]]],[{"spanInfo":{"startLine":175,"endLine":175,"endCol":28,"startCol":26,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["xs","{lq_tmp$x##3965 : [GHC.Types.Int] | lq_tmp$x##3965 == xs##a1on\n                                    && len lq_tmp$x##3965 >= 0}"]]],[{"spanInfo":{"startLine":255,"endLine":255,"endCol":12,"startCol":10,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["zs","{VV##3241 : [{VV##3236 : a | $k_##3237}]<\\lq_tmp$x##3238 VV -> {VV##3239 : a | $k_##3240}> | $k_##3242}"]]],[{"spanInfo":{"startLine":72,"endLine":72,"endCol":17,"startCol":16,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801112","{lq_tmp$x##2440 : GHC.Prim.Int# | lq_tmp$x##2440 == 0}"]]],[{"spanInfo":{"startLine":49,"endLine":50,"endCol":23,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801078","{lq_tmp$x##917 : GHC.Prim.Int# | lq_tmp$x##917 == ds_d1TJ}"]]],[{"spanInfo":{"startLine":253,"endLine":253,"endCol":37,"startCol":35,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["zs","{lq_tmp$x##3355 : [{lq_tmp$x##3352 : a | $k_##3237[VV##3236:=lq_tmp$x##3352][VV##3241:=lq_tmp$x##3355]}]<\\lq_tmp$x##3356 VV -> {lq_tmp$x##3354 : a | $k_##3240[VV##3239:=lq_tmp$x##3354][VV##3241:=lq_tmp$x##3355][lq_tmp$x##3238:=lq_tmp$x##3356][lq_tmp$x##3353:=lq_tmp$x##3356]}> | lq_tmp$x##3355 == zs##a1vc\n                                                                                                                                                                                                                                                                                       && len lq_tmp$x##3355 >= 0\n                                                                                                                                                                                                                                                                                       && $k_##3242[VV##3241:=lq_tmp$x##3355]}"]]],[{"spanInfo":{"startLine":79,"endLine":79,"endCol":32,"startCol":14,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.divide","lq_tmp$x##3869:GHC.Types.Int -> lq_tmp$x##3870:{lq_tmp$x##3865 : GHC.Types.Int | 0 /= lq_tmp$x##3865} -> GHC.Types.Int"]]],[{"spanInfo":{"startLine":288,"endLine":289,"endCol":42,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801137","{lq_tmp$x##3427 : [b] | lq_tmp$x##3427 == ds_d1Ru\n                        && len lq_tmp$x##3427 >= 0}"]]],[{"spanInfo":{"startLine":171,"endLine":171,"endCol":38,"startCol":36,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["xs","{lq_tmp$x##4013 : [GHC.Types.Int] | lq_tmp$x##4013 == xs##a1on\n                                    && len lq_tmp$x##4013 >= 0}"]]],[{"spanInfo":{"startLine":49,"endLine":49,"endCol":7,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.divide","lq_tmp$x##900:GHC.Types.Int -> lq_tmp$x##901:{VV##0 : GHC.Types.Int | 0 /= VV##0} -> GHC.Types.Int"]]],[{"spanInfo":{"startLine":215,"endLine":215,"endCol":5,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.tail","forall a .\nlq_tmp$x##1165:{VV##0 : [a] | Example.notEmpty VV##0} -> [a]"]]],[{"spanInfo":{"startLine":329,"endLine":329,"endCol":32,"startCol":24,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801167","{lq_tmp$x##4380 : [{lq_tmp$x##4394 : a | $k_##4393[VV##4392:=lq_tmp$x##4394][lq_tmp$x##4385:=ds_d1Rh][lq_tmp$x##4386:=xs##a1qt]}] | Example.notEmpty xs##a1qt <=> Example.notEmpty lq_tmp$x##4380}"]]],[{"spanInfo":{"startLine":170,"endLine":175,"endCol":28,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801149","{lq_tmp$x##3968 : GHC.Types.Bool | (lq_tmp$x##3968 <=> Example.notEmpty xs##a1on)\n                                   && lq_tmp$x##3968 == lq_anf$##7205759403792801148##d1XK}"]]],[{"spanInfo":{"startLine":189,"endLine":189,"endCol":29,"startCol":27,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["ds_d1SK","{lq_tmp$x##2754 : [a] | lq_tmp$x##2754 == ds_d1SK\n                        && len lq_tmp$x##2754 >= 0}"]]],[{"spanInfo":{"startLine":284,"endLine":284,"endCol":31,"startCol":30,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["x","{lq_tmp$x##3667 : p | lq_tmp$x##3667 == x##a1qa}"]]],[{"spanInfo":{"startLine":157,"endLine":157,"endCol":11,"startCol":9,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["xs","{VV##0 : [GHC.Types.Int] | Example.notEmpty VV##0}"]]],[{"spanInfo":{"startLine":23,"endLine":23,"endCol":5,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.main","(GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":323,"endLine":323,"endCol":13,"startCol":5,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["totElems","{lq_tmp$x##4938 : GHC.Types.Int | $k_##4666[VV##4665:=lq_tmp$x##4938][lq_tmp$x##4662:=lq_anf$##7205759403792801171##d1Y7][lq_tmp$x##4663:=elems##a1qj][lq_tmp$x##4667:=lq_tmp$x##4938][lq_tmp$x##4941:=elems##a1qj]}"]]],[{"spanInfo":{"startLine":188,"endLine":188,"endCol":6,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.size1","forall a .\nlq_tmp$x##2591:{VV##0 : [a] | Example.notEmpty VV##0} -> {VV##0 : GHC.Types.Int | 0 < VV##0}"]]],[{"spanInfo":{"startLine":352,"endLine":352,"endCol":22,"startCol":21,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["x","{lq_tmp$x##2207 : a | lq_tmp$x##2207 == x##a1qu}"]]],[{"spanInfo":{"startLine":325,"endLine":325,"endCol":27,"startCol":17,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[[null,"lq_tmp$x##4663:{lq_tmp$x##4655 : [{lq_tmp$x##4667 : GHC.Types.Int | $k_##4666[VV##4665:=lq_tmp$x##4667][lq_tmp$x##4662:=lq_anf$##7205759403792801171##d1Y7]}] | Example.notEmpty lq_tmp$x##4655} -> {lq_tmp$x##4667 : GHC.Types.Int | $k_##4666[VV##4665:=lq_tmp$x##4667][lq_tmp$x##4662:=lq_anf$##7205759403792801171##d1Y7]}"]]],[{"spanInfo":{"startLine":255,"endLine":255,"endCol":32,"startCol":30,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["xs","{lq_tmp$x##3177 : [a] | lq_tmp$x##3177 == xs##a1ow\n                        && len lq_tmp$x##3177 >= 0}"]]],[{"spanInfo":{"startLine":253,"endLine":253,"endCol":23,"startCol":21,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["ys","{lq_tmp$x##3319 : [{lq_tmp$x##3316 : a | $k_##3181[VV##3180:=lq_tmp$x##3316][VV##3185:=lq_tmp$x##3319]}]<\\lq_tmp$x##3320 VV -> {lq_tmp$x##3318 : a | $k_##3184[VV##3183:=lq_tmp$x##3318][VV##3185:=lq_tmp$x##3319][lq_tmp$x##3182:=lq_tmp$x##3320][lq_tmp$x##3317:=lq_tmp$x##3320]}> | lq_tmp$x##3319 == ys##a1va\n                                                                                                                                                                                                                                                                                       && len lq_tmp$x##3319 >= 0\n                                                                                                                                                                                                                                                                                       && $k_##3186[VV##3185:=lq_tmp$x##3319]}"]]],[{"spanInfo":{"startLine":306,"endLine":306,"endCol":25,"startCol":14,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801163","{lq_tmp$x##4206 : [{lq_tmp$x##4216 : GHC.Integer.Type.Integer | $k_##4215[VV##4214:=lq_tmp$x##4216][lq_tmp$x##4210:=lq_anf$##7205759403792801153##d1XP][lq_tmp$x##4211:=lq_anf$##7205759403792801162##d1XY]}]<\\lq_tmp$x##4213 VV -> {lq_tmp$x##4216 : GHC.Integer.Type.Integer | $k_##4218[VV##4217:=lq_tmp$x##4216][lq_tmp$x##4210:=lq_anf$##7205759403792801153##d1XP][lq_tmp$x##4211:=lq_anf$##7205759403792801162##d1XY][lq_tmp$x##4219:=lq_tmp$x##4213]}> | Example.notEmpty lq_tmp$x##4206\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                 && head lq_tmp$x##4206 == lq_anf$##7205759403792801153##d1XP\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                 && len lq_tmp$x##4206 == 1 + len lq_anf$##7205759403792801162##d1XY\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                 && tail lq_tmp$x##4206 == lq_anf$##7205759403792801162##d1XY}"]]],[{"spanInfo":{"startLine":238,"endLine":238,"endCol":12,"startCol":5,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801129","{lq_tmp$x##2933 : GHC.Types.Bool | lq_tmp$x##2933 <=> not (Example.notEmpty xs##a1ou)}"]]],[{"spanInfo":{"startLine":159,"endLine":159,"endCol":20,"startCol":18,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["xs","{lq_tmp$x##3915 : [GHC.Types.Int] | Example.notEmpty lq_tmp$x##3915\n                                    && lq_tmp$x##3915 == xs##a1ok\n                                    && len lq_tmp$x##3915 >= 0}"]]],[{"spanInfo":{"startLine":255,"endLine":255,"endCol":8,"startCol":6,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["ys","{VV##3185 : [{VV##3180 : a | $k_##3181}]<\\lq_tmp$x##3182 VV -> {VV##3183 : a | $k_##3184}> | $k_##3186}"]]],[{"spanInfo":{"startLine":73,"endLine":73,"endCol":27,"startCol":16,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["GHC.Num.$fNumInt","{lq_tmp$x##2522 : (GHC.Num.Num GHC.Types.Int) | lq_tmp$x##2522 == GHC.Num.$fNumInt}"]]],[{"spanInfo":{"startLine":79,"endLine":79,"endCol":32,"startCol":27,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["elems","{lq_tmp$x##3872 : GHC.Types.Int | (Example.notEmpty xs##a1oh => lq_tmp$x##3872 > 0)\n                                  && lq_tmp$x##3872 == elems##a1oj\n                                  && lq_tmp$x##3872 >= 0}"]]],[{"spanInfo":{"startLine":289,"endLine":289,"endCol":36,"startCol":33,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["acc","{lq_tmp$x##3490 : a | lq_tmp$x##3490 == acc##a1qc}"]]],[{"spanInfo":{"startLine":215,"endLine":216,"endCol":54,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801091","{lq_tmp$x##1172 : [a] | Example.notEmpty lq_tmp$x##1172\n                        && lq_tmp$x##1172 == ds_d1U8\n                        && len lq_tmp$x##1172 >= 0}"]]],[{"spanInfo":{"startLine":211,"endLine":211,"endCol":16,"startCol":15,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["x","{lq_tmp$x##1162 : p | lq_tmp$x##1162 == x##a1os}"]]],[{"spanInfo":{"startLine":357,"endLine":357,"endCol":27,"startCol":20,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["GHC.Tuple.(,)","{VV : forall a b <p2 :: a b -> Bool>.\n      lq_tmp$x##1400:a -> lq_tmp$x##1401:{lq_tmp$x##1392 : b<p2 lq_tmp$x##1400> | true} -> {lq_tmp$x##1397 : (a, b)<\\lq_tmp$x##1402 VV -> {lq_tmp$x##1396 : b<p2 lq_tmp$x##1402> | true}> | fst lq_tmp$x##1397 == lq_tmp$x##1400\n                                                                                                                                                                                            && snd lq_tmp$x##1397 == lq_tmp$x##1401\n                                                                                                                                                                                            && x_Tuple21 lq_tmp$x##1397 == lq_tmp$x##1400\n                                                                                                                                                                                            && x_Tuple22 lq_tmp$x##1397 == lq_tmp$x##1401} | VV == GHC.Tuple.(,)}"]]],[{"spanInfo":{"startLine":63,"endLine":63,"endCol":27,"startCol":22,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801084","{lq_tmp$x##1027 : GHC.Types.Int | lq_tmp$x##1027 == x##a1od + y##a1oe}"]]],[{"spanInfo":{"startLine":321,"endLine":321,"endCol":43,"startCol":40,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["wxs","{lq_tmp$x##4929 : [({lq_tmp$x##4918 : GHC.Types.Int | 0 < lq_tmp$x##4918}, {lq_tmp$x##4919 : GHC.Types.Int | 0 < lq_tmp$x##4919})] | Example.notEmpty lq_tmp$x##4929\n                                                                                                                                     && lq_tmp$x##4929 == wxs##a1qi\n                                                                                                                                     && len lq_tmp$x##4929 >= 0}"]]],[{"spanInfo":{"startLine":242,"endLine":243,"endCol":23,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801128","{lq_tmp$x##2867 : [a] | lq_tmp$x##2867 == ds_d1S3\n                        && len lq_tmp$x##2867 >= 0}"]]],[{"spanInfo":{"startLine":253,"endLine":253,"endCol":37,"startCol":18,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["GHC.Types.:","{VV : forall a <p :: a a -> Bool>.\n      lq_tmp$x##3370:a -> lq_tmp$x##3371:[{lq_tmp$x##3359 : a<p lq_tmp$x##3370> | true}]<\\lq_tmp$x##3372 VV -> {lq_tmp$x##3361 : a<p lq_tmp$x##3372> | true}> -> {lq_tmp$x##3366 : [a]<\\lq_tmp$x##3373 VV -> {lq_tmp$x##3365 : a<p lq_tmp$x##3373> | true}> | Example.notEmpty lq_tmp$x##3366\n                                                                                                                                                                                                                                                              && head lq_tmp$x##3366 == lq_tmp$x##3370\n                                                                                                                                                                                                                                                              && len lq_tmp$x##3366 == 1 + len lq_tmp$x##3371\n                                                                                                                                                                                                                                                              && tail lq_tmp$x##3366 == lq_tmp$x##3371} | VV == GHC.Types.:}"]]],[{"spanInfo":{"startLine":352,"endLine":352,"endCol":23,"startCol":20,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801108","{lq_tmp$x##2192 : [{lq_tmp$x##2202 : a | $k_##2201[VV##2200:=lq_tmp$x##2202][lq_tmp$x##2196:=x##a1qu][lq_tmp$x##2197:=lq_anf$##7205759403792801107##d1X5]}]<\\lq_tmp$x##2199 VV -> {lq_tmp$x##2202 : a | $k_##2204[VV##2203:=lq_tmp$x##2202][lq_tmp$x##2196:=x##a1qu][lq_tmp$x##2197:=lq_anf$##7205759403792801107##d1X5][lq_tmp$x##2205:=lq_tmp$x##2199]}> | Example.notEmpty lq_tmp$x##2192\n                                                                                                                                                                                                                                                                                                                                                             && head lq_tmp$x##2192 == x##a1qu\n                                                                                                                                                                                                                                                                                                                                                             && len lq_tmp$x##2192 == 1 + len lq_anf$##7205759403792801107##d1X5\n                                                                                                                                                                                                                                                                                                                                                             && tail lq_tmp$x##2192 == lq_anf$##7205759403792801107##d1X5}"]]],[{"spanInfo":{"startLine":324,"endLine":324,"endCol":28,"startCol":17,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[[null,"{lq_tmp$x##4794 : GHC.Types.Int | $k_##4666[VV##4665:=lq_tmp$x##4794][lq_tmp$x##4662:=lq_anf$##7205759403792801171##d1Y7][lq_tmp$x##4663:=weights##a1qk][lq_tmp$x##4667:=lq_tmp$x##4794][lq_tmp$x##4797:=weights##a1qk]}"]]],[{"spanInfo":{"startLine":239,"endLine":239,"endCol":31,"startCol":17,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801131","lq_tmp$x##2958:{lq_tmp$x##2961 : a | $k_##2960[VV##2959:=lq_tmp$x##2961]} -> {lq_tmp$x##2956 : (GHC.Maybe.Maybe {lq_tmp$x##2961 : a | $k_##2960[VV##2959:=lq_tmp$x##2961]}) | isJust lq_tmp$x##2956\n                                                                                                                                                                              && fromJust lq_tmp$x##2956 == lq_tmp$x##2958}"]]],[{"spanInfo":{"startLine":329,"endLine":329,"endCol":32,"startCol":18,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["GHC.Types.:","{VV : forall a <p :: a a -> Bool>.\n      lq_tmp$x##4417:a -> lq_tmp$x##4418:[{lq_tmp$x##4406 : a<p lq_tmp$x##4417> | true}]<\\lq_tmp$x##4419 VV -> {lq_tmp$x##4408 : a<p lq_tmp$x##4419> | true}> -> {lq_tmp$x##4413 : [a]<\\lq_tmp$x##4420 VV -> {lq_tmp$x##4412 : a<p lq_tmp$x##4420> | true}> | Example.notEmpty lq_tmp$x##4413\n                                                                                                                                                                                                                                                              && head lq_tmp$x##4413 == lq_tmp$x##4417\n                                                                                                                                                                                                                                                              && len lq_tmp$x##4413 == 1 + len lq_tmp$x##4418\n                                                                                                                                                                                                                                                              && tail lq_tmp$x##4413 == lq_tmp$x##4418} | VV == GHC.Types.:}"]]],[{"spanInfo":{"startLine":193,"endLine":193,"endCol":27,"startCol":19,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.size1","forall a .\nlq_tmp$x##2591:{VV##0 : [a] | Example.notEmpty VV##0} -> {VV##0 : GHC.Types.Int | 0 < VV##0}"]]],[{"spanInfo":{"startLine":354,"endLine":354,"endCol":29,"startCol":20,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[[null,"{VV : forall a .\n      lq_tmp$x##1724:{lq_tmp$x##1710 : [a] | Example.notEmpty lq_tmp$x##1710} -> (a, [a]) | VV == Example.safeSplit}"]]],[{"spanInfo":{"startLine":157,"endLine":157,"endCol":32,"startCol":14,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.divide","lq_tmp$x##3923:GHC.Types.Int -> lq_tmp$x##3924:{lq_tmp$x##3919 : GHC.Types.Int | 0 /= lq_tmp$x##3919} -> GHC.Types.Int"]]],[{"spanInfo":{"startLine":255,"endLine":255,"endCol":29,"startCol":23,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[[null,"{lq_tmp$x##3120 : GHC.Types.Bool | lq_tmp$x##3120 <=> x##a1ov == ds_d1RT}"]]],[{"spanInfo":{"startLine":82,"endLine":82,"endCol":10,"startCol":5,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["elems","{lq_tmp$x##3828 : GHC.Types.Int | (Example.notEmpty xs##a1oh => lq_tmp$x##3828 > 0)\n                                  && lq_tmp$x##3828 >= 0}"]]],[{"spanInfo":{"startLine":237,"endLine":237,"endCol":12,"startCol":10,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["xs","[a]"]]],[{"spanInfo":{"startLine":299,"endLine":299,"endCol":41,"startCol":15,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801145","{lq_tmp$x##3711 : [GHC.Types.Char] | len lq_tmp$x##3711 == strLen lq_anf$##7205759403792801144##d1XG\n                                     && lq_tmp$x##3711 ~~ lq_anf$##7205759403792801144##d1XG}"]]],[{"spanInfo":{"startLine":289,"endLine":289,"endCol":42,"startCol":40,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["xs","{lq_tmp$x##3531 : [b] | lq_tmp$x##3531 == xs##a1qg\n                        && len lq_tmp$x##3531 >= 0}"]]],[{"spanInfo":{"startLine":328,"endLine":329,"endCol":32,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801165","{lq_tmp$x##4297 : [t] | lq_tmp$x##4297 == ds_d1Ri\n                        && len lq_tmp$x##4297 >= 0}"]]],[{"spanInfo":{"startLine":306,"endLine":306,"endCol":6,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.sumOk","GHC.Integer.Type.Integer"]]],[{"spanInfo":{"startLine":174,"endLine":174,"endCol":24,"startCol":22,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["xs","{lq_tmp$x##3947 : [GHC.Types.Int] | lq_tmp$x##3947 == xs##a1on\n                                    && len lq_tmp$x##3947 >= 0}"]]],[{"spanInfo":{"startLine":238,"endLine":238,"endCol":12,"startCol":10,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["xs","{lq_tmp$x##2944 : [a] | lq_tmp$x##2944 == xs##a1ou\n                        && len lq_tmp$x##2944 >= 0}"]]],[{"spanInfo":{"startLine":61,"endLine":61,"endCol":7,"startCol":6,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["x","GHC.Types.Int"]]],[{"spanInfo":{"startLine":270,"endLine":270,"endCol":31,"startCol":27,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[[null,"{VV : forall p .\n      lq_tmp$x##4450:{lq_tmp$x##4446 : [p] | Example.notEmpty lq_tmp$x##4446} -> p | VV == Example.head}"]]],[{"spanInfo":{"startLine":352,"endLine":352,"endCol":34,"startCol":26,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801109","{lq_tmp$x##2222 : [{lq_tmp$x##2240 : [{lq_tmp$x##2237 : a | $k_##2231[VV##2230:=lq_tmp$x##2237][VV##2235:=lq_tmp$x##2240][lq_tmp$x##2226:=s##a1Lx][lq_tmp$x##2227:=ss##a1Lz]}]<\\lq_tmp$x##2238 VV -> {lq_tmp$x##2239 : a | $k_##2234[VV##2233:=lq_tmp$x##2239][VV##2235:=lq_tmp$x##2240][lq_tmp$x##2226:=s##a1Lx][lq_tmp$x##2227:=ss##a1Lz][lq_tmp$x##2232:=lq_tmp$x##2238]}> | $k_##2236[VV##2235:=lq_tmp$x##2240][lq_tmp$x##2226:=s##a1Lx][lq_tmp$x##2227:=ss##a1Lz]}]<\\lq_tmp$x##2229 VV -> {lq_tmp$x##2240 : [{lq_tmp$x##2237 : a | $k_##2242[VV##2241:=lq_tmp$x##2237][VV##2244:=lq_tmp$x##2239][VV##2246:=lq_tmp$x##2240][lq_tmp$x##2226:=s##a1Lx][lq_tmp$x##2227:=ss##a1Lz][lq_tmp$x##2248:=lq_tmp$x##2229]}]<\\lq_tmp$x##2238 VV -> {lq_tmp$x##2239 : a | $k_##2245[VV##2241:=lq_tmp$x##2237][VV##2244:=lq_tmp$x##2239][VV##2246:=lq_tmp$x##2240][lq_tmp$x##2226:=s##a1Lx][lq_tmp$x##2227:=ss##a1Lz][lq_tmp$x##2248:=lq_tmp$x##2229]}> | $k_##2247[VV##2246:=lq_tmp$x##2240][lq_tmp$x##2226:=s##a1Lx][lq_tmp$x##2227:=ss##a1Lz][lq_tmp$x##2248:=lq_tmp$x##2229]}> | Example.notEmpty lq_tmp$x##2222\nhead lq_tmp$x##2222 == s##a1Lx\nlen lq_tmp$x##2222 == 1 + len ss##a1Lz\ntail lq_tmp$x##2222 == ss##a1Lz}"]]],[{"spanInfo":{"startLine":299,"endLine":299,"endCol":4,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.sum","forall p .\n(Num<[]> p) =>\nlq_tmp$x##3679:{VV##0 : [p] | Example.notEmpty VV##0} -> p"]]],[{"spanInfo":{"startLine":61,"endLine":61,"endCol":23,"startCol":22,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["x","{lq_tmp$x##988 : GHC.Types.Int | lq_tmp$x##988 == x##a1nb}"]]],[{"spanInfo":{"startLine":116,"endLine":116,"endCol":22,"startCol":18,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["GHC.Types.True","{lq_tmp$x##2588 : GHC.Types.Bool | lq_tmp$x##2588\n                                   && lq_tmp$x##2588 == GHC.Types.True}"]]],[{"spanInfo":{"startLine":157,"endLine":157,"endCol":32,"startCol":27,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["elems","{lq_tmp$x##3926 : GHC.Types.Int | (Example.notEmpty xs##a1ok => lq_tmp$x##3926 > 0)\n                                  && lq_tmp$x##3926 == elems##a1om\n                                  && lq_tmp$x##3926 >= 0}"]]],[{"spanInfo":{"startLine":157,"endLine":157,"endCol":26,"startCol":21,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["total","{lq_tmp$x##3925 : GHC.Types.Int | lq_tmp$x##3925 == total##a1ol}"]]],[{"spanInfo":{"startLine":61,"endLine":61,"endCol":9,"startCol":8,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["y","GHC.Types.Int"]]],[{"spanInfo":{"startLine":23,"endLine":23,"endCol":24,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["System.IO.putStrLn","lq_tmp$x##606:[GHC.Types.Char] -> (GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":349,"endLine":349,"endCol":23,"startCol":22,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["x","{lq_tmp$x##1584 : a | lq_tmp$x##1584 == x##a1qu}"]]],[{"spanInfo":{"startLine":319,"endLine":319,"endCol":14,"startCol":11,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["wxs","{VV##0 : [({VV##0 : GHC.Types.Int | 0 < VV##0}, {VV##0 : GHC.Types.Int | 0 < VV##0})] | Example.notEmpty VV##0}"]]],[{"spanInfo":{"startLine":23,"endLine":23,"endCol":24,"startCol":17,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801055","{lq_tmp$x##592 : [GHC.Types.Char] | len lq_tmp$x##592 == strLen lq_anf$##7205759403792801054##d1We\n                                    && lq_tmp$x##592 ~~ lq_anf$##7205759403792801054##d1We}"]]],[{"spanInfo":{"startLine":270,"endLine":270,"endCol":20,"startCol":18,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["xs","[a]"]]],[{"spanInfo":{"startLine":270,"endLine":270,"endCol":44,"startCol":42,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["xs","{lq_tmp$x##4532 : [a] | lq_tmp$x##4532 == xs##a1q8\n                        && len lq_tmp$x##4532 >= 0}"]]],[{"spanInfo":{"startLine":306,"endLine":306,"endCol":25,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["GHC.Num.$fNumInteger","{lq_tmp$x##4243 : (GHC.Num.Num GHC.Integer.Type.Integer) | lq_tmp$x##4243 == GHC.Num.$fNumInteger}"]]],[{"spanInfo":{"startLine":73,"endLine":73,"endCol":27,"startCol":25,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["xs","{lq_tmp$x##2506 : [a] | lq_tmp$x##2506 == xs##a1og\n                        && len lq_tmp$x##2506 >= 0}"]]],[{"spanInfo":{"startLine":49,"endLine":49,"endCol":34,"startCol":14,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.die","{VV : forall a .\n      lq_tmp$x##958:{lq_tmp$x##954 : [GHC.Types.Char] | false} -> a | VV == Example.die}"]]],[{"spanInfo":{"startLine":82,"endLine":82,"endCol":21,"startCol":14,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.size","forall a .\nlq_tmp$x##2414:[a] -> {VV##0 : GHC.Types.Int | (Example.notEmpty lq_tmp$x##2414 => VV##0 > 0)\n                                               && VV##0 >= 0}"]]],[{"spanInfo":{"startLine":354,"endLine":354,"endCol":46,"startCol":39,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801103","{lq_tmp$x##1749 : [{lq_tmp$x##1759 : a | $k_##1758[VV##1757:=lq_tmp$x##1759][lq_tmp$x##1753:=y##a1qw][lq_tmp$x##1754:=etc##a1qx]}]<\\lq_tmp$x##1756 VV -> {lq_tmp$x##1759 : a | $k_##1761[VV##1760:=lq_tmp$x##1759][lq_tmp$x##1753:=y##a1qw][lq_tmp$x##1754:=etc##a1qx][lq_tmp$x##1762:=lq_tmp$x##1756]}> | Example.notEmpty lq_tmp$x##1749\n                                                                                                                                                                                                                                                                                                           && head lq_tmp$x##1749 == y##a1qw\n                                                                                                                                                                                                                                                                                                           && len lq_tmp$x##1749 == 1 + len etc##a1qx\n                                                                                                                                                                                                                                                                                                           && tail lq_tmp$x##1749 == etc##a1qx}"]]],[{"spanInfo":{"startLine":171,"endLine":171,"endCol":39,"startCol":31,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801151","GHC.Types.Int"]]],[{"spanInfo":{"startLine":300,"endLine":300,"endCol":24,"startCol":11,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.foldl1","{VV : forall p .\n      lq_tmp$x##3800:(lq_tmp$x##3797:p -> lq_tmp$x##3798:p -> p) -> lq_tmp$x##3801:{lq_tmp$x##3793 : [p] | Example.notEmpty lq_tmp$x##3793} -> p | VV == Example.foldl1}"]]],[{"spanInfo":{"startLine":192,"endLine":192,"endCol":6,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.size2","forall a .\nlq_tmp$x##2774:[a] -> {v : GHC.Types.Int | Example.notEmpty lq_tmp$x##2774 => v > 0}"]]],[{"spanInfo":{"startLine":284,"endLine":284,"endCol":29,"startCol":28,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["f","lq_tmp$x##3665:p -> lq_tmp$x##3666:p -> p"]]],[{"spanInfo":{"startLine":288,"endLine":288,"endCol":6,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.foldl","forall a b .\nlq_tmp$x##3416:(lq_tmp$x##3413:a -> lq_tmp$x##3414:b -> a) -> lq_tmp$x##3417:a -> lq_tmp$x##3418:[b] -> a"]]],[{"spanInfo":{"startLine":237,"endLine":239,"endCol":31,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801130","{lq_tmp$x##2947 : GHC.Types.Bool | (lq_tmp$x##2947 <=> not (Example.notEmpty xs##a1ou))\n                                   && lq_tmp$x##2947 == lq_anf$##7205759403792801129##d1Xr}"]]],[{"spanInfo":{"startLine":324,"endLine":324,"endCol":14,"startCol":5,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["totWeight","{lq_tmp$x##4794 : GHC.Types.Int | $k_##4666[VV##4665:=lq_tmp$x##4794][lq_tmp$x##4662:=lq_anf$##7205759403792801171##d1Y7][lq_tmp$x##4663:=weights##a1qk][lq_tmp$x##4667:=lq_tmp$x##4794][lq_tmp$x##4797:=weights##a1qk]}"]]],[{"spanInfo":{"startLine":212,"endLine":212,"endCol":56,"startCol":19,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801090","{lq_tmp$x##1103 : [GHC.Types.Char] | len lq_tmp$x##1103 == strLen lq_anf$##7205759403792801089##d1WN\n                                     && lq_tmp$x##1103 ~~ lq_anf$##7205759403792801089##d1WN}"]]],[{"spanInfo":{"startLine":285,"endLine":285,"endCol":34,"startCol":26,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801141","{lq_tmp$x##3574 : [GHC.Types.Char] | len lq_tmp$x##3574 == strLen lq_anf$##7205759403792801140##d1XC\n                                     && lq_tmp$x##3574 ~~ lq_anf$##7205759403792801140##d1XC}"]]],[{"spanInfo":{"startLine":289,"endLine":289,"endCol":42,"startCol":22,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.foldl","forall a b .\nlq_tmp$x##3416:(lq_tmp$x##3413:a -> lq_tmp$x##3414:b -> a) -> lq_tmp$x##3417:a -> lq_tmp$x##3418:[b] -> a"]]],[{"spanInfo":{"startLine":81,"endLine":81,"endCol":21,"startCol":19,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["xs","{lq_tmp$x##3861 : [GHC.Types.Int] | lq_tmp$x##3861 == xs##a1oh\n                                    && len lq_tmp$x##3861 >= 0}"]]],[{"spanInfo":{"startLine":270,"endLine":270,"endCol":44,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["GHC.Base.$","{VV : forall r a b .\n      lq_tmp$x##4543:(lq_tmp$x##4542:a -> b) -> lq_tmp$x##4544:a -> b | VV == GHC.Base.$}"]]],[{"spanInfo":{"startLine":351,"endLine":351,"endCol":30,"startCol":20,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["GHC.Types.:","{VV : forall a <p :: a a -> Bool>.\n      lq_tmp$x##2370:a -> lq_tmp$x##2371:[{lq_tmp$x##2359 : a<p lq_tmp$x##2370> | true}]<\\lq_tmp$x##2372 VV -> {lq_tmp$x##2361 : a<p lq_tmp$x##2372> | true}> -> {lq_tmp$x##2366 : [a]<\\lq_tmp$x##2373 VV -> {lq_tmp$x##2365 : a<p lq_tmp$x##2373> | true}> | Example.notEmpty lq_tmp$x##2366\n                                                                                                                                                                                                                                                              && head lq_tmp$x##2366 == lq_tmp$x##2370\n                                                                                                                                                                                                                                                              && len lq_tmp$x##2366 == 1 + len lq_tmp$x##2371\n                                                                                                                                                                                                                                                              && tail lq_tmp$x##2366 == lq_tmp$x##2371} | VV == GHC.Types.:}"]]],[{"spanInfo":{"startLine":160,"endLine":160,"endCol":10,"startCol":5,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["elems","{lq_tmp$x##3882 : GHC.Types.Int | (Example.notEmpty xs##a1ok => lq_tmp$x##3882 > 0)\n                                  && lq_tmp$x##3882 >= 0}"]]],[{"spanInfo":{"startLine":321,"endLine":321,"endCol":43,"startCol":17,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801175","ds_d1Ut:{VV##4812 : ({VV##4805 : GHC.Types.Int | $k_##4806}, {VV##4807 : GHC.Types.Int | $k_##4808})<\\lq_tmp$x##4809 VV -> {VV##4810 : GHC.Types.Int | $k_##4811}> | $k_##4813} -> {VV##4815 : GHC.Types.Int | $k_##4816}"]]],[{"spanInfo":{"startLine":171,"endLine":171,"endCol":21,"startCol":17,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[[null,"{VV : forall a .\n      lq_tmp$x##3989:a -> {lq_tmp$x##3987 : (GHC.Maybe.Maybe a) | isJust lq_tmp$x##3987\n                                                                  && fromJust lq_tmp$x##3987 == lq_tmp$x##3989} | VV == GHC.Maybe.Just}"]]],[{"spanInfo":{"startLine":171,"endLine":171,"endCol":45,"startCol":24,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801152","GHC.Types.Int"]]],[{"spanInfo":{"startLine":322,"endLine":322,"endCol":39,"startCol":21,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801172","{lq_tmp$x##4692 : ({lq_tmp$x##4688 : GHC.Types.Int | $k_##4677[VV##4676:=lq_tmp$x##4688][VV##4683:=lq_tmp$x##4692]}, {lq_tmp$x##4689 : GHC.Types.Int | $k_##4679[VV##4678:=lq_tmp$x##4689][VV##4683:=lq_tmp$x##4692]})<\\lq_tmp$x##4693 VV -> {lq_tmp$x##4691 : GHC.Types.Int | $k_##4682[VV##4681:=lq_tmp$x##4691][VV##4683:=lq_tmp$x##4692][lq_tmp$x##4680:=lq_tmp$x##4693][lq_tmp$x##4690:=lq_tmp$x##4693]}> | lq_tmp$x##4692 == ds_d1UA\n                                                                                                                                                                                                                                                                                                                                                                                                                 && $k_##4684[VV##4683:=lq_tmp$x##4692]}"]]],[{"spanInfo":{"startLine":348,"endLine":348,"endCol":22,"startCol":20,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[[null,"{VV : forall a <p :: a a -> Bool>.\n      {lq_tmp$x##1468 : [a]<\\lq_tmp$x##1469 VV -> {lq_tmp$x##1467 : a<p lq_tmp$x##1469> | true}> | not (Example.notEmpty lq_tmp$x##1468)\n                                                                                                   && len lq_tmp$x##1468 == 0} | VV == GHC.Types.[]}"]]],[{"spanInfo":{"startLine":63,"endLine":63,"endCol":34,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.divide","lq_tmp$x##1063:GHC.Types.Int -> lq_tmp$x##1064:{lq_tmp$x##1059 : GHC.Types.Int | 0 /= lq_tmp$x##1059} -> GHC.Types.Int"]]],[{"spanInfo":{"startLine":63,"endLine":63,"endCol":7,"startCol":6,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["x","GHC.Types.Int"]]],[{"spanInfo":{"startLine":255,"endLine":255,"endCol":25,"startCol":24,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["x","{lq_tmp$x##3132 : a | lq_tmp$x##3132 == x##a1ov}"]]],[{"spanInfo":{"startLine":63,"endLine":63,"endCol":9,"startCol":8,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["y","GHC.Types.Int"]]],[{"spanInfo":{"startLine":349,"endLine":349,"endCol":24,"startCol":21,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801100","{lq_tmp$x##1569 : [{lq_tmp$x##1579 : a | $k_##1578[VV##1577:=lq_tmp$x##1579][lq_tmp$x##1573:=x##a1qu][lq_tmp$x##1574:=lq_anf$##7205759403792801099##d1WX]}]<\\lq_tmp$x##1576 VV -> {lq_tmp$x##1579 : a | $k_##1581[VV##1580:=lq_tmp$x##1579][lq_tmp$x##1573:=x##a1qu][lq_tmp$x##1574:=lq_anf$##7205759403792801099##d1WX][lq_tmp$x##1582:=lq_tmp$x##1576]}> | Example.notEmpty lq_tmp$x##1569\n                                                                                                                                                                                                                                                                                                                                                             && head lq_tmp$x##1569 == x##a1qu\n                                                                                                                                                                                                                                                                                                                                                             && len lq_tmp$x##1569 == 1 + len lq_anf$##7205759403792801099##d1WX\n                                                                                                                                                                                                                                                                                                                                                             && tail lq_tmp$x##1569 == lq_anf$##7205759403792801099##d1WX}"]]],[{"spanInfo":{"startLine":115,"endLine":115,"endCol":23,"startCol":18,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["GHC.Types.False","{lq_tmp$x##2551 : GHC.Types.Bool | not lq_tmp$x##2551\n                                   && lq_tmp$x##2551 == GHC.Types.False}"]]],[{"spanInfo":{"startLine":63,"endLine":63,"endCol":23,"startCol":22,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["x","{lq_tmp$x##1030 : GHC.Types.Int | lq_tmp$x##1030 == x##a1od}"]]],[{"spanInfo":{"startLine":171,"endLine":171,"endCol":45,"startCol":40,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["elems","{lq_tmp$x##4024 : GHC.Types.Int | (Example.notEmpty xs##a1on => lq_tmp$x##4024 > 0)\n                                  && lq_tmp$x##4024 == elems##a1oo\n                                  && lq_tmp$x##4024 >= 0}"]]],[{"spanInfo":{"startLine":300,"endLine":300,"endCol":24,"startCol":22,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["ds_d1UM","{lq_tmp$x##3816 : [p] | Example.notEmpty lq_tmp$x##3816\n                        && lq_tmp$x##3816 == ds_d1UM\n                        && len lq_tmp$x##3816 >= 0}"]]],[{"spanInfo":{"startLine":63,"endLine":63,"endCol":31,"startCol":30,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["z","{lq_tmp$x##1048 : GHC.Types.Int | lq_tmp$x##1048 == z##a1of}"]]],[{"spanInfo":{"startLine":322,"endLine":322,"endCol":43,"startCol":17,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801173","ds_d1UA:{VV##4683 : ({VV##4676 : GHC.Types.Int | $k_##4677}, {VV##4678 : GHC.Types.Int | $k_##4679})<\\lq_tmp$x##4680 VV -> {VV##4681 : GHC.Types.Int | $k_##4682}> | $k_##4684} -> {VV##4686 : GHC.Types.Int | $k_##4687}"]]],[{"spanInfo":{"startLine":243,"endLine":243,"endCol":23,"startCol":18,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["GHC.Types.False","{lq_tmp$x##2923 : GHC.Types.Bool | not lq_tmp$x##2923\n                                   && lq_tmp$x##2923 == GHC.Types.False}"]]],[{"spanInfo":{"startLine":73,"endLine":73,"endCol":27,"startCol":20,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801115","{lq_tmp$x##2495 : GHC.Types.Int | (Example.notEmpty xs##a1og => lq_tmp$x##2495 > 0)\n                                  && lq_tmp$x##2495 >= 0}"]]],[{"spanInfo":{"startLine":63,"endLine":63,"endCol":34,"startCol":33,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801087","{lq_tmp$x##1053 : GHC.Types.Int | lq_tmp$x##1053 == (lq_anf$##7205759403792801086##d1WK : int)}"]]],[{"spanInfo":{"startLine":189,"endLine":189,"endCol":29,"startCol":17,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["GHC.Num.$fNumInt","{lq_tmp$x##2770 : (GHC.Num.Num GHC.Types.Int) | lq_tmp$x##2770 == GHC.Num.$fNumInt}"]]],[{"spanInfo":{"startLine":288,"endLine":288,"endCol":12,"startCol":9,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["acc","a"]]],[{"spanInfo":{"startLine":32,"endLine":32,"endCol":8,"startCol":5,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["msg","{VV##623 : [{VV##618 : GHC.Types.Char | $k_##619}]<\\lq_tmp$x##620 VV -> {VV##621 : GHC.Types.Char | $k_##622}> | $k_##624}"]]],[{"spanInfo":{"startLine":324,"endLine":324,"endCol":28,"startCol":21,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["weights","{lq_tmp$x##4802 : [{lq_tmp$x##4799 : GHC.Types.Int | $k_##4762[VV##4761:=lq_tmp$x##4799][lq_tmp$x##4738:=lq_tmp$x##4802][lq_tmp$x##4743:=lq_anf$##7205759403792801173##d1Y9][lq_tmp$x##4744:=wxs##a1qi][lq_tmp$x##4763:=lq_tmp$x##4799]}] | (Example.notEmpty wxs##a1qi <=> Example.notEmpty lq_tmp$x##4802)\n                                                                                                                                                                                                                                            && lq_tmp$x##4802 == weights##a1qk\n                                                                                                                                                                                                                                            && len lq_tmp$x##4802 >= 0}"]]],[{"spanInfo":{"startLine":172,"endLine":172,"endCol":24,"startCol":17,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[[null,"{VV : forall a .\n      {lq_tmp$x##3976 : (GHC.Maybe.Maybe a) | not (isJust lq_tmp$x##3976)} | VV == GHC.Maybe.Nothing}"]]],[{"spanInfo":{"startLine":32,"endLine":32,"endCol":20,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["$dIP_a1E9","{lq_tmp$x##889 : (GHC.Classes.IP [GHC.Types.Char] GHC.Stack.Types.CallStack) | lq_tmp$x##889 == $dIP_a1E9}"]]],[{"spanInfo":{"startLine":32,"endLine":32,"endCol":4,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.die","forall a . lq_tmp$x##615:{v : [GHC.Types.Char] | false} -> a"]]],[{"spanInfo":{"startLine":308,"endLine":308,"endCol":16,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801164","{lq_tmp$x##4253 : [{lq_tmp$x##4257 : GHC.Integer.Type.Integer | $k_##4256[VV##4255:=lq_tmp$x##4257]}]<\\lq_tmp$x##4254 VV -> {lq_tmp$x##4257 : GHC.Integer.Type.Integer | $k_##4259[VV##4258:=lq_tmp$x##4257][lq_tmp$x##4260:=lq_tmp$x##4254]}> | not (Example.notEmpty lq_tmp$x##4253)\n                                                                                                                                                                                                                                                 && len lq_tmp$x##4253 == 0}"]]],[{"spanInfo":{"startLine":79,"endLine":79,"endCol":11,"startCol":9,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["xs","[GHC.Types.Int]"]]],[{"spanInfo":{"startLine":215,"endLine":215,"endCol":17,"startCol":15,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["xs","{lq_tmp$x##1267 : [a] | lq_tmp$x##1267 == xs##a1ot\n                        && len lq_tmp$x##1267 >= 0}"]]],[{"spanInfo":{"startLine":216,"endLine":216,"endCol":54,"startCol":19,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801093","{lq_tmp$x##1197 : [GHC.Types.Char] | len lq_tmp$x##1197 == strLen lq_anf$##7205759403792801092##d1WQ\n                                     && lq_tmp$x##1197 ~~ lq_anf$##7205759403792801092##d1WQ}"]]],[{"spanInfo":{"startLine":32,"endLine":32,"endCol":20,"startCol":17,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["msg","{lq_tmp$x##894 : [{lq_tmp$x##891 : GHC.Types.Char | $k_##619[VV##618:=lq_tmp$x##891][VV##623:=lq_tmp$x##894]}]<\\lq_tmp$x##895 VV -> {lq_tmp$x##893 : GHC.Types.Char | $k_##622[VV##621:=lq_tmp$x##893][VV##623:=lq_tmp$x##894][lq_tmp$x##620:=lq_tmp$x##895][lq_tmp$x##892:=lq_tmp$x##895]}> | lq_tmp$x##894 == msg##a1iu\n                                                                                                                                                                                                                                                                                               && len lq_tmp$x##894 >= 0\n                                                                                                                                                                                                                                                                                               && $k_##624[VV##623:=lq_tmp$x##894]}"]]],[{"spanInfo":{"startLine":50,"endLine":50,"endCol":23,"startCol":14,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["GHC.Real.$fIntegralInt","{lq_tmp$x##934 : (GHC.Real.Integral GHC.Types.Int) | lq_tmp$x##934 == GHC.Real.$fIntegralInt}"]]],[{"spanInfo":{"startLine":160,"endLine":160,"endCol":21,"startCol":14,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.size","forall a .\nlq_tmp$x##2414:[a] -> {VV##0 : GHC.Types.Int | (Example.notEmpty lq_tmp$x##2414 => VV##0 > 0)\n                                               && VV##0 >= 0}"]]],[{"spanInfo":{"startLine":253,"endLine":253,"endCol":24,"startCol":18,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801135","{lq_tmp$x##3300 : [{lq_tmp$x##3310 : a | $k_##3309[VV##3308:=lq_tmp$x##3310][lq_tmp$x##3304:=x##a1ov][lq_tmp$x##3305:=ys##a1va]}]<\\lq_tmp$x##3307 VV -> {lq_tmp$x##3310 : a | $k_##3312[VV##3311:=lq_tmp$x##3310][lq_tmp$x##3304:=x##a1ov][lq_tmp$x##3305:=ys##a1va][lq_tmp$x##3313:=lq_tmp$x##3307]}> | Example.notEmpty lq_tmp$x##3300\n                                                                                                                                                                                                                                                                                                         && head lq_tmp$x##3300 == x##a1ov\n                                                                                                                                                                                                                                                                                                         && len lq_tmp$x##3300 == 1 + len ys##a1va\n                                                                                                                                                                                                                                                                                                         && tail lq_tmp$x##3300 == ys##a1va}"]]],[{"spanInfo":{"startLine":306,"endLine":306,"endCol":22,"startCol":21,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801156","{lq_tmp$x##4061 : GHC.Integer.Type.Integer | lq_tmp$x##4061 == 4}"]]],[{"spanInfo":{"startLine":252,"endLine":252,"endCol":8,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.groupEq","forall a .\n(Eq<[]> a) =>\nlq_tmp$x##3022:[a] -> [{VV##0 : [a] | Example.notEmpty VV##0}]"]]],[{"spanInfo":{"startLine":73,"endLine":73,"endCol":17,"startCol":16,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801114","{lq_tmp$x##2486 : GHC.Types.Int | lq_tmp$x##2486 == (lq_anf$##7205759403792801113##d1Xb : int)}"]]],[{"spanInfo":{"startLine":239,"endLine":239,"endCol":31,"startCol":24,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801132","{lq_tmp$x##2974 : a | $k_##2973[VV##2972:=lq_tmp$x##2974][lq_tmp$x##2970:=xs##a1ou]}"]]],[{"spanInfo":{"startLine":211,"endLine":212,"endCol":56,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801088","{lq_tmp$x##1078 : [p] | Example.notEmpty lq_tmp$x##1078\n                        && lq_tmp$x##1078 == ds_d1TM\n                        && len lq_tmp$x##1078 >= 0}"]]],[{"spanInfo":{"startLine":270,"endLine":270,"endCol":31,"startCol":23,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801169","lq_tmp$x##4472:[{lq_tmp$x##4485 : [{lq_tmp$x##4482 : a | $k_##4476[VV##4475:=lq_tmp$x##4482][VV##4480:=lq_tmp$x##4485][lq_tmp$x##4471:=lq_anf$##7205759403792801168##d1Y4]}]<\\lq_tmp$x##4483 VV -> {lq_tmp$x##4484 : a | $k_##4479[VV##4478:=lq_tmp$x##4484][VV##4480:=lq_tmp$x##4485][lq_tmp$x##4471:=lq_anf$##7205759403792801168##d1Y4][lq_tmp$x##4477:=lq_tmp$x##4483]}> | $k_##4481[VV##4480:=lq_tmp$x##4485][lq_tmp$x##4471:=lq_anf$##7205759403792801168##d1Y4]}] -> {lq_tmp$x##4466 : [{lq_tmp$x##4488 : a | $k_##4487[VV##4486:=lq_tmp$x##4488][lq_tmp$x##4471:=lq_anf$##7205759403792801168##d1Y4]}] | Example.notEmpty lq_tmp$x##4472 <=> Example.notEmpty lq_tmp$x##4466}"]]],[{"spanInfo":{"startLine":308,"endLine":308,"endCol":7,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.sumBad","GHC.Integer.Type.Integer"]]],[{"spanInfo":{"startLine":289,"endLine":289,"endCol":39,"startCol":30,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801138","a"]]],[{"spanInfo":{"startLine":289,"endLine":289,"endCol":29,"startCol":28,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["ds_d1Rt","lq_tmp$x##3525:a -> lq_tmp$x##3526:b -> a"]]],[{"spanInfo":{"startLine":81,"endLine":81,"endCol":10,"startCol":5,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["total","GHC.Types.Int"]]],[{"spanInfo":{"startLine":72,"endLine":73,"endCol":27,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801111","{lq_tmp$x##2421 : [a] | lq_tmp$x##2421 == ds_d1Tn\n                        && len lq_tmp$x##2421 >= 0}"]]],[{"spanInfo":{"startLine":357,"endLine":357,"endCol":22,"startCol":21,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["x","{lq_tmp$x##1426 : a | lq_tmp$x##1426 == x##a1qA}"]]],[{"spanInfo":{"startLine":349,"endLine":349,"endCol":25,"startCol":20,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801101","{lq_tmp$x##1594 : [{lq_tmp$x##1606 : [{lq_tmp$x##1603 : a | $k_##1597[VV##1596:=lq_tmp$x##1603][VV##1601:=lq_tmp$x##1606]}]<\\lq_tmp$x##1604 VV -> {lq_tmp$x##1605 : a | $k_##1600[VV##1599:=lq_tmp$x##1605][VV##1601:=lq_tmp$x##1606][lq_tmp$x##1598:=lq_tmp$x##1604]}> | $k_##1602[VV##1601:=lq_tmp$x##1606]}]<\\lq_tmp$x##1595 VV -> {lq_tmp$x##1606 : [{lq_tmp$x##1603 : a | $k_##1608[VV##1607:=lq_tmp$x##1603][VV##1610:=lq_tmp$x##1605][VV##1612:=lq_tmp$x##1606][lq_tmp$x##1614:=lq_tmp$x##1595]}]<\\lq_tmp$x##1604 VV -> {lq_tmp$x##1605 : a | $k_##1611[VV##1607:=lq_tmp$x##1603][VV##1610:=lq_tmp$x##1605][VV##1612:=lq_tmp$x##1606][lq_tmp$x##1614:=lq_tmp$x##1595]}> | $k_##1613[VV##1612:=lq_tmp$x##1606][lq_tmp$x##1614:=lq_tmp$x##1595]}> | not (Example.notEmpty lq_tmp$x##1594)\nlen lq_tmp$x##1594 == 0}"]]],[{"spanInfo":{"startLine":321,"endLine":321,"endCol":10,"startCol":5,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["elems","{lq_tmp$x##4882 : [{lq_tmp$x##4907 : GHC.Types.Int | $k_##4906[VV##4905:=lq_tmp$x##4907][lq_tmp$x##4887:=lq_anf$##7205759403792801175##d1Yb][lq_tmp$x##4888:=wxs##a1qi]}] | Example.notEmpty wxs##a1qi <=> Example.notEmpty lq_tmp$x##4882}"]]],[{"spanInfo":{"startLine":322,"endLine":322,"endCol":43,"startCol":40,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["wxs","{lq_tmp$x##4785 : [({lq_tmp$x##4774 : GHC.Types.Int | 0 < lq_tmp$x##4774}, {lq_tmp$x##4775 : GHC.Types.Int | 0 < lq_tmp$x##4775})] | Example.notEmpty lq_tmp$x##4785\n                                                                                                                                     && lq_tmp$x##4785 == wxs##a1qi\n                                                                                                                                     && len lq_tmp$x##4785 >= 0}"]]],[{"spanInfo":{"startLine":174,"endLine":174,"endCol":24,"startCol":17,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.size","forall a .\nlq_tmp$x##2414:[a] -> {VV##0 : GHC.Types.Int | (Example.notEmpty lq_tmp$x##2414 => VV##0 > 0)\n                                               && VV##0 >= 0}"]]],[{"spanInfo":{"startLine":212,"endLine":212,"endCol":56,"startCol":15,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.die","{VV : forall a .\n      lq_tmp$x##1116:{lq_tmp$x##1112 : [GHC.Types.Char] | false} -> a | VV == Example.die}"]]],[{"spanInfo":{"startLine":239,"endLine":239,"endCol":21,"startCol":17,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[[null,"{VV : forall a .\n      lq_tmp$x##2958:a -> {lq_tmp$x##2956 : (GHC.Maybe.Maybe a) | isJust lq_tmp$x##2956\n                                                                  && fromJust lq_tmp$x##2956 == lq_tmp$x##2958} | VV == GHC.Maybe.Just}"]]],[{"spanInfo":{"startLine":63,"endLine":63,"endCol":5,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.avg3","lq_tmp$x##1010:GHC.Types.Int -> lq_tmp$x##1011:GHC.Types.Int -> lq_tmp$x##1012:GHC.Types.Int -> GHC.Types.Int"]]],[{"spanInfo":{"startLine":238,"endLine":238,"endCol":24,"startCol":17,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[[null,"{VV : forall a .\n      {lq_tmp$x##3015 : (GHC.Maybe.Maybe a) | not (isJust lq_tmp$x##3015)} | VV == GHC.Maybe.Nothing}"]]],[{"spanInfo":{"startLine":285,"endLine":285,"endCol":34,"startCol":22,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.die","{VV : forall a .\n      lq_tmp$x##3587:{lq_tmp$x##3583 : [GHC.Types.Char] | false} -> a | VV == Example.die}"]]],[{"spanInfo":{"startLine":115,"endLine":115,"endCol":9,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.notEmpty","forall a .\nlq_tmp$x##2526:[a] -> {VV : GHC.Types.Bool | VV <=> Example.notEmpty lq_tmp$x##2526}"]]],[{"spanInfo":{"startLine":354,"endLine":354,"endCol":45,"startCol":42,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["etc","{lq_tmp$x##1768 : [a] | lq_tmp$x##1768 == etc##a1qx\n                        && len lq_tmp$x##1768 >= 0}"]]],[{"spanInfo":{"startLine":348,"endLine":354,"endCol":46,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801106","{lq_tmp$x##2164 : GHC.Types.Bool | (lq_tmp$x##2164 <=> x##a1qu <= y##a1qw)\n                                   && lq_tmp$x##2164 == lq_anf$##7205759403792801105##d1X3}"]]],[{"spanInfo":{"startLine":358,"endLine":358,"endCol":47,"startCol":24,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801096","{lq_tmp$x##1305 : [GHC.Types.Char] | len lq_tmp$x##1305 == strLen lq_anf$##7205759403792801095##d1WT\n                                     && lq_tmp$x##1305 ~~ lq_anf$##7205759403792801095##d1WT}"]]],[{"spanInfo":{"startLine":49,"endLine":49,"endCol":34,"startCol":18,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801080","{lq_tmp$x##945 : [GHC.Types.Char] | len lq_tmp$x##945 == strLen lq_anf$##7205759403792801079##d1WD\n                                    && lq_tmp$x##945 ~~ lq_anf$##7205759403792801079##d1WD}"]]],[{"spanInfo":{"startLine":253,"endLine":253,"endCol":37,"startCol":27,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801136","[{lq_tmp$x##3331 : [{lq_tmp$x##3349 : a | $k_##3348[VV##3347:=lq_tmp$x##3349][lq_tmp$x##3341:=fix$36$$36$dEq_a1xv][lq_tmp$x##3342:=zs##a1vc]}] | Example.notEmpty lq_tmp$x##3331}]"]]],[{"spanInfo":{"startLine":157,"endLine":157,"endCol":8,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.average","lq_tmp$x##3875:{VV##0 : [GHC.Types.Int] | Example.notEmpty VV##0} -> GHC.Types.Int"]]],[{"spanInfo":{"startLine":159,"endLine":159,"endCol":10,"startCol":5,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["total","GHC.Types.Int"]]],[{"spanInfo":{"startLine":79,"endLine":79,"endCol":26,"startCol":21,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["total","{lq_tmp$x##3871 : GHC.Types.Int | lq_tmp$x##3871 == total##a1oi}"]]],[{"spanInfo":{"startLine":328,"endLine":328,"endCol":20,"startCol":18,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[[null,"{VV : forall a <p :: a a -> Bool>.\n      {lq_tmp$x##4319 : [a]<\\lq_tmp$x##4320 VV -> {lq_tmp$x##4318 : a<p lq_tmp$x##4320> | true}> | not (Example.notEmpty lq_tmp$x##4319)\n                                                                                                   && len lq_tmp$x##4319 == 0} | VV == GHC.Types.[]}"]]],[{"spanInfo":{"startLine":81,"endLine":81,"endCol":21,"startCol":14,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[[null,"GHC.Types.Int"]]],[{"spanInfo":{"startLine":242,"endLine":242,"endCol":22,"startCol":18,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["GHC.Types.True","{lq_tmp$x##2886 : GHC.Types.Bool | lq_tmp$x##2886\n                                   && lq_tmp$x##2886 == GHC.Types.True}"]]],[{"spanInfo":{"startLine":351,"endLine":351,"endCol":25,"startCol":20,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801110","{lq_tmp$x##2336 : [{lq_tmp$x##2346 : a | $k_##2345[VV##2344:=lq_tmp$x##2346][lq_tmp$x##2340:=x##a1qu][lq_tmp$x##2341:=s##a1Lx]}]<\\lq_tmp$x##2343 VV -> {lq_tmp$x##2346 : a | $k_##2348[VV##2347:=lq_tmp$x##2346][lq_tmp$x##2340:=x##a1qu][lq_tmp$x##2341:=s##a1Lx][lq_tmp$x##2349:=lq_tmp$x##2343]}> | Example.notEmpty lq_tmp$x##2336\n                                                                                                                                                                                                                                                                                                       && head lq_tmp$x##2336 == x##a1qu\n                                                                                                                                                                                                                                                                                                       && len lq_tmp$x##2336 == 1 + len s##a1Lx\n                                                                                                                                                                                                                                                                                                       && tail lq_tmp$x##2336 == s##a1Lx}"]]],[{"spanInfo":{"startLine":188,"endLine":189,"endCol":29,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801119","{lq_tmp$x##2669 : [a] | lq_tmp$x##2669 == ds_d1SK\n                        && len lq_tmp$x##2669 >= 0}"]]],[{"spanInfo":{"startLine":323,"endLine":323,"endCol":26,"startCol":17,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[[null,"{lq_tmp$x##4938 : GHC.Types.Int | $k_##4666[VV##4665:=lq_tmp$x##4938][lq_tmp$x##4662:=lq_anf$##7205759403792801171##d1Y7][lq_tmp$x##4663:=elems##a1qj][lq_tmp$x##4667:=lq_tmp$x##4938][lq_tmp$x##4941:=elems##a1qj]}"]]],[{"spanInfo":{"startLine":354,"endLine":354,"endCol":13,"startCol":11,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["ss","{VV##2070 : [{VV##2060 : [{VV##2055 : a | $k_##2056}]<\\lq_tmp$x##2057 VV -> {VV##2058 : a | $k_##2059}> | $k_##2061}]<\\lq_tmp$x##2062 VV -> {VV##2068 : [{VV##2063 : a | $k_##2064}]<\\lq_tmp$x##2065 VV -> {VV##2066 : a | $k_##2067}> | $k_##2069}> | $k_##2071}"]]],[{"spanInfo":{"startLine":61,"endLine":61,"endCol":28,"startCol":21,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801081","{lq_tmp$x##985 : GHC.Types.Int | lq_tmp$x##985 == x##a1nb + y##a1nc}"]]],[{"spanInfo":{"startLine":82,"endLine":82,"endCol":21,"startCol":19,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["xs","{lq_tmp$x##3839 : [GHC.Types.Int] | lq_tmp$x##3839 == xs##a1oh\n                                    && len lq_tmp$x##3839 >= 0}"]]],[{"spanInfo":{"startLine":354,"endLine":354,"endCol":9,"startCol":8,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["s","{VV##1988 : [{VV##1983 : a | $k_##1984}]<\\lq_tmp$x##1985 VV -> {VV##1986 : a | $k_##1987}> | $k_##1989}"]]],[{"spanInfo":{"startLine":189,"endLine":189,"endCol":29,"startCol":21,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801122","{lq_tmp$x##2743 : GHC.Types.Int | 0 < lq_tmp$x##2743}"]]],[{"spanInfo":{"startLine":306,"endLine":306,"endCol":16,"startCol":15,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801153","{lq_tmp$x##4055 : GHC.Integer.Type.Integer | lq_tmp$x##4055 == 1}"]]],[{"spanInfo":{"startLine":306,"endLine":306,"endCol":20,"startCol":19,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801155","{lq_tmp$x##4059 : GHC.Integer.Type.Integer | lq_tmp$x##4059 == 3}"]]],[{"spanInfo":{"startLine":237,"endLine":237,"endCol":9,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.safeHead","forall a . lq_tmp$x##2926:[a] -> (GHC.Maybe.Maybe a)"]]],[{"spanInfo":{"startLine":306,"endLine":306,"endCol":24,"startCol":23,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801157","{lq_tmp$x##4063 : GHC.Integer.Type.Integer | lq_tmp$x##4063 == 5}"]]],[{"spanInfo":{"startLine":216,"endLine":216,"endCol":54,"startCol":15,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["Example.die","{VV : forall a .\n      lq_tmp$x##1210:{lq_tmp$x##1206 : [GHC.Types.Char] | false} -> a | VV == Example.die}"]]],[{"spanInfo":{"startLine":351,"endLine":351,"endCol":11,"startCol":5,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["lq_anf$##7205759403792801105","{lq_tmp$x##2149 : GHC.Types.Bool | lq_tmp$x##2149 <=> x##a1qu <= y##a1qw}"]]],[{"spanInfo":{"startLine":354,"endLine":354,"endCol":41,"startCol":40,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["y","{lq_tmp$x##1764 : a | lq_tmp$x##1764 == y##a1qw}"]]],[{"spanInfo":{"startLine":288,"endLine":288,"endCol":25,"startCol":22,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},[["acc","{lq_tmp$x##3446 : a | lq_tmp$x##3446 == acc##a1qc}"]]]],"o_bots":[{"spanInfo":{"startLine":32,"endLine":32,"endCol":8,"startCol":5,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true},{"spanInfo":{"startLine":32,"endLine":32,"endCol":20,"startCol":17,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true}],"o_result":{"tag":"Unsafe","contents":[{"numCstr":62,"numIter":68,"numBrkt":63,"numChck":699,"numVald":106},[{"msg":"Liquid Type Mismatch\n    .\n    The inferred type\n      VV : {v : [GHC.Integer.Type.Integer] | not (notEmpty v)\n                                             && v == ?a\n                                             && len v == 0\n                                             && len v >= 0}\n    .\n    is not a subtype of the required type\n      VV : {VV : [GHC.Integer.Type.Integer] | notEmpty VV}\n    .\n    in the context\n      ?a : {?a : [GHC.Integer.Type.Integer] | not (notEmpty ?a)\n                                              && len ?a == 0\n                                              && len ?a >= 0}\n    Constraint id 53","pos":{"spanInfo":{"startLine":308,"endLine":308,"endCol":16,"startCol":1,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true}},{"msg":"Liquid Type Mismatch\n    .\n    The inferred type\n      VV : {v : GHC.Types.Int | (notEmpty xs => v > 0)\n                                && v == elems\n                                && v >= 0}\n    .\n    is not a subtype of the required type\n      VV : {VV : GHC.Types.Int | 0 /= VV}\n    .\n    in the context\n      elems : {elems : GHC.Types.Int | (notEmpty xs => elems > 0)\n                                       && elems >= 0}\n       \n      xs : {v : [GHC.Types.Int] | len v >= 0}\n    Constraint id 86","pos":{"spanInfo":{"startLine":79,"endLine":79,"endCol":32,"startCol":27,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true}},{"msg":"Liquid Type Mismatch\n    .\n    The inferred type\n      VV : {v : [GHC.Types.Int] | v == xs\n                                  && len v >= 0}\n    .\n    is not a subtype of the required type\n      VV : {VV : [GHC.Types.Int] | notEmpty VV}\n    .\n    in the context\n      xs : {v : [GHC.Types.Int] | len v >= 0}\n    Constraint id 87","pos":{"spanInfo":{"startLine":81,"endLine":81,"endCol":21,"startCol":19,"filename":"/home/ricardo/docencia/verifAsistid/2021-22/versionProfesor/LiquidHaskell/lh-tests/src/Example.lhs"},"realSpan":true}}]]}}