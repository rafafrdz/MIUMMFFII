(set-option :auto-config false)
(set-option :model true)
(set-option :model.partial false)

(set-option :smt.mbqi false)

(define-sort Str () Int)
(declare-fun strLen (Str) Int)
(declare-fun subString (Str Int Int) Str)
(declare-fun concatString (Str Str) Str)
(define-sort Elt () Int)
(define-sort LSet () (Array Elt Bool))
(define-fun smt_set_emp () LSet ((as const LSet) false))
(define-fun smt_set_sng ((x Elt)) LSet (store ((as const LSet) false) x true))
(define-fun smt_set_mem ((x Elt) (s LSet)) Bool (select s x))
(define-fun smt_set_add ((s LSet) (x Elt)) LSet (store s x true))
(define-fun smt_set_cup ((s1 LSet) (s2 LSet)) LSet ((_ map or) s1 s2))
(define-fun smt_set_cap ((s1 LSet) (s2 LSet)) LSet ((_ map and) s1 s2))
(define-fun smt_set_com ((s LSet)) LSet ((_ map not) s))
(define-fun smt_set_dif ((s1 LSet) (s2 LSet)) LSet (smt_set_cap s1 (smt_set_com s2)))
(define-fun smt_set_sub ((s1 LSet) (s2 LSet)) Bool (= smt_set_emp (smt_set_dif s1 s2)))
(define-sort Map () (Array Elt Elt))
(define-fun smt_map_sel ((m Map) (k Elt)) Elt (select m k))
(define-fun smt_map_sto ((m Map) (k Elt) (v Elt)) Map (store m k v))
(define-fun smt_map_cup ((m1 Map) (m2 Map)) Map ((_ map (+ (Elt Elt) Elt)) m1 m2))
(define-fun smt_map_def ((v Elt)) Map ((as const (Map)) v))
(define-fun bool_to_int ((b Bool)) Int (ite b 1 0))
(define-fun Z3_OP_MUL ((x Int) (y Int)) Int (* x y))
(define-fun Z3_OP_DIV ((x Int) (y Int)) Int (div x y))
(declare-fun lq_tmp$36$x$35$$35$2119 () Int)
(declare-fun lq_karg$36$xs$35$$35$a3CO$35$$35$k_$35$$35$3690 () Int)
(declare-fun lq_tmp$36$x$35$$35$1785 () Int)
(declare-fun VV$35$$35$F$35$$35$28 () Int)
(declare-fun lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4302 () Int)
(declare-fun lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4221 () Int)
(declare-fun lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4307 () Int)
(declare-fun GHC.Base.id () Int)
(declare-fun cast_as_int () Int)
(declare-fun lq_tmp$36$x$35$$35$1435 () Int)
(declare-fun lq_tmp$36$x$35$$35$3686 () Int)
(declare-fun y$35$$35$a3Dc () Int)
(declare-fun VV$35$$35$F$35$$35$31 () Int)
(declare-fun lq_tmp$36$x$35$$35$4791 () Int)
(declare-fun fix$36$$36$dOrd_a3N6 () Int)
(declare-fun lq_karg$36$xs$35$$35$a3CL$35$$35$k_$35$$35$2630 () Int)
(declare-fun lq_karg$36$VV$35$$35$4299$35$$35$k_$35$$35$4300 () Int)
(declare-fun lq_tmp$36$x$35$$35$1648 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808669$35$$35$d3V3 () Int)
(declare-fun lq_karg$36$ds_d3Oe$35$$35$k_$35$$35$2824 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792808739$35$$35$d3Wb$35$$35$k_$35$$35$3763 () Int)
(declare-fun VV$35$$35$F$35$$35$82 () Int)
(declare-fun lq_tmp$36$x$35$$35$2980 () Int)
(declare-fun lq_karg$36$totWeight$35$$35$a3D2$35$$35$k_$35$$35$4314 () Int)
(declare-fun GHC.Real.rem () Int)
(declare-fun lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4095 () Int)
(declare-fun GHC.List.init () Int)
(declare-fun lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4163 () Int)
(declare-fun wxs$35$$35$a3CY () Int)
(declare-fun lq_tmp$36$x$35$$35$3635 () Int)
(declare-fun addrLen () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808772$35$$35$d3WI () Int)
(declare-fun Trees.Measures.avg2 () Int)
(declare-fun lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4090 () Int)
(declare-fun lq_karg$36$ds_d3RG$35$$35$k_$35$$35$1662 () Int)
(declare-fun ds_d3R9 () Int)
(declare-fun lq_tmp$36$x$35$$35$3484 () Int)
(declare-fun lq_tmp$36$x$35$$35$4593 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808726$35$$35$d3VY () Int)
(declare-fun lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4158 () Int)
(declare-fun papp5 () Int)
(declare-fun GHC.List.iterate () Int)
(declare-fun x_Tuple21 () Int)
(declare-fun lq_tmp$36$x$35$$35$993 () Int)
(declare-fun lq_karg$36$lq_tmp$36$x$35$$35$4217$35$$35$k_$35$$35$4219 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808776$35$$35$d3WM () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808668$35$$35$d3V2 () Int)
(declare-fun lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4224 () Int)
(declare-fun lq_tmp$36$x$35$$35$1309 () Int)
(declare-fun GHC.Classes.$61$$61$ () Int)
(declare-fun GHC.Types.C$35$ () Int)
(declare-fun lit$36$Measures.lhs () Str)
(declare-fun GHC.List.drop () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792808707$35$$35$d3VF$35$$35$k_$35$$35$2686 () Int)
(declare-fun lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4087 () Int)
(declare-fun x$35$$35$a3CV () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808763$35$$35$d3Wz () Int)
(declare-fun Trees.Measures.safeHead () Int)
(declare-fun VV$35$$35$F$35$$35$18 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808685$35$$35$d3Vj () Str)
(declare-fun lit$36$Hello () Str)
(declare-fun lit$36$cannot$32$add$32$up$32$empty$32$list () Str)
(declare-fun lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4214 () Int)
(declare-fun elems$35$$35$a3CD () Int)
(declare-fun VV$35$$35$F$35$$35$23 () Int)
(declare-fun lq_tmp$36$x$35$$35$2031 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808713$35$$35$d3VL () Int)
(declare-fun lq_karg$36$weights$35$$35$a3D0$35$$35$k_$35$$35$4300 () Int)
(declare-fun ds_d3Qy () Int)
(declare-fun lq_tmp$36$x$35$$35$2468 () Int)
(declare-fun Data.Foldable.length () Int)
(declare-fun x_Tuple33 () Int)
(declare-fun lq_tmp$36$x$35$$35$2820 () Int)
(declare-fun lq_tmp$36$x$35$$35$2208 () Int)
(declare-fun lq_tmp$36$x$35$$35$4217 () Int)
(declare-fun GHC.Types.LT () Int)
(declare-fun lq_tmp$36$x$35$$35$4149 () Int)
(declare-fun VV$35$$35$F$35$$35$45 () Int)
(declare-fun lq_tmp$36$x$35$$35$4369 () Int)
(declare-fun lq_tmp$36$x$35$$35$3391 () Int)
(declare-fun GHC.List.replicate () Int)
(declare-fun lq_tmp$36$x$35$$35$3759 () Int)
(declare-fun lq_tmp$36$x$35$$35$2750 () Int)
(declare-fun GHC.List.zipWith () Int)
(declare-fun lq_tmp$36$x$35$$35$2381 () Int)
(declare-fun VV$35$$35$F$35$$35$265 () Str)
(declare-fun lq_tmp$36$x$35$$35$1100 () Int)
(declare-fun w$35$$35$a3D6 () Int)
(declare-fun lq_tmp$36$x$35$$35$899 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808761$35$$35$d3Wx () Int)
(declare-fun lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4156 () Int)
(declare-fun GHC.Classes.$62$$61$ () Int)
(declare-fun lq_tmp$36$x$35$$35$4037 () Int)
(declare-fun elems$35$$35$a3Cy () Int)
(declare-fun lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4090 () Int)
(declare-fun Trees.Measures.sumBad () Int)
(declare-fun ds_d3OZ () Int)
(declare-fun lq_tmp$36$x$35$$35$2124 () Int)
(declare-fun GHC.Num.fromInteger () Int)
(declare-fun lq_tmp$36$x$35$$35$3284 () Int)
(declare-fun lq_karg$36$ds_d3Oe$35$$35$k_$35$$35$2686 () Int)
(declare-fun lq_tmp$36$x$35$$35$4067 () Int)
(declare-fun lq_tmp$36$x$35$$35$1682 () Int)
(declare-fun ds_d3QT () Int)
(declare-fun papp3 () Int)
(declare-fun VV$35$$35$F$35$$35$136 () Int)
(declare-fun VV$35$$35$F$35$$35$15 () Int)
(declare-fun lq_tmp$36$x$35$$35$2241 () Int)
(declare-fun GHC.List.span () Int)
(declare-fun lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4219 () Int)
(declare-fun VV$35$$35$F$35$$35$51 () Int)
(declare-fun total$35$$35$a3CA () Int)
(declare-fun x$35$$35$a3CK () Int)
(declare-fun Trees.Measures.size1 () Int)
(declare-fun lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4302 () Int)
(declare-fun lq_tmp$36$x$35$$35$1581 () Int)
(declare-fun lq_karg$36$VV$35$$35$4157$35$$35$k_$35$$35$4158 () Int)
(declare-fun lq_tmp$36$x$35$$35$3169 () Int)
(declare-fun Trees.Measures.risers () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808738$35$$35$d3Wa () Int)
(declare-fun GHC.Classes.$62$ () Int)
(declare-fun lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4221 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808661$35$$35$d3UV () Str)
(declare-fun lq_tmp$36$x$35$$35$4166 () Int)
(declare-fun lq_tmp$36$x$35$$35$1037 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808677$35$$35$d3Vb () Int)
(declare-fun VV$35$$35$F$35$$35$271 () Str)
(declare-fun lq_tmp$36$x$35$$35$1675 () Int)
(declare-fun lq_tmp$36$x$35$$35$2007 () Int)
(declare-fun lq_karg$36$weights$35$$35$a3D0$35$$35$k_$35$$35$4314 () Int)
(declare-fun lq_tmp$36$x$35$$35$1150 () Int)
(declare-fun VV$35$$35$F$35$$35$48 () Int)
(declare-fun VV$35$$35$F$35$$35$37 () Int)
(declare-fun ds_d3Oz () Int)
(declare-fun GHC.Types.False () Bool)
(declare-fun GHC.List.scanr1 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808759$35$$35$d3Wv () Int)
(declare-fun ds_d3Q4 () Int)
(declare-fun Trees.Measures.map () Int)
(declare-fun lq_tmp$36$x$35$$35$1408 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808751$35$$35$d3Wn () Int)
(declare-fun lq_tmp$36$x$35$$35$3428 () Int)
(declare-fun lq_tmp$36$x$35$$35$775 () Int)
(declare-fun Trees.Measures.average$39$ () Int)
(declare-fun lq_tmp$36$x$35$$35$3331 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808737$35$$35$d3W9 () Int)
(declare-fun GHC.Types.$58$ () Int)
(declare-fun xs$35$$35$a3CO () Int)
(declare-fun GHC.Real.div () Int)
(declare-fun lq_karg$36$totWeight$35$$35$a3D2$35$$35$k_$35$$35$4214 () Int)
(declare-fun GHC.List.scanl () Int)
(declare-fun lq_karg$36$ds_d3So$35$$35$k_$35$$35$1662 () Int)
(declare-fun Trees.Measures.sum () Int)
(declare-fun lit$36$error () Str)
(declare-fun fix$36$$36$dIP_a3GN () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808688$35$$35$d3Vm () Int)
(declare-fun lq_tmp$36$x$35$$35$1298 () Int)
(declare-fun Trees.Measures.avg3 () Int)
(declare-fun lq_tmp$36$x$35$$35$4871 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792808707$35$$35$d3VF$35$$35$k_$35$$35$2507 () Int)
(declare-fun GHC.Tuple.$40$$44$$44$$41$ () Int)
(declare-fun papp4 () Int)
(declare-fun GHC.Types.Module () Int)
(declare-fun Trees.Measures.divide () Int)
(declare-fun VV$35$$35$F$35$$35$12 () Int)
(declare-fun lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4161 () Int)
(declare-fun lq_tmp$36$x$35$$35$992 () Int)
(declare-fun lq_tmp$36$x$35$$35$4565 () Int)
(declare-fun GHC.List.zip () Int)
(declare-fun VV$35$$35$F$35$$35$74 () Int)
(declare-fun lq_tmp$36$x$35$$35$3786 () Int)
(declare-fun fix$36$$36$dNum_a3Ku () Int)
(declare-fun VV$35$$35$F$35$$35$56 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808767$35$$35$d3WD () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808658$35$$35$d3US () Str)
(declare-fun lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4305 () Int)
(declare-fun lq_tmp$36$x$35$$35$1784 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808682$35$$35$d3Vg () Str)
(declare-fun VV$35$$35$F$35$$35$29 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808736$35$$35$d3W8 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808680$35$$35$d3Ve () Str)
(declare-fun GHC.Tuple.$40$$41$ () Int)
(declare-fun GHC.Types.I$35$ () Int)
(declare-fun GHC.Stack.Types.SrcLoc () Int)
(declare-fun lq_tmp$36$x$35$$35$2202 () Int)
(declare-fun lq_tmp$36$x$35$$35$3032 () Int)
(declare-fun lq_tmp$36$x$35$$35$2606 () Int)
(declare-fun Trees.Measures.avgMany () Int)
(declare-fun GHC.Num.$36$fNumInt () Int)
(declare-fun GHC.CString.unpackCString$35$ () Int)
(declare-fun VV$35$$35$F$35$$35$30 () Int)
(declare-fun lq_tmp$36$x$35$$35$3449 () Int)
(declare-fun VV$35$$35$F$35$$35$83 () Int)
(declare-fun x$35$$35$a3Cq () Int)
(declare-fun lq_tmp$36$x$35$$35$1240 () Int)
(declare-fun lq_tmp$36$x$35$$35$1262 () Int)
(declare-fun lq_tmp$36$x$35$$35$2863 () Int)
(declare-fun lq_tmp$36$x$35$$35$3792 () Int)
(declare-fun VV$35$$35$F$35$$35$42 () Int)
(declare-fun lq_karg$36$ys$35$$35$a3Fw$35$$35$k_$35$$35$2824 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808703$35$$35$d3VB () Bool)
(declare-fun lq_tmp$36$x$35$$35$4029 () Int)
(declare-fun VV$35$$35$F$35$$35$143 () Int)
(declare-fun lq_karg$36$ds_d3Oe$35$$35$k_$35$$35$2507 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808770$35$$35$d3WG () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792808694$35$$35$d3Vs$35$$35$k_$35$$35$1662 () Int)
(declare-fun lq_tmp$36$x$35$$35$2757 () Int)
(declare-fun ds_d3PW () Int)
(declare-fun GHC.List.dropWhile () Int)
(declare-fun ds_d3Ru () Int)
(declare-fun lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4216 () Int)
(declare-fun lq_tmp$36$x$35$$35$3361 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808667$35$$35$d3V1 () Int)
(declare-fun lq_karg$36$ds_d3Oz$35$$35$k_$35$$35$2630 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808754$35$$35$d3Wq () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808756$35$$35$d3Ws () Int)
(declare-fun ds_d3O0 () Int)
(declare-fun lq_karg$36$totWeight$35$$35$a3D2$35$$35$k_$35$$35$4219 () Int)
(declare-fun ds_d3PG () Int)
(declare-fun lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4085 () Int)
(declare-fun lq_tmp$36$x$35$$35$2371 () Int)
(declare-fun lq_karg$36$ds_d3R0$35$$35$k_$35$$35$4095 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808666$35$$35$d3V0 () Int)
(declare-fun lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$3690 () Int)
(declare-fun autolen () Int)
(declare-fun VV$35$$35$F$35$$35$125 () Int)
(declare-fun lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$3834 () Int)
(declare-fun lq_tmp$36$x$35$$35$4030 () Int)
(declare-fun lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4074 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808709$35$$35$d3VH () Int)
(declare-fun lq_tmp$36$x$35$$35$4715 () Int)
(declare-fun VV$35$$35$F$35$$35$107 () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792808693$35$$35$d3Vr () Int)
(declare-fun lq_karg$36$x$35$$35$a3CK$35$$35$k_$35$$35$2630 () Int)
(declare-fun VV$35$$35$F$35$$35$6 () Int)
(declare-fun x$35$$35$a3CQ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808724$35$$35$d3VW () Int)
(declare-fun lq_tmp$36$x$35$$35$4737 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808664$35$$35$d3UY () Str)
(declare-fun lq_tmp$36$x$35$$35$3815 () Int)
(declare-fun GHC.Integer.Type.$36$WJn$35$ () Int)
(declare-fun GHC.Real.$94$ () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792808710$35$$35$d3VI$35$$35$k_$35$$35$2824 () Int)
(declare-fun head () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808778$35$$35$d3WO () Int)
(declare-fun GHC.Real.mod () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808720$35$$35$d3VS () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808705$35$$35$d3VD () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808707$35$$35$d3VF () Int)
(declare-fun lq_karg$36$weights$35$$35$a3D0$35$$35$k_$35$$35$4307 () Int)
(declare-fun etc$35$$35$a3Dd () Int)
(declare-fun lq_tmp$36$x$35$$35$1718 () Int)
(declare-fun fix$36$$36$dEq_a3FO () Int)
(declare-fun lq_karg$36$weights$35$$35$a3D0$35$$35$k_$35$$35$4224 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808671$35$$35$d3V5 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808670$35$$35$d3V4 () Int)
(declare-fun lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4305 () Int)
(declare-fun lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4300 () Int)
(declare-fun lq_tmp$36$x$35$$35$1656 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792808688$35$$35$d3Vm$35$$35$k_$35$$35$1662 () Int)
(declare-fun lq_tmp$36$x$35$$35$2503 () Int)
(declare-fun GHC.Real.divMod () Int)
(declare-fun VV$35$$35$F$35$$35$49 () Int)
(declare-fun VV$35$$35$F$35$$35$36 () Int)
(declare-fun lq_tmp$36$x$35$$35$1234 () Int)
(declare-fun lq_tmp$36$x$35$$35$2024 () Int)
(declare-fun VV$35$$35$F$35$$35$148 () Int)
(declare-fun VV$35$$35$F$35$$35$115 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808672$35$$35$d3V6 () Int)
(declare-fun GHC.Integer.Type.Jn$35$ () Int)
(declare-fun Trees.Measures.foldl () Int)
(declare-fun lq_tmp$36$x$35$$35$2987 () Int)
(declare-fun lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4092 () Int)
(declare-fun lq_tmp$36$x$35$$35$4293 () Int)
(declare-fun x$35$$35$a3D5 () Int)
(declare-fun GHC.Classes.compare () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808766$35$$35$d3WC () Int)
(declare-fun lq_tmp$36$x$35$$35$3117 () Int)
(declare-fun p$35$$35$a3Kj () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808659$35$$35$d3UT () Str)
(declare-fun papp2 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808742$35$$35$d3We () Str)
(declare-fun lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4161 () Int)
(declare-fun VV$35$$35$F$35$$35$14 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808673$35$$35$d3V7 () Int)
(declare-fun lq_tmp$36$x$35$$35$4088 () Int)
(declare-fun lq_karg$36$weights$35$$35$a3D0$35$$35$k_$35$$35$4214 () Int)
(declare-fun lq_tmp$36$x$35$$35$4303 () Int)
(declare-fun VV$35$$35$F$35$$35$50 () Int)
(declare-fun GHC.Real.toInteger () Int)
(declare-fun GHC.Real.quotRem () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808764$35$$35$d3WA () Int)
(declare-fun lq_tmp$36$x$35$$35$3780 () Int)
(declare-fun GHC.Stack.Types.EmptyCallStack () Int)
(declare-fun lq_tmp$36$x$35$$35$2957 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808777$35$$35$d3WN () Int)
(declare-fun VV$35$$35$F$35$$35$55 () Int)
(declare-fun GHC.Stack.Types.emptyCallStack () Int)
(declare-fun Trees.Measures.die () Int)
(declare-fun lq_tmp$36$x$35$$35$4159 () Int)
(declare-fun lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4300 () Int)
(declare-fun lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4305 () Int)
(declare-fun GHC.List.reverse () Int)
(declare-fun GHC.Integer.Type.$36$WJp$35$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808775$35$$35$d3WL () Bool)
(declare-fun lq_anf$36$$35$$35$7205759403792808773$35$$35$d3WJ () Int)
(declare-fun lq_tmp$36$x$35$$35$3398 () Int)
(declare-fun VV$35$$35$F$35$$35$33 () Int)
(declare-fun Trees.Measures.head () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808727$35$$35$d3VZ () Int)
(declare-fun GHC.List.filter () Int)
(declare-fun lq_tmp$36$x$35$$35$1891 () Int)
(declare-fun fromJust () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808771$35$$35$d3WH () Int)
(declare-fun lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4161 () Int)
(declare-fun xs$35$$35$a3CL () Int)
(declare-fun GHC.List.cycle () Int)
(declare-fun ds_d3PI () Int)
(declare-fun GHC.List.$33$$33$ () Int)
(declare-fun lq_tmp$36$x$35$$35$1099 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808725$35$$35$d3VX () Int)
(declare-fun lq_karg$36$etc$35$$35$a3Dd$35$$35$k_$35$$35$1662 () Int)
(declare-fun lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4092 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808708$35$$35$d3VG () Int)
(declare-fun VV$35$$35$F$35$$35$8 () Int)
(declare-fun papp7 () Int)
(declare-fun lq_tmp$36$x$35$$35$3648 () Int)
(declare-fun VV$35$$35$F$35$$35$11 () Int)
(declare-fun GHC.Classes.$47$$61$ () Int)
(declare-fun Trees.Measures.$36$trModule () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808730$35$$35$d3W2 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808710$35$$35$d3VI () Int)
(declare-fun lq_tmp$36$x$35$$35$1690 () Int)
(declare-fun lq_tmp$36$x$35$$35$2682 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808735$35$$35$d3W7 () Int)
(declare-fun lq_karg$36$totWeight$35$$35$a3D2$35$$35$k_$35$$35$4300 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808734$35$$35$d3W6 () Int)
(declare-fun lq_tmp$36$x$35$$35$4453 () Int)
(declare-fun lq_tmp$36$x$35$$35$3814 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808714$35$$35$d3VM () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792808745$35$$35$d3Wh () Int)
(declare-fun GHC.List.break () Int)
(declare-fun GHC.Types.True () Bool)
(declare-fun Trees.Measures.eliminateStutter () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808731$35$$35$d3W3 () Int)
(declare-fun elems$35$$35$a3CB () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808712$35$$35$d3VK () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792808709$35$$35$d3VH$35$$35$k_$35$$35$2824 () Int)
(declare-fun VV$35$$35$F$35$$35$25 () Int)
(declare-fun GHC.Types.$91$$93$ () Int)
(declare-fun lq_tmp$36$x$35$$35$2826 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792808707$35$$35$d3VF$35$$35$k_$35$$35$2824 () Int)
(declare-fun GHC.List.splitAt () Int)
(declare-fun ys$35$$35$a3Fw () Int)
(declare-fun lq_tmp$36$x$35$$35$4310 () Int)
(declare-fun lq_tmp$36$x$35$$35$1618 () Int)
(declare-fun lq_karg$36$x$35$$35$a3Da$35$$35$k_$35$$35$1662 () Int)
(declare-fun lq_tmp$36$x$35$$35$1263 () Int)
(declare-fun lit$36$don$39$t$32$worry$44$$32$be$32$happy () Str)
(declare-fun GHC.Base.$43$$43$ () Int)
(declare-fun VV$35$$35$F$35$$35$43 () Int)
(declare-fun lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4156 () Int)
(declare-fun lq_tmp$36$x$35$$35$4028 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808747$35$$35$d3Wj () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792808716$35$$35$d3VO () Int)
(declare-fun GHC.Real.$58$$37$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808718$35$$35$d3VQ () Str)
(declare-fun lq_karg$36$lq_tmp$36$x$35$$35$4159$35$$35$k_$35$$35$4161 () Int)
(declare-fun Trees.Measures.sumOk () Int)
(declare-fun ds_d3PV () Int)
(declare-fun GHC.Tuple.$40$$44$$41$ () Int)
(declare-fun lq_tmp$36$x$35$$35$1700 () Int)
(declare-fun GHC.Real.quot () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808769$35$$35$d3WF () Int)
(declare-fun xs$35$$35$a3CC () Int)
(declare-fun GHC.Real.$47$ () Int)
(declare-fun lq_tmp$36$x$35$$35$1722 () Int)
(declare-fun lq_tmp$36$x$35$$35$1424 () Int)
(declare-fun lq_tmp$36$x$35$$35$3338 () Int)
(declare-fun fldList () Int)
(declare-fun VV$35$$35$F$35$$35$266 () Str)
(declare-fun xs$35$$35$a3CF () Int)
(declare-fun GHC.Classes.$38$$38$ () Int)
(declare-fun lq_tmp$36$x$35$$35$1727 () Int)
(declare-fun lq_tmp$36$x$35$$35$3118 () Int)
(declare-fun lq_karg$36$VV$35$$35$4084$35$$35$k_$35$$35$4085 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808678$35$$35$d3Vc () Int)
(declare-fun lq_karg$36$VV$35$$35$4304$35$$35$k_$35$$35$4305 () Int)
(declare-fun lq_karg$36$VV$35$$35$4218$35$$35$k_$35$$35$4219 () Int)
(declare-fun lq_karg$36$totWeight$35$$35$a3D2$35$$35$k_$35$$35$4305 () Int)
(declare-fun lq_tmp$36$x$35$$35$740 () Int)
(declare-fun zs$35$$35$a3Fy () Int)
(declare-fun xs$35$$35$a3D9 () Int)
(declare-fun lq_tmp$36$x$35$$35$874 () Int)
(declare-fun y$35$$35$a3Ct () Int)
(declare-fun ds_d3QJ () Int)
(declare-fun lq_karg$36$lq_tmp$36$x$35$$35$4303$35$$35$k_$35$$35$4305 () Int)
(declare-fun lq_karg$36$VV$35$$35$4094$35$$35$k_$35$$35$4095 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808722$35$$35$d3VU () Int)
(declare-fun lq_karg$36$VV$35$$35$3762$35$$35$k_$35$$35$3763 () Int)
(declare-fun GHC.Types.GT () Int)
(declare-fun lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4087 () Int)
(declare-fun GHC.Classes.C$58$IP () Int)
(declare-fun lq_tmp$36$x$35$$35$3246 () Int)
(declare-fun VV$35$$35$F$35$$35$20 () Int)
(declare-fun lq_tmp$36$x$35$$35$4153 () Int)
(declare-fun GHC.Classes.$124$$124$ () Int)
(declare-fun xs$35$$35$a3Cv () Int)
(declare-fun lq_karg$36$VV$35$$35$620$35$$35$k_$35$$35$621 () Str)
(declare-fun VV$35$$35$F$35$$35$64 () Int)
(declare-fun ds_d3Pc () Int)
(declare-fun Data.Either.Left () Int)
(declare-fun GHC.List.last () Int)
(declare-fun lq_karg$36$VV$35$$35$4086$35$$35$k_$35$$35$4087 () Int)
(declare-fun VV$35$$35$F$35$$35$46 () Int)
(declare-fun lq_karg$36$VV$35$$35$4160$35$$35$k_$35$$35$4161 () Int)
(declare-fun VV$35$$35$F$35$$35$39 () Int)
(declare-fun lq_karg$36$VV$35$$35$4220$35$$35$k_$35$$35$4221 () Int)
(declare-fun lq_karg$36$VV$35$$35$4162$35$$35$k_$35$$35$4163 () Int)
(declare-fun lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4214 () Int)
(declare-fun lq_karg$36$VV$35$$35$2506$35$$35$k_$35$$35$2507 () Int)
(declare-fun GHC.Integer.Type.S$35$ () Int)
(declare-fun GHC.List.scanl1 () Int)
(declare-fun lq_karg$36$VV$35$$35$4306$35$$35$k_$35$$35$4307 () Int)
(declare-fun Data.Either.Right () Int)
(declare-fun VV$35$$35$F$35$$35$111 () Str)
(declare-fun ds_d3PX () Int)
(declare-fun VV$35$$35$F$35$$35$81 () Int)
(declare-fun lq_tmp$36$x$35$$35$3308 () Int)
(declare-fun lq_tmp$36$x$35$$35$3469 () Int)
(declare-fun lq_karg$36$xs$35$$35$a3CL$35$$35$k_$35$$35$2824 () Int)
(declare-fun lq_tmp$36$x$35$$35$1669 () Int)
(declare-fun lq_tmp$36$x$35$$35$4297 () Int)
(declare-fun lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4219 () Int)
(declare-fun lq_tmp$36$x$35$$35$1472 () Int)
(declare-fun x$35$$35$a3Da () Int)
(declare-fun lq_karg$36$totWeight$35$$35$a3D2$35$$35$k_$35$$35$4216 () Int)
(declare-fun f$35$$35$a3CP () Int)
(declare-fun lq_tmp$36$x$35$$35$3920 () Int)
(declare-fun lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4095 () Int)
(declare-fun lq_tmp$36$x$35$$35$1098 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808717$35$$35$d3VP () Int)
(declare-fun GHC.Num.$45$ () Int)
(declare-fun len () Int)
(declare-fun papp6 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808744$35$$35$d3Wg () Int)
(declare-fun VV$35$$35$F$35$$35$133 () Int)
(declare-fun VV$35$$35$F$35$$35$9 () Int)
(declare-fun GHC.Base.. () Int)
(declare-fun lq_tmp$36$x$35$$35$3649 () Int)
(declare-fun x_Tuple22 () Int)
(declare-fun lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4163 () Int)
(declare-fun lq_karg$36$ds_d3QT$35$$35$k_$35$$35$4224 () Int)
(declare-fun lq_tmp$36$x$35$$35$2064 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808748$35$$35$d3Wk () Int)
(declare-fun lq_tmp$36$x$35$$35$4325 () Int)
(declare-fun lq_tmp$36$x$35$$35$4206 () Int)
(declare-fun lq_tmp$36$x$35$$35$617 () Int)
(declare-fun VV$35$$35$F$35$$35$54 () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792808740$35$$35$d3Wc () Str)
(declare-fun lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4307 () Int)
(declare-fun lit$36$divide$45$by$45$zero () Str)
(declare-fun lq_tmp$36$x$35$$35$3535 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808681$35$$35$d3Vf () Int)
(declare-fun lq_tmp$36$x$35$$35$2626 () Int)
(declare-fun lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4224 () Int)
(declare-fun lq_karg$36$ds_d3Oe$35$$35$k_$35$$35$2630 () Int)
(declare-fun lq_tmp$36$x$35$$35$1155 () Int)
(declare-fun VV$35$$35$F$35$$35$32 () Int)
(declare-fun lq_tmp$36$x$35$$35$2831 () Int)
(declare-fun lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4158 () Int)
(declare-fun lq_tmp$36$x$35$$35$2979 () Int)
(declare-fun lq_karg$36$VV$35$$35$4223$35$$35$k_$35$$35$4224 () Int)
(declare-fun lq_karg$36$y$35$$35$a3Dc$35$$35$k_$35$$35$1662 () Int)
(declare-fun lq_karg$36$weights$35$$35$a3D0$35$$35$k_$35$$35$4305 () Int)
(declare-fun VV$35$$35$F$35$$35$26 () Int)
(declare-fun x$35$$35$a3Cs () Int)
(declare-fun lq_tmp$36$x$35$$35$739 () Int)
(declare-fun lq_tmp$36$x$35$$35$1040 () Int)
(declare-fun totElems$35$$35$a3D1 () Int)
(declare-fun lq_tmp$36$x$35$$35$1738 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792808707$35$$35$d3VF$35$$35$k_$35$$35$2630 () Int)
(declare-fun lq_tmp$36$x$35$$35$1158 () Int)
(declare-fun Trees.Measures.foldl1 () Int)
(declare-fun GHC.Real.$36$W$58$$37$ () Int)
(declare-fun lq_karg$36$VV$35$$35$4213$35$$35$k_$35$$35$4214 () Int)
(declare-fun VV$35$$35$F$35$$35$40 () Int)
(declare-fun lq_tmp$36$x$35$$35$2168 () Int)
(declare-fun lq_tmp$36$x$35$$35$1664 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808729$35$$35$d3W1 () Int)
(declare-fun lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4214 () Int)
(declare-fun lq_karg$36$VV$35$$35$4313$35$$35$k_$35$$35$4314 () Int)
(declare-fun GHC.Real.fromRational () Int)
(declare-fun isJust () Int)
(declare-fun lq_karg$36$VV$35$$35$4073$35$$35$k_$35$$35$4074 () Int)
(declare-fun lq_tmp$36$x$35$$35$3097 () Int)
(declare-fun lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4087 () Int)
(declare-fun ds_d3RG () Int)
(declare-fun lq_tmp$36$x$35$$35$4823 () Int)
(declare-fun lq_tmp$36$x$35$$35$3969 () Int)
(declare-fun lq_tmp$36$x$35$$35$3767 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808679$35$$35$d3Vd () Str)
(declare-fun lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4156 () Int)
(declare-fun GHC.List.takeWhile () Int)
(declare-fun lq_karg$36$VV$35$$35$3833$35$$35$k_$35$$35$3834 () Int)
(declare-fun GHC.Types.TrNameD () Int)
(declare-fun lq_karg$36$VV$35$$35$2823$35$$35$k_$35$$35$2824 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808692$35$$35$d3Vq () Int)
(declare-fun lq_tmp$36$x$35$$35$2069 () Int)
(declare-fun y$35$$35$a3Cr () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808728$35$$35$d3W0 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808665$35$$35$d3UZ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808755$35$$35$d3Wr () Int)
(declare-fun lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4314 () Int)
(declare-fun lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4216 () Int)
(declare-fun lq_tmp$36$x$35$$35$2787 () Int)
(declare-fun lq_tmp$36$x$35$$35$828 () Int)
(declare-fun Trees.Measures.null () Int)
(declare-fun lq_tmp$36$x$35$$35$4677 () Int)
(declare-fun lit$36$LH$45$verificacion$45$asistida$45$0.1.0.0$45$B0H5GdfJzuc2jwReQRD3tY () Str)
(declare-fun GHC.Stack.Types.pushCallStack () Int)
(declare-fun ds_d3QK () Int)
(declare-fun lq_karg$36$x$35$$35$a3CK$35$$35$k_$35$$35$2686 () Int)
(declare-fun lq_tmp$36$x$35$$35$4350 () Int)
(declare-fun lq_karg$36$weights$35$$35$a3D0$35$$35$k_$35$$35$4221 () Int)
(declare-fun lq_karg$36$weights$35$$35$a3D0$35$$35$k_$35$$35$4302 () Int)
(declare-fun xs$35$$35$a3Cw () Int)
(declare-fun lq_karg$36$VV$35$$35$3689$35$$35$k_$35$$35$3690 () Int)
(declare-fun lit$36$Trees.Measures () Str)
(declare-fun x_Tuple31 () Int)
(declare-fun lq_tmp$36$x$35$$35$1245 () Int)
(declare-fun GHC.Integer.Type.Jp$35$ () Int)
(declare-fun lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4170 () Int)
(declare-fun lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$3763 () Int)
(declare-fun VV$35$$35$F$35$$35$47 () Int)
(declare-fun VV$35$$35$F$35$$35$38 () Int)
(declare-fun lq_karg$36$VV$35$$35$4169$35$$35$k_$35$$35$4170 () Int)
(declare-fun Trees.Measures.average () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808684$35$$35$d3Vi () Int)
(declare-fun lq_tmp$36$x$35$$35$1461 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792808687$35$$35$d3Vl$35$$35$k_$35$$35$1662 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808686$35$$35$d3Vk () Str)
(declare-fun Trees.Measures.safeSplit () Int)
(declare-fun GHC.IO.Exception.IOError () Int)
(declare-fun lq_tmp$36$x$35$$35$3706 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808762$35$$35$d3Wy () Int)
(declare-fun VV$35$$35$F$35$$35$267 () Str)
(declare-fun ds_d3Oe () Int)
(declare-fun GHC.List.take () Int)
(declare-fun GHC.Stack.Types.PushCallStack () Int)
(declare-fun lq_tmp$36$x$35$$35$2514 () Int)
(declare-fun lq_tmp$36$x$35$$35$2415 () Int)
(declare-fun xs$35$$35$a3CG () Int)
(declare-fun Trees.Measures.groupEq () Int)
(declare-fun w$35$$35$a3D4 () Int)
(declare-fun Trees.Measures.main () Int)
(declare-fun lq_tmp$36$x$35$$35$2213 () Int)
(declare-fun weights$35$$35$a3D0 () Int)
(declare-fun GHC.Classes.$60$$61$ () Int)
(declare-fun lq_karg$36$zs$35$$35$a3Fy$35$$35$k_$35$$35$2824 () Int)
(declare-fun GHC.Types.TrNameS () Int)
(declare-fun GHC.Enum.C$58$Bounded () Int)
(declare-fun ds_d3R0 () Int)
(declare-fun lq_karg$36$ds_d3Oz$35$$35$k_$35$$35$2686 () Int)
(declare-fun lq_tmp$36$x$35$$35$4068 () Int)
(declare-fun System.IO.putStrLn () Int)
(declare-fun lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4085 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808733$35$$35$d3W5 () Int)
(declare-fun lq_tmp$36$x$35$$35$1883 () Int)
(declare-fun lq_tmp$36$x$35$$35$604 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808732$35$$35$d3W4 () Int)
(declare-fun lq_karg$36$VV$35$$35$2629$35$$35$k_$35$$35$2630 () Int)
(declare-fun lq_karg$36$VV$35$$35$4089$35$$35$k_$35$$35$4090 () Int)
(declare-fun GHC.Base.$36$ () Int)
(declare-fun lq_tmp$36$x$35$$35$3643 () Int)
(declare-fun papp1 () Int)
(declare-fun GHC.Classes.max () Int)
(declare-fun VV$35$$35$F$35$$35$17 () Int)
(declare-fun lq_tmp$36$x$35$$35$3628 () Int)
(declare-fun VV$35$$35$F$35$$35$71 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808750$35$$35$d3Wm () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808752$35$$35$d3Wo () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808662$35$$35$d3UW () Str)
(declare-fun VV$35$$35$F$35$$35$53 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808758$35$$35$d3Wu () Int)
(declare-fun lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4300 () Int)
(declare-fun xs$35$$35$a3Cz () Int)
(declare-fun GHC.Num.$36$fNumInteger () Int)
(declare-fun lq_tmp$36$x$35$$35$2058 () Int)
(declare-fun lq_tmp$36$x$35$$35$2467 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808676$35$$35$d3Va () Int)
(declare-fun GHC.Classes.$60$ () Int)
(declare-fun tail () Int)
(declare-fun cast_as () Int)
(declare-fun VV$35$$35$F$35$$35$35 () Int)
(declare-fun VV$35$$35$F$35$$35$116 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808739$35$$35$d3Wb () Int)
(declare-fun lq_tmp$36$x$35$$35$3729 () Int)
(declare-fun lq_tmp$36$x$35$$35$4759 () Int)
(declare-fun xs$35$$35$a3CJ () Int)
(declare-fun GHC.Stack.Types.FreezeCallStack () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808660$35$$35$d3UU () Str)
(declare-fun lq_tmp$36$x$35$$35$3499 () Int)
(declare-fun lq_tmp$36$x$35$$35$2306 () Int)
(declare-fun lq_tmp$36$x$35$$35$4038 () Int)
(declare-fun lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4092 () Int)
(declare-fun ds_d3OX () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808774$35$$35$d3WK () Int)
(declare-fun GHC.Num.$42$ () Int)
(declare-fun lq_tmp$36$x$35$$35$3124 () Int)
(declare-fun lq_karg$36$lq_tmp$36$x$35$$35$4088$35$$35$k_$35$$35$4090 () Int)
(declare-fun lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4314 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808719$35$$35$d3VR () Str)
(declare-fun lq_karg$36$x$35$$35$a3CK$35$$35$k_$35$$35$2824 () Int)
(declare-fun lq_tmp$36$x$35$$35$3421 () Int)
(declare-fun lq_tmp$36$x$35$$35$4769 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808746$35$$35$d3Wi () Str)
(declare-fun lq_tmp$36$x$35$$35$1401 () Int)
(declare-fun lq_tmp$36$x$35$$35$4181 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808768$35$$35$d3WE () Int)
(declare-fun lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4170 () Int)
(declare-fun VV$35$$35$F$35$$35$104 () Int)
(declare-fun GHC.Real.recip () Int)
(declare-fun Trees.Measures.size () Int)
(declare-fun lq_karg$36$totWeight$35$$35$a3D2$35$$35$k_$35$$35$4302 () Int)
(declare-fun VV$35$$35$F$35$$35$5 () Int)
(declare-fun VV$35$$35$F$35$$35$207 () Int)
(declare-fun lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$3690 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808657$35$$35$d3UR () Str)
(declare-fun lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4074 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808687$35$$35$d3Vl () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808675$35$$35$d3V9 () Int)
(declare-fun totWeight$35$$35$a3D2 () Int)
(declare-fun VV$35$$35$F$35$$35$58 () Int)
(declare-fun lit$36$Relaxeth$33$$32$this$32$too$32$shall$32$ne$39$er$32$be () Str)
(declare-fun lq_tmp$36$x$35$$35$1588 () Int)
(declare-fun lq_tmp$36$x$35$$35$2978 () Int)
(declare-fun acc$35$$35$a3CS () Int)
(declare-fun lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$3834 () Int)
(declare-fun GHC.Maybe.Nothing () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808683$35$$35$d3Vh () Str)
(declare-fun VV$35$$35$F$35$$35$27 () Int)
(declare-fun lq_tmp$36$x$35$$35$738 () Int)
(declare-fun total$35$$35$a3Cx () Int)
(declare-fun lq_karg$36$ds_d3Oz$35$$35$k_$35$$35$2824 () Int)
(declare-fun ds_d3Pd () Int)
(declare-fun VV$35$$35$F$35$$35$41 () Int)
(declare-fun GHC.Types.EQ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808674$35$$35$d3V8 () Int)
(declare-fun lq_tmp$36$x$35$$35$1467 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808715$35$$35$d3VN () Str)
(declare-fun ds_d3So () Int)
(declare-fun lq_karg$36$totWeight$35$$35$a3D2$35$$35$k_$35$$35$4221 () Int)
(declare-fun GHC.List.scanr () Int)
(declare-fun lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4170 () Int)
(declare-fun fix$36$$36$dEq_a3In () Int)
(declare-fun lq_tmp$36$x$35$$35$4481 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808694$35$$35$d3Vs () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808721$35$$35$d3VT () Int)
(declare-fun lq_karg$36$totWeight$35$$35$a3D2$35$$35$k_$35$$35$4224 () Int)
(declare-fun lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$3763 () Int)
(declare-fun lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4216 () Int)
(declare-fun totalityError () Int)
(declare-fun lq_tmp$36$x$35$$35$3301 () Int)
(declare-fun lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4314 () Int)
(declare-fun GHC.Num.negate () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792808693$35$$35$d3Vr$35$$35$k_$35$$35$1662 () Int)
(declare-fun VV$35$$35$F$35$$35$264 () Str)
(declare-fun lq_tmp$36$x$35$$35$1101 () Int)
(declare-fun x$35$$35$a3D8 () Int)
(declare-fun msg$35$$35$a3Cn () Str)
(declare-fun GHC.Real.fromIntegral () Int)
(declare-fun GHC.Maybe.Just () Int)
(declare-fun lq_tmp$36$x$35$$35$3929 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808704$35$$35$d3VC () Bool)
(declare-fun lq_tmp$36$x$35$$35$4036 () Int)
(declare-fun lq_tmp$36$x$35$$35$2175 () Int)
(declare-fun lq_karg$36$VV$35$$35$4301$35$$35$k_$35$$35$4302 () Int)
(declare-fun GHC.Classes.min () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808753$35$$35$d3Wp () Int)
(declare-fun lq_karg$36$totWeight$35$$35$a3D2$35$$35$k_$35$$35$4307 () Int)
(declare-fun VV$35$$35$F$35$$35$19 () Int)
(declare-fun Trees.Measures.tail () Int)
(declare-fun lq_karg$36$weights$35$$35$a3D0$35$$35$k_$35$$35$4219 () Int)
(declare-fun sum$35$$35$a3D3 () Int)
(declare-fun lq_tmp$36$x$35$$35$1811 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808757$35$$35$d3Wt () Int)
(declare-fun lq_karg$36$VV$35$$35$1661$35$$35$k_$35$$35$1662 () Int)
(declare-fun ds_d3Pq () Int)
(declare-fun lq_tmp$36$x$35$$35$2113 () Int)
(declare-fun lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4085 () Int)
(declare-fun lq_karg$36$VV$35$$35$4155$35$$35$k_$35$$35$4156 () Int)
(declare-fun lq_karg$36$ys$35$$35$a3Fw$35$$35$k_$35$$35$2686 () Int)
(declare-fun VV$35$$35$F$35$$35$22 () Int)
(declare-fun lq_tmp$36$x$35$$35$1145 () Int)
(declare-fun Trees.Measures.wtAverage () Int)
(declare-fun lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4074 () Int)
(declare-fun lq_tmp$36$x$35$$35$2469 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808723$35$$35$d3VV () Int)
(declare-fun x_Tuple32 () Int)
(declare-fun ds_d3NO () Int)
(declare-fun lq_karg$36$VV$35$$35$4091$35$$35$k_$35$$35$4092 () Int)
(declare-fun lq_tmp$36$x$35$$35$1264 () Int)
(declare-fun lq_tmp$36$x$35$$35$3596 () Int)
(declare-fun lq_karg$36$VV$35$$35$4215$35$$35$k_$35$$35$4216 () Int)
(declare-fun lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 () Int)
(declare-fun ds_d3Rc () Int)
(declare-fun z$35$$35$a3Cu () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808663$35$$35$d3UX () Str)
(declare-fun VV$35$$35$F$35$$35$44 () Int)
(declare-fun Trees.Measures.notEmpty () Int)
(declare-fun elems$35$$35$a3CZ () Int)
(declare-fun VV$35$$35$F$35$$35$34 () Int)
(declare-fun GHC.List.repeat () Int)
(declare-fun lq_tmp$36$x$35$$35$4705 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808749$35$$35$d3Wl () Int)
(declare-fun lq_tmp$36$x$35$$35$3775 () Int)
(declare-fun ds_d3NP () Int)
(declare-fun lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4219 () Int)
(declare-fun ds_d3Q7 () Int)
(declare-fun lq_tmp$36$x$35$$35$4813 () Int)
(declare-fun lq_tmp$36$x$35$$35$3368 () Int)
(declare-fun lit$36$foldl1 () Str)
(declare-fun lq_tmp$36$x$35$$35$1557 () Int)
(declare-fun VV$35$$35$F$35$$35$214 () Int)
(declare-fun lq_tmp$36$x$35$$35$1708 () Int)
(declare-fun lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4090 () Int)
(declare-fun x$35$$35$a3Dg () Int)
(declare-fun lq_tmp$36$x$35$$35$1384 () Int)
(declare-fun lq_tmp$36$x$35$$35$943 () Int)
(declare-fun GHC.Classes.not () Int)
(declare-fun lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4158 () Int)
(declare-fun lq_karg$36$xs$35$$35$a3CO$35$$35$k_$35$$35$3763 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808741$35$$35$d3Wd () Int)
(declare-fun lit$36$Fear$32$not$33$$32$$39$twill$32$ne$39$er$32$come$32$to$32$pass () Str)
(declare-fun lq_tmp$36$x$35$$35$3498 () Int)
(declare-fun lq_tmp$36$x$35$$35$781 () Int)
(declare-fun lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4095 () Int)
(declare-fun GHC.Num.$43$ () Int)
(declare-fun Data.Tuple.fst () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808765$35$$35$d3WB () Int)
(declare-fun lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4163 () Int)
(declare-fun lq_tmp$36$x$35$$35$1250 () Int)
(declare-fun lq_karg$36$xs$35$$35$a3CL$35$$35$k_$35$$35$2686 () Int)
(declare-fun lq_karg$36$weights$35$$35$a3D0$35$$35$k_$35$$35$4216 () Int)
(declare-fun GHC.Err.error () Int)
(declare-fun GHC.Real.$36$fIntegralInt () Int)
(declare-fun snd () Int)
(declare-fun fst () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808760$35$$35$d3Ww () Int)
(declare-fun VV$35$$35$F$35$$35$52 () Int)
(declare-fun lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4221 () Int)
(declare-fun x$35$$35$a3CH () Int)
(declare-fun Trees.Measures.size2 () Int)
(declare-fun lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4307 () Int)
(declare-fun lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4224 () Int)
(declare-fun lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4302 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808743$35$$35$d3Wf () Int)
(declare-fun Data.Tuple.snd () Int)
(declare-fun lq_tmp$36$x$35$$35$1733 () Int)
(declare-fun apply$35$$35$13 (Int (_ BitVec 32)) Bool)
(declare-fun apply$35$$35$9 (Int Str) Bool)
(declare-fun apply$35$$35$6 (Int Bool) Str)
(declare-fun apply$35$$35$11 (Int Str) (_ BitVec 32))
(declare-fun apply$35$$35$15 (Int (_ BitVec 32)) (_ BitVec 32))
(declare-fun apply$35$$35$0 (Int Int) Int)
(declare-fun apply$35$$35$8 (Int Str) Int)
(declare-fun apply$35$$35$1 (Int Int) Bool)
(declare-fun apply$35$$35$7 (Int Bool) (_ BitVec 32))
(declare-fun apply$35$$35$14 (Int (_ BitVec 32)) Str)
(declare-fun apply$35$$35$10 (Int Str) Str)
(declare-fun apply$35$$35$5 (Int Bool) Bool)
(declare-fun apply$35$$35$2 (Int Int) Str)
(declare-fun apply$35$$35$12 (Int (_ BitVec 32)) Int)
(declare-fun apply$35$$35$3 (Int Int) (_ BitVec 32))
(declare-fun apply$35$$35$4 (Int Bool) Int)
(declare-fun coerce$35$$35$13 ((_ BitVec 32)) Bool)
(declare-fun coerce$35$$35$9 (Str) Bool)
(declare-fun coerce$35$$35$6 (Bool) Str)
(declare-fun coerce$35$$35$11 (Str) (_ BitVec 32))
(declare-fun coerce$35$$35$15 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun coerce$35$$35$0 (Int) Int)
(declare-fun coerce$35$$35$8 (Str) Int)
(declare-fun coerce$35$$35$1 (Int) Bool)
(declare-fun coerce$35$$35$7 (Bool) (_ BitVec 32))
(declare-fun coerce$35$$35$14 ((_ BitVec 32)) Str)
(declare-fun coerce$35$$35$10 (Str) Str)
(declare-fun coerce$35$$35$5 (Bool) Bool)
(declare-fun coerce$35$$35$2 (Int) Str)
(declare-fun coerce$35$$35$12 ((_ BitVec 32)) Int)
(declare-fun coerce$35$$35$3 (Int) (_ BitVec 32))
(declare-fun coerce$35$$35$4 (Bool) Int)
(declare-fun smt_lambda$35$$35$13 ((_ BitVec 32) Bool) Int)
(declare-fun smt_lambda$35$$35$9 (Str Bool) Int)
(declare-fun smt_lambda$35$$35$6 (Bool Str) Int)
(declare-fun smt_lambda$35$$35$11 (Str (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$15 ((_ BitVec 32) (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$0 (Int Int) Int)
(declare-fun smt_lambda$35$$35$8 (Str Int) Int)
(declare-fun smt_lambda$35$$35$1 (Int Bool) Int)
(declare-fun smt_lambda$35$$35$7 (Bool (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$14 ((_ BitVec 32) Str) Int)
(declare-fun smt_lambda$35$$35$10 (Str Str) Int)
(declare-fun smt_lambda$35$$35$5 (Bool Bool) Int)
(declare-fun smt_lambda$35$$35$2 (Int Str) Int)
(declare-fun smt_lambda$35$$35$12 ((_ BitVec 32) Int) Int)
(declare-fun smt_lambda$35$$35$3 (Int (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$4 (Bool Int) Int)
(declare-fun lam_arg$35$$35$1$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$2$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$3$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$4$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$5$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$6$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$7$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$1$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$2$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$3$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$4$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$5$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$6$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$7$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$1$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$2$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$3$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$4$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$5$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$6$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$7$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$1$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$2$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$3$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$4$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$5$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$6$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$7$35$$35$4 () Bool)
(assert (distinct GHC.Num.$36$fNumInteger GHC.Num.$36$fNumInt))

(assert (distinct lit$36$Fear$32$not$33$$32$$39$twill$32$ne$39$er$32$come$32$to$32$pass lit$36$foldl1 lit$36$Relaxeth$33$$32$this$32$too$32$shall$32$ne$39$er$32$be lit$36$Trees.Measures lit$36$LH$45$verificacion$45$asistida$45$0.1.0.0$45$B0H5GdfJzuc2jwReQRD3tY lit$36$divide$45$by$45$zero lit$36$don$39$t$32$worry$44$$32$be$32$happy lit$36$error lit$36$cannot$32$add$32$up$32$empty$32$list lit$36$Hello lit$36$Measures.lhs))

(assert (distinct GHC.Types.True GHC.Types.False))

(assert (distinct GHC.Types.EQ GHC.Types.GT GHC.Types.LT))
(assert (= (strLen lit$36$Measures.lhs) 12))
(assert (= (strLen lit$36$Hello) 5))
(assert (= (strLen lit$36$cannot$32$add$32$up$32$empty$32$list) 24))
(assert (= (strLen lit$36$error) 5))
(assert (= (strLen lit$36$don$39$t$32$worry$44$$32$be$32$happy) 21))
(assert (= (strLen lit$36$divide$45$by$45$zero) 14))
(assert (= (strLen lit$36$LH$45$verificacion$45$asistida$45$0.1.0.0$45$B0H5GdfJzuc2jwReQRD3tY) 55))
(assert (= (strLen lit$36$Trees.Measures) 14))
(assert (= (strLen lit$36$Relaxeth$33$$32$this$32$too$32$shall$32$ne$39$er$32$be) 33))
(assert (= (strLen lit$36$foldl1) 6))
(assert (= (strLen lit$36$Fear$32$not$33$$32$$39$twill$32$ne$39$er$32$come$32$to$32$pass) 35))
(push 1)
(define-fun b$36$$35$$35$272 () Bool (and (>= (apply$35$$35$0 (as len Int) ys$35$$35$a3Fw) 0) (<= (apply$35$$35$0 (as len Int) ys$35$$35$a3Fw) (apply$35$$35$0 (as len Int) xs$35$$35$a3CL))))
(define-fun b$36$$35$$35$800 () Bool (= VV$35$$35$F$35$$35$19 (+ lq_anf$36$$35$$35$7205759403792808768$35$$35$d3WE lq_anf$36$$35$$35$7205759403792808769$35$$35$d3WF)))
(define-fun b$36$$35$$35$48 () Bool GHC.Types.True)
(define-fun b$36$$35$$35$816 () Bool (= VV$35$$35$F$35$$35$38 (Z3_OP_MUL w$35$$35$a3D4 x$35$$35$a3D5)))
(define-fun b$36$$35$$35$320 () Bool (and (apply$35$$35$1 (as Trees.Measures.notEmpty Int) lq_anf$36$$35$$35$7205759403792808716$35$$35$d3VO) (= lq_anf$36$$35$$35$7205759403792808716$35$$35$d3VO ds_d3Rc) (= lq_anf$36$$35$$35$7205759403792808716$35$$35$d3VO (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792808720$35$$35$d3VS) lq_anf$36$$35$$35$7205759403792808721$35$$35$d3VT)) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792808716$35$$35$d3VO) lq_anf$36$$35$$35$7205759403792808720$35$$35$d3VS) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808716$35$$35$d3VO) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808721$35$$35$d3VT))) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792808716$35$$35$d3VO) lq_anf$36$$35$$35$7205759403792808721$35$$35$d3VT) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808716$35$$35$d3VO) 0)))
(define-fun b$36$$35$$35$848 () Bool (and (apply$35$$35$1 (as Trees.Measures.notEmpty Int) VV$35$$35$F$35$$35$125) (= VV$35$$35$F$35$$35$125 lq_anf$36$$35$$35$7205759403792808709$35$$35$d3VH) (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$125) x$35$$35$a3CK) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$125) (+ 1 (apply$35$$35$0 (as len Int) ys$35$$35$a3Fw))) (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$125) ys$35$$35$a3Fw) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$125) 0)))
(define-fun b$36$$35$$35$128 () Bool (= lq_anf$36$$35$$35$7205759403792808671$35$$35$d3V5 20))
(define-fun b$36$$35$$35$384 () Bool (= lq_anf$36$$35$$35$7205759403792808749$35$$35$d3Wl 2))
(define-fun b$36$$35$$35$144 () Bool (and (= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792808680$35$$35$d3Ve) (strLen lq_anf$36$$35$$35$7205759403792808679$35$$35$d3Vd)) (>= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792808680$35$$35$d3Ve) 0) (= lq_anf$36$$35$$35$7205759403792808680$35$$35$d3Ve lq_anf$36$$35$$35$7205759403792808679$35$$35$d3Vd)))
(define-fun b$36$$35$$35$176 () Bool (and (= lq_anf$36$$35$$35$7205759403792808687$35$$35$d3Vl ds_d3RG) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808687$35$$35$d3Vl) 0)))
(define-fun b$36$$35$$35$432 () Bool (and (apply$35$$35$1 (as Trees.Measures.notEmpty Int) lq_anf$36$$35$$35$7205759403792808765$35$$35$d3WB) (= lq_anf$36$$35$$35$7205759403792808765$35$$35$d3WB ds_d3Pd) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808765$35$$35$d3WB) 0)))
(define-fun b$36$$35$$35$448 () Bool (= lq_anf$36$$35$$35$7205759403792808771$35$$35$d3WH 0))
(define-fun b$36$$35$$35$464 () Bool (>= (apply$35$$35$0 (as len Int) xs$35$$35$a3CC) 0))
(define-fun b$36$$35$$35$273 () Bool (>= (apply$35$$35$0 (as len Int) zs$35$$35$a3Fy) 0))
(define-fun b$36$$35$$35$817 () Bool (and (= VV$35$$35$F$35$$35$54 lq_anf$36$$35$$35$7205759403792808747$35$$35$d3Wj) (= (apply$35$$35$8 (as len Int) VV$35$$35$F$35$$35$54) (strLen lq_anf$36$$35$$35$7205759403792808746$35$$35$d3Wi)) (>= (apply$35$$35$8 (as len Int) VV$35$$35$F$35$$35$54) 0) (= VV$35$$35$F$35$$35$54 lq_anf$36$$35$$35$7205759403792808746$35$$35$d3Wi)))
(define-fun b$36$$35$$35$833 () Bool (and (= VV$35$$35$F$35$$35$266 lq_anf$36$$35$$35$7205759403792808680$35$$35$d3Ve) (= (apply$35$$35$8 (as len Int) VV$35$$35$F$35$$35$266) (strLen lq_anf$36$$35$$35$7205759403792808679$35$$35$d3Vd)) (>= (apply$35$$35$8 (as len Int) VV$35$$35$F$35$$35$266) 0) (= VV$35$$35$F$35$$35$266 lq_anf$36$$35$$35$7205759403792808679$35$$35$d3Vd)))
(define-fun b$36$$35$$35$337 () Bool (and (apply$35$$35$1 (as Trees.Measures.notEmpty Int) lq_anf$36$$35$$35$7205759403792808731$35$$35$d3W3) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792808731$35$$35$d3W3) lq_anf$36$$35$$35$7205759403792808723$35$$35$d3VV) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808731$35$$35$d3W3) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808730$35$$35$d3W2))) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792808731$35$$35$d3W3) lq_anf$36$$35$$35$7205759403792808730$35$$35$d3W2) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808731$35$$35$d3W3) 0)))
(define-fun b$36$$35$$35$849 () Bool (= VV$35$$35$F$35$$35$14 (+ lq_anf$36$$35$$35$7205759403792808773$35$$35$d3WJ lq_anf$36$$35$$35$7205759403792808774$35$$35$d3WK)))
(define-fun b$36$$35$$35$353 () Bool (>= (apply$35$$35$0 (as len Int) xs$35$$35$a3D9) 0))
(define-fun b$36$$35$$35$129 () Bool (= lq_anf$36$$35$$35$7205759403792808672$35$$35$d3V6 lq_anf$36$$35$$35$7205759403792808671$35$$35$d3V5))
(define-fun b$36$$35$$35$385 () Bool (= lq_anf$36$$35$$35$7205759403792808750$35$$35$d3Wm lq_anf$36$$35$$35$7205759403792808749$35$$35$d3Wl))
(define-fun b$36$$35$$35$161 () Bool (and (apply$35$$35$1 (as Trees.Measures.notEmpty Int) ds_d3Ru) (>= (apply$35$$35$0 (as len Int) ds_d3Ru) 0)))
(define-fun b$36$$35$$35$433 () Bool (and (apply$35$$35$1 (as Trees.Measures.notEmpty Int) lq_anf$36$$35$$35$7205759403792808765$35$$35$d3WB) (= lq_anf$36$$35$$35$7205759403792808765$35$$35$d3WB ds_d3Pd) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808765$35$$35$d3WB) 0)))
(define-fun b$36$$35$$35$449 () Bool (and (= lq_anf$36$$35$$35$7205759403792808770$35$$35$d3WG ds_d3PI) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808770$35$$35$d3WG) 0)))
(define-fun b$36$$35$$35$465 () Bool (and (=> (apply$35$$35$1 (as Trees.Measures.notEmpty Int) xs$35$$35$a3CC) (> elems$35$$35$a3CD 0)) (>= elems$35$$35$a3CD 0)))
(define-fun b$36$$35$$35$274 () Bool (and (= ds_d3Oz (apply$35$$35$0 (apply$35$$35$0 (as GHC.Tuple.$40$$44$$41$ Int) ys$35$$35$a3Fw) zs$35$$35$a3Fy)) (= (apply$35$$35$0 (as fst Int) ds_d3Oz) ys$35$$35$a3Fw) (= (apply$35$$35$0 (as snd Int) ds_d3Oz) zs$35$$35$a3Fy) (= (apply$35$$35$0 (as x_Tuple21 Int) ds_d3Oz) ys$35$$35$a3Fw) (= (apply$35$$35$0 (as x_Tuple22 Int) ds_d3Oz) zs$35$$35$a3Fy)))
(define-fun b$36$$35$$35$802 () Bool (= VV$35$$35$F$35$$35$51 (+ lq_tmp$36$x$35$$35$4067 lq_tmp$36$x$35$$35$4068)))
(define-fun b$36$$35$$35$850 () Bool (< 0 VV$35$$35$F$35$$35$30))
(define-fun b$36$$35$$35$354 () Bool (and (apply$35$$35$1 (as Trees.Measures.notEmpty Int) lq_anf$36$$35$$35$7205759403792808734$35$$35$d3W6) (= lq_anf$36$$35$$35$7205759403792808734$35$$35$d3W6 ds_d3NP) (= lq_anf$36$$35$$35$7205759403792808734$35$$35$d3W6 (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) x$35$$35$a3D8) xs$35$$35$a3D9)) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792808734$35$$35$d3W6) x$35$$35$a3D8) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808734$35$$35$d3W6) (+ 1 (apply$35$$35$0 (as len Int) xs$35$$35$a3D9))) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792808734$35$$35$d3W6) xs$35$$35$a3D9) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808734$35$$35$d3W6) 0)))
(define-fun b$36$$35$$35$114 () Bool (= lq_anf$36$$35$$35$7205759403792808657$35$$35$d3UR lit$36$error))
(define-fun b$36$$35$$35$370 () Bool (not (= 0 ds_d3PX)))
(define-fun b$36$$35$$35$162 () Bool (and (apply$35$$35$1 (as Trees.Measures.notEmpty Int) lq_anf$36$$35$$35$7205759403792808684$35$$35$d3Vi) (= lq_anf$36$$35$$35$7205759403792808684$35$$35$d3Vi ds_d3Ru) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808684$35$$35$d3Vi) 0)))
(define-fun b$36$$35$$35$418 () Bool (>= (apply$35$$35$0 (as len Int) ds_d3OZ) 0))
(define-fun b$36$$35$$35$434 () Bool (and (apply$35$$35$1 (as Trees.Measures.notEmpty Int) lq_anf$36$$35$$35$7205759403792808765$35$$35$d3WB) (not (apply$35$$35$1 (as Trees.Measures.notEmpty Int) lq_anf$36$$35$$35$7205759403792808765$35$$35$d3WB)) (= lq_anf$36$$35$$35$7205759403792808765$35$$35$d3WB (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792808765$35$$35$d3WB ds_d3Pd) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808765$35$$35$d3WB) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808765$35$$35$d3WB) 0)))
(define-fun b$36$$35$$35$194 () Bool (and (= lq_anf$36$$35$$35$7205759403792808688$35$$35$d3Vm ds_d3So) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808688$35$$35$d3Vm) 0)))
(define-fun b$36$$35$$35$466 () Bool (and lq_anf$36$$35$$35$7205759403792808775$35$$35$d3WL (= lq_anf$36$$35$$35$7205759403792808775$35$$35$d3WL GHC.Types.True)))
(define-fun b$36$$35$$35$259 () Bool (>= (apply$35$$35$0 (as len Int) ds_d3Oe) 0))
(define-fun b$36$$35$$35$803 () Bool (and (apply$35$$35$1 (as Trees.Measures.notEmpty Int) VV$35$$35$F$35$$35$83) (= VV$35$$35$F$35$$35$83 lq_anf$36$$35$$35$7205759403792808732$35$$35$d3W4) (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$83) lq_anf$36$$35$$35$7205759403792808722$35$$35$d3VU) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$83) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808731$35$$35$d3W3))) (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$83) lq_anf$36$$35$$35$7205759403792808731$35$$35$d3W3) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$83) 0)))
(define-fun b$36$$35$$35$819 () Bool (= VV$35$$35$F$35$$35$23 (+ lq_anf$36$$35$$35$7205759403792808763$35$$35$d3Wz lq_anf$36$$35$$35$7205759403792808764$35$$35$d3WA)))
(define-fun b$36$$35$$35$323 () Bool (= lq_anf$36$$35$$35$7205759403792808722$35$$35$d3VU 1))
(define-fun b$36$$35$$35$835 () Bool (< 0 VV$35$$35$F$35$$35$42))
(define-fun b$36$$35$$35$339 () Bool (and (apply$35$$35$1 (as Trees.Measures.notEmpty Int) lq_anf$36$$35$$35$7205759403792808732$35$$35$d3W4) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792808732$35$$35$d3W4) lq_anf$36$$35$$35$7205759403792808722$35$$35$d3VU) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808732$35$$35$d3W4) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808731$35$$35$d3W3))) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792808732$35$$35$d3W4) lq_anf$36$$35$$35$7205759403792808731$35$$35$d3W3) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808732$35$$35$d3W4) 0)))
(define-fun b$36$$35$$35$115 () Bool (and (= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792808658$35$$35$d3US) (strLen lq_anf$36$$35$$35$7205759403792808657$35$$35$d3UR)) (>= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792808658$35$$35$d3US) 0) (= lq_anf$36$$35$$35$7205759403792808658$35$$35$d3US lq_anf$36$$35$$35$7205759403792808657$35$$35$d3UR)))
(define-fun b$36$$35$$35$371 () Bool (and (= lq_anf$36$$35$$35$7205759403792808744$35$$35$d3Wg ds_d3PX) (not (= 0 lq_anf$36$$35$$35$7205759403792808744$35$$35$d3Wg))))
(define-fun b$36$$35$$35$163 () Bool (and (apply$35$$35$1 (as Trees.Measures.notEmpty Int) lq_anf$36$$35$$35$7205759403792808684$35$$35$d3Vi) (= lq_anf$36$$35$$35$7205759403792808684$35$$35$d3Vi ds_d3Ru) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808684$35$$35$d3Vi) 0)))
(define-fun b$36$$35$$35$419 () Bool (and (= lq_anf$36$$35$$35$7205759403792808760$35$$35$d3Ww ds_d3OZ) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808760$35$$35$d3Ww) 0)))
(define-fun b$36$$35$$35$435 () Bool (= lq_anf$36$$35$$35$7205759403792808766$35$$35$d3WC 0))
(define-fun b$36$$35$$35$451 () Bool (>= (apply$35$$35$0 (as len Int) xs$35$$35$a3Cv) 0))
(define-fun b$36$$35$$35$260 () Bool (and (= lq_anf$36$$35$$35$7205759403792808707$35$$35$d3VF ds_d3Oe) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808707$35$$35$d3VF) 0)))
(define-fun b$36$$35$$35$820 () Bool (and (= (apply$35$$35$1 (as Trees.Measures.notEmpty Int) wxs$35$$35$a3CY) (apply$35$$35$1 (as Trees.Measures.notEmpty Int) VV$35$$35$F$35$$35$39)) (= VV$35$$35$F$35$$35$39 weights$35$$35$a3D0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$39) 0)))
(define-fun b$36$$35$$35$324 () Bool (= lq_anf$36$$35$$35$7205759403792808723$35$$35$d3VV 2))
(define-fun b$36$$35$$35$836 () Bool (and (apply$35$$35$1 (as Trees.Measures.notEmpty Int) VV$35$$35$F$35$$35$58) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$58) 0)))
(define-fun b$36$$35$$35$852 () Bool (= VV$35$$35$F$35$$35$15 (+ lq_anf$36$$35$$35$7205759403792808773$35$$35$d3WJ lq_anf$36$$35$$35$7205759403792808774$35$$35$d3WK)))
(define-fun b$36$$35$$35$356 () Bool (and (= (apply$35$$35$1 (as Trees.Measures.notEmpty Int) xs$35$$35$a3D9) (apply$35$$35$1 (as Trees.Measures.notEmpty Int) lq_anf$36$$35$$35$7205759403792808736$35$$35$d3W8)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808736$35$$35$d3W8) 0)))
(define-fun b$36$$35$$35$116 () Bool (= lq_anf$36$$35$$35$7205759403792808659$35$$35$d3UT lit$36$LH$45$verificacion$45$asistida$45$0.1.0.0$45$B0H5GdfJzuc2jwReQRD3tY))
(define-fun b$36$$35$$35$372 () Bool (and (= lq_anf$36$$35$$35$7205759403792808744$35$$35$d3Wg ds_d3PX) (not (= 0 lq_anf$36$$35$$35$7205759403792808744$35$$35$d3Wg))))
(define-fun b$36$$35$$35$132 () Bool (and (= (apply$35$$35$2 (as fst Int) lq_anf$36$$35$$35$7205759403792808674$35$$35$d3V8) lq_anf$36$$35$$35$7205759403792808658$35$$35$d3US) (= (apply$35$$35$0 (as snd Int) lq_anf$36$$35$$35$7205759403792808674$35$$35$d3V8) lq_anf$36$$35$$35$7205759403792808673$35$$35$d3V7) (= (apply$35$$35$2 (as x_Tuple21 Int) lq_anf$36$$35$$35$7205759403792808674$35$$35$d3V8) lq_anf$36$$35$$35$7205759403792808658$35$$35$d3US) (= (apply$35$$35$0 (as x_Tuple22 Int) lq_anf$36$$35$$35$7205759403792808674$35$$35$d3V8) lq_anf$36$$35$$35$7205759403792808673$35$$35$d3V7)))
(define-fun b$36$$35$$35$164 () Bool (and (apply$35$$35$1 (as Trees.Measures.notEmpty Int) lq_anf$36$$35$$35$7205759403792808684$35$$35$d3Vi) (not (apply$35$$35$1 (as Trees.Measures.notEmpty Int) lq_anf$36$$35$$35$7205759403792808684$35$$35$d3Vi)) (= lq_anf$36$$35$$35$7205759403792808684$35$$35$d3Vi (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792808684$35$$35$d3Vi ds_d3Ru) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808684$35$$35$d3Vi) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808684$35$$35$d3Vi) 0)))
(define-fun b$36$$35$$35$420 () Bool (and (= lq_anf$36$$35$$35$7205759403792808760$35$$35$d3Ww ds_d3OZ) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808760$35$$35$d3Ww) 0)))
(define-fun b$36$$35$$35$180 () Bool (and (= lq_anf$36$$35$$35$7205759403792808687$35$$35$d3Vl ds_d3RG) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808687$35$$35$d3Vl) 0)))
(define-fun b$36$$35$$35$436 () Bool (and (apply$35$$35$1 (as Trees.Measures.notEmpty Int) lq_anf$36$$35$$35$7205759403792808765$35$$35$d3WB) (= lq_anf$36$$35$$35$7205759403792808765$35$$35$d3WB ds_d3Pd) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808765$35$$35$d3WB) 0)))
(define-fun b$36$$35$$35$196 () Bool (>= (apply$35$$35$0 (as len Int) etc$35$$35$a3Dd) 0))
(define-fun b$36$$35$$35$452 () Bool (and (apply$35$$35$1 (as Trees.Measures.notEmpty Int) lq_anf$36$$35$$35$7205759403792808770$35$$35$d3WG) (= lq_anf$36$$35$$35$7205759403792808770$35$$35$d3WG ds_d3PI) (= lq_anf$36$$35$$35$7205759403792808770$35$$35$d3WG (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) ds_d3PV) xs$35$$35$a3Cv)) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792808770$35$$35$d3WG) ds_d3PV) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808770$35$$35$d3WG) (+ 1 (apply$35$$35$0 (as len Int) xs$35$$35$a3Cv))) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792808770$35$$35$d3WG) xs$35$$35$a3Cv) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808770$35$$35$d3WG) 0)))
(define-fun b$36$$35$$35$261 () Bool (and (= lq_anf$36$$35$$35$7205759403792808707$35$$35$d3VF ds_d3Oe) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808707$35$$35$d3VF) 0)))
(define-fun b$36$$35$$35$277 () Bool (>= (apply$35$$35$0 (as len Int) ys$35$$35$a3Fw) 0))
(define-fun b$36$$35$$35$805 () Bool (and (= VV$35$$35$F$35$$35$20 xs$35$$35$a3CF) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$20) 0)))
(define-fun b$36$$35$$35$821 () Bool (and (= VV$35$$35$F$35$$35$55 ds_d3PX) (not (= 0 VV$35$$35$F$35$$35$55))))
(define-fun b$36$$35$$35$325 () Bool (= lq_anf$36$$35$$35$7205759403792808724$35$$35$d3VW 3))
(define-fun b$36$$35$$35$837 () Bool (and (apply$35$$35$1 (as Trees.Measures.notEmpty Int) VV$35$$35$F$35$$35$74) (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$74) lq_anf$36$$35$$35$7205759403792808735$35$$35$d3W7) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$74) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808736$35$$35$d3W8))) (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$74) lq_anf$36$$35$$35$7205759403792808736$35$$35$d3W8) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$74) 0)))
(define-fun b$36$$35$$35$117 () Bool (and (= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792808660$35$$35$d3UU) (strLen lq_anf$36$$35$$35$7205759403792808659$35$$35$d3UT)) (>= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792808660$35$$35$d3UU) 0) (= lq_anf$36$$35$$35$7205759403792808660$35$$35$d3UU lq_anf$36$$35$$35$7205759403792808659$35$$35$d3UT)))
(define-fun b$36$$35$$35$405 () Bool (and (= (apply$35$$35$1 (as Trees.Measures.notEmpty Int) wxs$35$$35$a3CY) (apply$35$$35$1 (as Trees.Measures.notEmpty Int) weights$35$$35$a3D0)) (>= (apply$35$$35$0 (as len Int) weights$35$$35$a3D0) 0)))
(define-fun b$36$$35$$35$165 () Bool (= lq_anf$36$$35$$35$7205759403792808685$35$$35$d3Vj lit$36$don$39$t$32$worry$44$$32$be$32$happy))
(define-fun b$36$$35$$35$421 () Bool (and (not (apply$35$$35$1 (as Trees.Measures.notEmpty Int) lq_anf$36$$35$$35$7205759403792808760$35$$35$d3Ww)) (= lq_anf$36$$35$$35$7205759403792808760$35$$35$d3Ww (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792808760$35$$35$d3Ww ds_d3OZ) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808760$35$$35$d3Ww) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808760$35$$35$d3Ww) 0)))
(define-fun b$36$$35$$35$197 () Bool (and (apply$35$$35$1 (as Trees.Measures.notEmpty Int) lq_anf$36$$35$$35$7205759403792808688$35$$35$d3Vm) (= lq_anf$36$$35$$35$7205759403792808688$35$$35$d3Vm ds_d3So) (= lq_anf$36$$35$$35$7205759403792808688$35$$35$d3Vm (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) y$35$$35$a3Dc) etc$35$$35$a3Dd)) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792808688$35$$35$d3Vm) y$35$$35$a3Dc) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808688$35$$35$d3Vm) (+ 1 (apply$35$$35$0 (as len Int) etc$35$$35$a3Dd))) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792808688$35$$35$d3Vm) etc$35$$35$a3Dd) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808688$35$$35$d3Vm) 0)))
(define-fun b$36$$35$$35$453 () Bool (= lq_anf$36$$35$$35$7205759403792808772$35$$35$d3WI 1))
(define-fun b$36$$35$$35$469 () Bool (and lq_anf$36$$35$$35$7205759403792808775$35$$35$d3WL (= lq_anf$36$$35$$35$7205759403792808775$35$$35$d3WL GHC.Types.True)))
(define-fun b$36$$35$$35$262 () Bool (and (not (apply$35$$35$1 (as Trees.Measures.notEmpty Int) lq_anf$36$$35$$35$7205759403792808707$35$$35$d3VF)) (= lq_anf$36$$35$$35$7205759403792808707$35$$35$d3VF (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792808707$35$$35$d3VF ds_d3Oe) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808707$35$$35$d3VF) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808707$35$$35$d3VF) 0)))
(define-fun b$36$$35$$35$278 () Bool (and (>= (apply$35$$35$0 (as len Int) zs$35$$35$a3Fy) 0) (<= (apply$35$$35$0 (as len Int) zs$35$$35$a3Fy) (apply$35$$35$0 (as len Int) xs$35$$35$a3CL))))
(define-fun b$36$$35$$35$326 () Bool (= lq_anf$36$$35$$35$7205759403792808725$35$$35$d3VX 4))
(define-fun b$36$$35$$35$838 () Bool (and (=> (apply$35$$35$1 (as Trees.Measures.notEmpty Int) xs$35$$35$a3Cw) (> VV$35$$35$F$35$$35$11 0)) (= VV$35$$35$F$35$$35$11 elems$35$$35$a3Cy) (>= VV$35$$35$F$35$$35$11 0)))
(define-fun b$36$$35$$35$342 () Bool (and (not (apply$35$$35$1 (as Trees.Measures.notEmpty Int) lq_anf$36$$35$$35$7205759403792808733$35$$35$d3W5)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808733$35$$35$d3W5) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808733$35$$35$d3W5) 0)))
(define-fun b$36$$35$$35$854 () Bool (< 0 VV$35$$35$F$35$$35$31))
(define-fun b$36$$35$$35$118 () Bool (= lq_anf$36$$35$$35$7205759403792808661$35$$35$d3UV lit$36$Trees.Measures))
(define-fun b$36$$35$$35$374 () Bool (and (= lq_anf$36$$35$$35$7205759403792808744$35$$35$d3Wg ds_d3PX) (= lq_anf$36$$35$$35$7205759403792808744$35$$35$d3Wg ds_d3Q4) (= lq_anf$36$$35$$35$7205759403792808744$35$$35$d3Wg ds_d3Q4) (not (= 0 lq_anf$36$$35$$35$7205759403792808744$35$$35$d3Wg))))
(define-fun b$36$$35$$35$134 () Bool (= lq_anf$36$$35$$35$7205759403792808676$35$$35$d3Va lq_anf$36$$35$$35$7205759403792808675$35$$35$d3V9))
(define-fun b$36$$35$$35$390 () Bool (= lq_anf$36$$35$$35$7205759403792808751$35$$35$d3Wn (+ x$35$$35$a3Cs y$35$$35$a3Ct)))
(define-fun b$36$$35$$35$150 () Bool (and (apply$35$$35$1 (as Trees.Measures.notEmpty Int) ds_d3Qy) (>= (apply$35$$35$0 (as len Int) ds_d3Qy) 0)))
(define-fun b$36$$35$$35$166 () Bool (and (= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792808686$35$$35$d3Vk) (strLen lq_anf$36$$35$$35$7205759403792808685$35$$35$d3Vj)) (>= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792808686$35$$35$d3Vk) 0) (= lq_anf$36$$35$$35$7205759403792808686$35$$35$d3Vk lq_anf$36$$35$$35$7205759403792808685$35$$35$d3Vj)))
(define-fun b$36$$35$$35$422 () Bool (= lq_anf$36$$35$$35$7205759403792808761$35$$35$d3Wx 0))
(define-fun b$36$$35$$35$182 () Bool (>= (apply$35$$35$0 (as len Int) ds_d3So) 0))
(define-fun b$36$$35$$35$438 () Bool (>= (apply$35$$35$0 (as len Int) xs$35$$35$a3CF) 0))
(define-fun b$36$$35$$35$454 () Bool (= lq_anf$36$$35$$35$7205759403792808773$35$$35$d3WJ lq_anf$36$$35$$35$7205759403792808772$35$$35$d3WI))
(define-fun b$36$$35$$35$470 () Bool (and lq_anf$36$$35$$35$7205759403792808775$35$$35$d3WL (= lq_anf$36$$35$$35$7205759403792808775$35$$35$d3WL GHC.Types.True)))
(define-fun b$36$$35$$35$279 () Bool (and (= ds_d3Oz (apply$35$$35$0 (apply$35$$35$0 (as GHC.Tuple.$40$$44$$41$ Int) ys$35$$35$a3Fw) zs$35$$35$a3Fy)) (= (apply$35$$35$0 (as fst Int) ds_d3Oz) ys$35$$35$a3Fw) (= (apply$35$$35$0 (as snd Int) ds_d3Oz) zs$35$$35$a3Fy) (= (apply$35$$35$0 (as x_Tuple21 Int) ds_d3Oz) ys$35$$35$a3Fw) (= (apply$35$$35$0 (as x_Tuple22 Int) ds_d3Oz) zs$35$$35$a3Fy)))
(define-fun b$36$$35$$35$807 () Bool (and (= VV$35$$35$F$35$$35$52 lq_anf$36$$35$$35$7205759403792808754$35$$35$d3Wq) (= VV$35$$35$F$35$$35$52 lq_anf$36$$35$$35$7205759403792808753$35$$35$d3Wp)))
(define-fun b$36$$35$$35$311 () Bool (and (apply$35$$35$1 (as Trees.Measures.notEmpty Int) ds_d3Rc) (>= (apply$35$$35$0 (as len Int) ds_d3Rc) 0)))
(define-fun b$36$$35$$35$823 () Bool (and (=> (apply$35$$35$1 (as Trees.Measures.notEmpty Int) xs$35$$35$a3Cz) (> VV$35$$35$F$35$$35$8 0)) (= VV$35$$35$F$35$$35$8 elems$35$$35$a3CB) (>= VV$35$$35$F$35$$35$8 0)))
(define-fun b$36$$35$$35$327 () Bool (= lq_anf$36$$35$$35$7205759403792808726$35$$35$d3VY 5))
(define-fun b$36$$35$$35$839 () Bool false)
(define-fun b$36$$35$$35$359 () Bool (>= (apply$35$$35$0 (as len Int) xs$35$$35$a3CO) 0))
(define-fun b$36$$35$$35$119 () Bool (and (= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792808662$35$$35$d3UW) (strLen lq_anf$36$$35$$35$7205759403792808661$35$$35$d3UV)) (>= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792808662$35$$35$d3UW) 0) (= lq_anf$36$$35$$35$7205759403792808662$35$$35$d3UW lq_anf$36$$35$$35$7205759403792808661$35$$35$d3UV)))
(define-fun b$36$$35$$35$375 () Bool (= lq_anf$36$$35$$35$7205759403792808745$35$$35$d3Wh ds_d3Q4))
(define-fun b$36$$35$$35$391 () Bool (= lq_anf$36$$35$$35$7205759403792808752$35$$35$d3Wo (+ lq_anf$36$$35$$35$7205759403792808751$35$$35$d3Wn z$35$$35$a3Cu)))
(define-fun b$36$$35$$35$151 () Bool (and (apply$35$$35$1 (as Trees.Measures.notEmpty Int) lq_anf$36$$35$$35$7205759403792808681$35$$35$d3Vf) (= lq_anf$36$$35$$35$7205759403792808681$35$$35$d3Vf ds_d3Qy) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808681$35$$35$d3Vf) 0)))
(define-fun b$36$$35$$35$423 () Bool (and (= lq_anf$36$$35$$35$7205759403792808760$35$$35$d3Ww ds_d3OZ) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808760$35$$35$d3Ww) 0)))
(define-fun b$36$$35$$35$183 () Bool (and (apply$35$$35$1 (as Trees.Measures.notEmpty Int) lq_anf$36$$35$$35$7205759403792808687$35$$35$d3Vl) (= lq_anf$36$$35$$35$7205759403792808687$35$$35$d3Vl ds_d3RG) (= lq_anf$36$$35$$35$7205759403792808687$35$$35$d3Vl (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) x$35$$35$a3Da) ds_d3So)) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792808687$35$$35$d3Vl) x$35$$35$a3Da) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808687$35$$35$d3Vl) (+ 1 (apply$35$$35$0 (as len Int) ds_d3So))) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792808687$35$$35$d3Vl) ds_d3So) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808687$35$$35$d3Vl) 0)))
(define-fun b$36$$35$$35$439 () Bool (and (apply$35$$35$1 (as Trees.Measures.notEmpty Int) lq_anf$36$$35$$35$7205759403792808765$35$$35$d3WB) (= lq_anf$36$$35$$35$7205759403792808765$35$$35$d3WB ds_d3Pd) (= lq_anf$36$$35$$35$7205759403792808765$35$$35$d3WB (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) ds_d3Pq) xs$35$$35$a3CF)) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792808765$35$$35$d3WB) ds_d3Pq) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808765$35$$35$d3WB) (+ 1 (apply$35$$35$0 (as len Int) xs$35$$35$a3CF))) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792808765$35$$35$d3WB) xs$35$$35$a3CF) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808765$35$$35$d3WB) 0)))
(define-fun b$36$$35$$35$455 () Bool (and (=> (apply$35$$35$1 (as Trees.Measures.notEmpty Int) xs$35$$35$a3Cv) (> lq_anf$36$$35$$35$7205759403792808774$35$$35$d3WK 0)) (>= lq_anf$36$$35$$35$7205759403792808774$35$$35$d3WK 0)))
(define-fun b$36$$35$$35$247 () Bool (>= (apply$35$$35$0 (as len Int) xs$35$$35$a3CJ) 0))
(define-fun b$36$$35$$35$264 () Bool (and (= lq_anf$36$$35$$35$7205759403792808707$35$$35$d3VF ds_d3Oe) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808707$35$$35$d3VF) 0)))
(define-fun b$36$$35$$35$792 () Bool (= VV$35$$35$F$35$$35$17 lq_anf$36$$35$$35$7205759403792808771$35$$35$d3WH))
(define-fun b$36$$35$$35$808 () Bool (and (apply$35$$35$1 (as Trees.Measures.notEmpty Int) VV$35$$35$F$35$$35$116) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$116) 0)))
(define-fun b$36$$35$$35$312 () Bool (and (apply$35$$35$1 (as Trees.Measures.notEmpty Int) lq_anf$36$$35$$35$7205759403792808716$35$$35$d3VO) (= lq_anf$36$$35$$35$7205759403792808716$35$$35$d3VO ds_d3Rc) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808716$35$$35$d3VO) 0)))
(define-fun b$36$$35$$35$824 () Bool (and (= VV$35$$35$F$35$$35$264 lq_anf$36$$35$$35$7205759403792808686$35$$35$d3Vk) (= (apply$35$$35$8 (as len Int) VV$35$$35$F$35$$35$264) (strLen lq_anf$36$$35$$35$7205759403792808685$35$$35$d3Vj)) (>= (apply$35$$35$8 (as len Int) VV$35$$35$F$35$$35$264) 0) (= VV$35$$35$F$35$$35$264 lq_anf$36$$35$$35$7205759403792808685$35$$35$d3Vj)))
(define-fun b$36$$35$$35$840 () Bool (and (= (apply$35$$35$1 (as Trees.Measures.notEmpty Int) wxs$35$$35$a3CY) (apply$35$$35$1 (as Trees.Measures.notEmpty Int) VV$35$$35$F$35$$35$27)) (= VV$35$$35$F$35$$35$27 elems$35$$35$a3CZ) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$27) 0)))
(define-fun b$36$$35$$35$856 () Bool (and (= VV$35$$35$F$35$$35$111 lq_anf$36$$35$$35$7205759403792808715$35$$35$d3VN) (= (apply$35$$35$8 (as len Int) VV$35$$35$F$35$$35$111) (strLen lq_anf$36$$35$$35$7205759403792808714$35$$35$d3VM)) (>= (apply$35$$35$8 (as len Int) VV$35$$35$F$35$$35$111) 0) (= VV$35$$35$F$35$$35$111 lq_anf$36$$35$$35$7205759403792808714$35$$35$d3VM)))
(define-fun b$36$$35$$35$120 () Bool (= lq_anf$36$$35$$35$7205759403792808663$35$$35$d3UX lit$36$Measures.lhs))
(define-fun b$36$$35$$35$376 () Bool (and (= lq_anf$36$$35$$35$7205759403792808745$35$$35$d3Wh ds_d3Q4) (not (= lq_anf$36$$35$$35$7205759403792808745$35$$35$d3Wh 0))))
(define-fun b$36$$35$$35$392 () Bool (= lq_anf$36$$35$$35$7205759403792808753$35$$35$d3Wp 3))
(define-fun b$36$$35$$35$152 () Bool (and (apply$35$$35$1 (as Trees.Measures.notEmpty Int) lq_anf$36$$35$$35$7205759403792808681$35$$35$d3Vf) (= lq_anf$36$$35$$35$7205759403792808681$35$$35$d3Vf ds_d3Qy) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808681$35$$35$d3Vf) 0)))
(define-fun b$36$$35$$35$184 () Bool (and (= lq_anf$36$$35$$35$7205759403792808688$35$$35$d3Vm ds_d3So) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808688$35$$35$d3Vm) 0)))
(define-fun b$36$$35$$35$440 () Bool (= lq_anf$36$$35$$35$7205759403792808767$35$$35$d3WD 1))
(define-fun b$36$$35$$35$200 () Bool (and (apply$35$$35$1 (as Trees.Measures.notEmpty Int) lq_anf$36$$35$$35$7205759403792808693$35$$35$d3Vr) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792808693$35$$35$d3Vr) y$35$$35$a3Dc) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808693$35$$35$d3Vr) (+ 1 (apply$35$$35$0 (as len Int) etc$35$$35$a3Dd))) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792808693$35$$35$d3Vr) etc$35$$35$a3Dd) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808693$35$$35$d3Vr) 0)))
(define-fun b$36$$35$$35$456 () Bool (>= (apply$35$$35$0 (as len Int) xs$35$$35$a3Cw) 0))
(define-fun b$36$$35$$35$809 () Bool (and (= VV$35$$35$F$35$$35$148 xs$35$$35$a3CJ) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$148) 0)))
(define-fun b$36$$35$$35$313 () Bool (and (apply$35$$35$1 (as Trees.Measures.notEmpty Int) lq_anf$36$$35$$35$7205759403792808716$35$$35$d3VO) (= lq_anf$36$$35$$35$7205759403792808716$35$$35$d3VO ds_d3Rc) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808716$35$$35$d3VO) 0)))
(define-fun b$36$$35$$35$329 () Bool (and (not (apply$35$$35$1 (as Trees.Measures.notEmpty Int) lq_anf$36$$35$$35$7205759403792808727$35$$35$d3VZ)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808727$35$$35$d3VZ) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808727$35$$35$d3VZ) 0)))
(define-fun b$36$$35$$35$841 () Bool (< 0 VV$35$$35$F$35$$35$43))
(define-fun b$36$$35$$35$121 () Bool (and (= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792808664$35$$35$d3UY) (strLen lq_anf$36$$35$$35$7205759403792808663$35$$35$d3UX)) (>= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792808664$35$$35$d3UY) 0) (= lq_anf$36$$35$$35$7205759403792808664$35$$35$d3UY lq_anf$36$$35$$35$7205759403792808663$35$$35$d3UX)))
(define-fun b$36$$35$$35$377 () Bool (and (= lq_anf$36$$35$$35$7205759403792808745$35$$35$d3Wh 0) (= lq_anf$36$$35$$35$7205759403792808745$35$$35$d3Wh ds_d3Q4)))
(define-fun b$36$$35$$35$393 () Bool (= lq_anf$36$$35$$35$7205759403792808754$35$$35$d3Wq lq_anf$36$$35$$35$7205759403792808753$35$$35$d3Wp))
(define-fun b$36$$35$$35$153 () Bool (and (apply$35$$35$1 (as Trees.Measures.notEmpty Int) lq_anf$36$$35$$35$7205759403792808681$35$$35$d3Vf) (not (apply$35$$35$1 (as Trees.Measures.notEmpty Int) lq_anf$36$$35$$35$7205759403792808681$35$$35$d3Vf)) (= lq_anf$36$$35$$35$7205759403792808681$35$$35$d3Vf (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792808681$35$$35$d3Vf ds_d3Qy) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808681$35$$35$d3Vf) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808681$35$$35$d3Vf) 0)))
(define-fun b$36$$35$$35$425 () Bool (>= (apply$35$$35$0 (as len Int) xs$35$$35$a3CG) 0))
(define-fun b$36$$35$$35$441 () Bool (= lq_anf$36$$35$$35$7205759403792808768$35$$35$d3WE lq_anf$36$$35$$35$7205759403792808767$35$$35$d3WD))
(define-fun b$36$$35$$35$201 () Bool (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808694$35$$35$d3Vs) 0))
(define-fun b$36$$35$$35$457 () Bool (and (=> (apply$35$$35$1 (as Trees.Measures.notEmpty Int) xs$35$$35$a3Cw) (> elems$35$$35$a3Cy 0)) (>= elems$35$$35$a3Cy 0)))
(define-fun b$36$$35$$35$249 () Bool (= lq_anf$36$$35$$35$7205759403792808704$35$$35$d3VC lq_anf$36$$35$$35$7205759403792808703$35$$35$d3VB))
(define-fun b$36$$35$$35$266 () Bool (>= (apply$35$$35$0 (as len Int) xs$35$$35$a3CL) 0))
(define-fun b$36$$35$$35$282 () Bool (and (apply$35$$35$1 (as Trees.Measures.notEmpty Int) lq_anf$36$$35$$35$7205759403792808709$35$$35$d3VH) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792808709$35$$35$d3VH) x$35$$35$a3CK) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808709$35$$35$d3VH) (+ 1 (apply$35$$35$0 (as len Int) ys$35$$35$a3Fw))) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792808709$35$$35$d3VH) ys$35$$35$a3Fw) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808709$35$$35$d3VH) 0)))
(define-fun b$36$$35$$35$298 () Bool (and (apply$35$$35$1 (as Trees.Measures.notEmpty Int) ds_d3QK) (>= (apply$35$$35$0 (as len Int) ds_d3QK) 0)))
(define-fun b$36$$35$$35$810 () Bool (and (=> (apply$35$$35$1 (as Trees.Measures.notEmpty Int) xs$35$$35$a3CC) (> VV$35$$35$F$35$$35$5 0)) (= VV$35$$35$F$35$$35$5 elems$35$$35$a3CD) (>= VV$35$$35$F$35$$35$5 0)))
(define-fun b$36$$35$$35$314 () Bool (and (apply$35$$35$1 (as Trees.Measures.notEmpty Int) lq_anf$36$$35$$35$7205759403792808716$35$$35$d3VO) (not (apply$35$$35$1 (as Trees.Measures.notEmpty Int) lq_anf$36$$35$$35$7205759403792808716$35$$35$d3VO)) (= lq_anf$36$$35$$35$7205759403792808716$35$$35$d3VO (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792808716$35$$35$d3VO ds_d3Rc) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808716$35$$35$d3VO) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808716$35$$35$d3VO) 0)))
(define-fun b$36$$35$$35$842 () Bool (and (= VV$35$$35$F$35$$35$107 lq_anf$36$$35$$35$7205759403792808719$35$$35$d3VR) (= (apply$35$$35$8 (as len Int) VV$35$$35$F$35$$35$107) (strLen lq_anf$36$$35$$35$7205759403792808718$35$$35$d3VQ)) (>= (apply$35$$35$8 (as len Int) VV$35$$35$F$35$$35$107) 0) (= VV$35$$35$F$35$$35$107 lq_anf$36$$35$$35$7205759403792808718$35$$35$d3VQ)))
(define-fun b$36$$35$$35$346 () Bool (>= (apply$35$$35$0 (as len Int) ds_d3NP) 0))
(define-fun b$36$$35$$35$858 () Bool (and (= VV$35$$35$F$35$$35$207 lq_anf$36$$35$$35$7205759403792808694$35$$35$d3Vs) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$207) 0)))
(define-fun b$36$$35$$35$362 () Bool (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808739$35$$35$d3Wb) 0))
(define-fun b$36$$35$$35$122 () Bool (= lq_anf$36$$35$$35$7205759403792808665$35$$35$d3UZ 18))
(define-fun b$36$$35$$35$378 () Bool (= lq_anf$36$$35$$35$7205759403792808746$35$$35$d3Wi lit$36$divide$45$by$45$zero))
(define-fun b$36$$35$$35$154 () Bool (= lq_anf$36$$35$$35$7205759403792808682$35$$35$d3Vg lit$36$Relaxeth$33$$32$this$32$too$32$shall$32$ne$39$er$32$be))
(define-fun b$36$$35$$35$426 () Bool (and (apply$35$$35$1 (as Trees.Measures.notEmpty Int) lq_anf$36$$35$$35$7205759403792808760$35$$35$d3Ww) (= lq_anf$36$$35$$35$7205759403792808760$35$$35$d3Ww ds_d3OZ) (= lq_anf$36$$35$$35$7205759403792808760$35$$35$d3Ww (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) ds_d3Pc) xs$35$$35$a3CG)) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792808760$35$$35$d3Ww) ds_d3Pc) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808760$35$$35$d3Ww) (+ 1 (apply$35$$35$0 (as len Int) xs$35$$35$a3CG))) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792808760$35$$35$d3Ww) xs$35$$35$a3CG) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808760$35$$35$d3Ww) 0)))
(define-fun b$36$$35$$35$442 () Bool (< 0 lq_anf$36$$35$$35$7205759403792808769$35$$35$d3WF))
(define-fun b$36$$35$$35$250 () Bool (= lq_anf$36$$35$$35$7205759403792808704$35$$35$d3VC lq_anf$36$$35$$35$7205759403792808703$35$$35$d3VB))
(define-fun b$36$$35$$35$267 () Bool (and (apply$35$$35$1 (as Trees.Measures.notEmpty Int) lq_anf$36$$35$$35$7205759403792808707$35$$35$d3VF) (= lq_anf$36$$35$$35$7205759403792808707$35$$35$d3VF ds_d3Oe) (= lq_anf$36$$35$$35$7205759403792808707$35$$35$d3VF (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) x$35$$35$a3CK) xs$35$$35$a3CL)) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792808707$35$$35$d3VF) x$35$$35$a3CK) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808707$35$$35$d3VF) (+ 1 (apply$35$$35$0 (as len Int) xs$35$$35$a3CL))) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792808707$35$$35$d3VF) xs$35$$35$a3CL) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808707$35$$35$d3VF) 0)))
(define-fun b$36$$35$$35$283 () Bool (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808710$35$$35$d3VI) 0))
(define-fun b$36$$35$$35$795 () Bool (and (not (apply$35$$35$1 (as Trees.Measures.notEmpty Int) VV$35$$35$F$35$$35$81)) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$81) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$81) 0)))
(define-fun b$36$$35$$35$299 () Bool (and (apply$35$$35$1 (as Trees.Measures.notEmpty Int) lq_anf$36$$35$$35$7205759403792808713$35$$35$d3VL) (= lq_anf$36$$35$$35$7205759403792808713$35$$35$d3VL ds_d3QK) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808713$35$$35$d3VL) 0)))
(define-fun b$36$$35$$35$315 () Bool (= lq_anf$36$$35$$35$7205759403792808718$35$$35$d3VQ lit$36$cannot$32$add$32$up$32$empty$32$list))
(define-fun b$36$$35$$35$827 () Bool (and (apply$35$$35$1 (as Trees.Measures.notEmpty Int) VV$35$$35$F$35$$35$104) (= VV$35$$35$F$35$$35$104 ds_d3Rc) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$104) 0)))
(define-fun b$36$$35$$35$331 () Bool (and (apply$35$$35$1 (as Trees.Measures.notEmpty Int) lq_anf$36$$35$$35$7205759403792808728$35$$35$d3W0) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792808728$35$$35$d3W0) lq_anf$36$$35$$35$7205759403792808726$35$$35$d3VY) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808728$35$$35$d3W0) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808727$35$$35$d3VZ))) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792808728$35$$35$d3W0) lq_anf$36$$35$$35$7205759403792808727$35$$35$d3VZ) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808728$35$$35$d3W0) 0)))
(define-fun b$36$$35$$35$843 () Bool (and (= VV$35$$35$F$35$$35$12 xs$35$$35$a3Cw) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$12) 0)))
(define-fun b$36$$35$$35$347 () Bool (and (= lq_anf$36$$35$$35$7205759403792808734$35$$35$d3W6 ds_d3NP) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808734$35$$35$d3W6) 0)))
(define-fun b$36$$35$$35$123 () Bool (= lq_anf$36$$35$$35$7205759403792808666$35$$35$d3V0 lq_anf$36$$35$$35$7205759403792808665$35$$35$d3UZ))
(define-fun b$36$$35$$35$379 () Bool (and (= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792808747$35$$35$d3Wj) (strLen lq_anf$36$$35$$35$7205759403792808746$35$$35$d3Wi)) (>= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792808747$35$$35$d3Wj) 0) (= lq_anf$36$$35$$35$7205759403792808747$35$$35$d3Wj lq_anf$36$$35$$35$7205759403792808746$35$$35$d3Wi)))
(define-fun b$36$$35$$35$139 () Bool (and (apply$35$$35$1 (as Trees.Measures.notEmpty Int) ds_d3Q7) (>= (apply$35$$35$0 (as len Int) ds_d3Q7) 0)))
(define-fun b$36$$35$$35$395 () Bool (and (apply$35$$35$1 (as Trees.Measures.notEmpty Int) wxs$35$$35$a3CY) (>= (apply$35$$35$0 (as len Int) wxs$35$$35$a3CY) 0)))
(define-fun b$36$$35$$35$155 () Bool (and (= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792808683$35$$35$d3Vh) (strLen lq_anf$36$$35$$35$7205759403792808682$35$$35$d3Vg)) (>= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792808683$35$$35$d3Vh) 0) (= lq_anf$36$$35$$35$7205759403792808683$35$$35$d3Vh lq_anf$36$$35$$35$7205759403792808682$35$$35$d3Vg)))
(define-fun b$36$$35$$35$427 () Bool (= lq_anf$36$$35$$35$7205759403792808762$35$$35$d3Wy 1))
(define-fun b$36$$35$$35$251 () Bool (and (not lq_anf$36$$35$$35$7205759403792808704$35$$35$d3VC) (= lq_anf$36$$35$$35$7205759403792808704$35$$35$d3VC lq_anf$36$$35$$35$7205759403792808703$35$$35$d3VB)))
(define-fun b$36$$35$$35$796 () Bool (= VV$35$$35$F$35$$35$18 lq_anf$36$$35$$35$7205759403792808771$35$$35$d3WH))
(define-fun b$36$$35$$35$300 () Bool (and (apply$35$$35$1 (as Trees.Measures.notEmpty Int) lq_anf$36$$35$$35$7205759403792808713$35$$35$d3VL) (= lq_anf$36$$35$$35$7205759403792808713$35$$35$d3VL ds_d3QK) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808713$35$$35$d3VL) 0)))
(define-fun b$36$$35$$35$812 () Bool (and (= VV$35$$35$F$35$$35$53 lq_anf$36$$35$$35$7205759403792808750$35$$35$d3Wm) (= VV$35$$35$F$35$$35$53 lq_anf$36$$35$$35$7205759403792808749$35$$35$d3Wl)))
(define-fun b$36$$35$$35$316 () Bool (and (= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792808719$35$$35$d3VR) (strLen lq_anf$36$$35$$35$7205759403792808718$35$$35$d3VQ)) (>= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792808719$35$$35$d3VR) 0) (= lq_anf$36$$35$$35$7205759403792808719$35$$35$d3VR lq_anf$36$$35$$35$7205759403792808718$35$$35$d3VQ)))
(define-fun b$36$$35$$35$828 () Bool (and (= VV$35$$35$F$35$$35$136 ys$35$$35$a3Fw) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$136) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$136) (apply$35$$35$0 (as len Int) xs$35$$35$a3CL))))
(define-fun b$36$$35$$35$348 () Bool (and (= lq_anf$36$$35$$35$7205759403792808734$35$$35$d3W6 ds_d3NP) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808734$35$$35$d3W6) 0)))
(define-fun b$36$$35$$35$364 () Bool (= lq_anf$36$$35$$35$7205759403792808740$35$$35$d3Wc lit$36$LH$45$verificacion$45$asistida$45$0.1.0.0$45$B0H5GdfJzuc2jwReQRD3tY))
(define-fun b$36$$35$$35$124 () Bool (= lq_anf$36$$35$$35$7205759403792808667$35$$35$d3V1 11))
(define-fun b$36$$35$$35$140 () Bool (and (apply$35$$35$1 (as Trees.Measures.notEmpty Int) lq_anf$36$$35$$35$7205759403792808678$35$$35$d3Vc) (= lq_anf$36$$35$$35$7205759403792808678$35$$35$d3Vc ds_d3Q7) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808678$35$$35$d3Vc) 0)))
(define-fun b$36$$35$$35$428 () Bool (= lq_anf$36$$35$$35$7205759403792808763$35$$35$d3Wz lq_anf$36$$35$$35$7205759403792808762$35$$35$d3Wy))
(define-fun b$36$$35$$35$444 () Bool (>= (apply$35$$35$0 (as len Int) ds_d3PI) 0))
(define-fun b$36$$35$$35$460 () Bool (and (apply$35$$35$1 (as Trees.Measures.notEmpty Int) xs$35$$35$a3Cz) (>= (apply$35$$35$0 (as len Int) xs$35$$35$a3Cz) 0)))
(define-fun b$36$$35$$35$45 () Bool (not GHC.Types.False))
(define-fun b$36$$35$$35$301 () Bool (and (apply$35$$35$1 (as Trees.Measures.notEmpty Int) lq_anf$36$$35$$35$7205759403792808713$35$$35$d3VL) (not (apply$35$$35$1 (as Trees.Measures.notEmpty Int) lq_anf$36$$35$$35$7205759403792808713$35$$35$d3VL)) (= lq_anf$36$$35$$35$7205759403792808713$35$$35$d3VL (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792808713$35$$35$d3VL ds_d3QK) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808713$35$$35$d3VL) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808713$35$$35$d3VL) 0)))
(define-fun b$36$$35$$35$813 () Bool (and (= VV$35$$35$F$35$$35$133 zs$35$$35$a3Fy) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$133) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$133) (apply$35$$35$0 (as len Int) xs$35$$35$a3CL))))
(define-fun b$36$$35$$35$317 () Bool (and (apply$35$$35$1 (as Trees.Measures.notEmpty Int) lq_anf$36$$35$$35$7205759403792808716$35$$35$d3VO) (= lq_anf$36$$35$$35$7205759403792808716$35$$35$d3VO ds_d3Rc) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808716$35$$35$d3VO) 0)))
(define-fun b$36$$35$$35$829 () Bool (and (apply$35$$35$1 (as Trees.Measures.notEmpty Int) VV$35$$35$F$35$$35$9) (= VV$35$$35$F$35$$35$9 xs$35$$35$a3Cz) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$9) 0)))
(define-fun b$36$$35$$35$333 () Bool (and (apply$35$$35$1 (as Trees.Measures.notEmpty Int) lq_anf$36$$35$$35$7205759403792808729$35$$35$d3W1) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792808729$35$$35$d3W1) lq_anf$36$$35$$35$7205759403792808725$35$$35$d3VX) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808729$35$$35$d3W1) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808728$35$$35$d3W0))) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792808729$35$$35$d3W1) lq_anf$36$$35$$35$7205759403792808728$35$$35$d3W0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808729$35$$35$d3W1) 0)))
(define-fun b$36$$35$$35$349 () Bool (and (not (apply$35$$35$1 (as Trees.Measures.notEmpty Int) lq_anf$36$$35$$35$7205759403792808734$35$$35$d3W6)) (= lq_anf$36$$35$$35$7205759403792808734$35$$35$d3W6 (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792808734$35$$35$d3W6 ds_d3NP) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808734$35$$35$d3W6) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808734$35$$35$d3W6) 0)))
(define-fun b$36$$35$$35$125 () Bool (= lq_anf$36$$35$$35$7205759403792808668$35$$35$d3V2 lq_anf$36$$35$$35$7205759403792808667$35$$35$d3V1))
(define-fun b$36$$35$$35$141 () Bool (and (apply$35$$35$1 (as Trees.Measures.notEmpty Int) lq_anf$36$$35$$35$7205759403792808678$35$$35$d3Vc) (= lq_anf$36$$35$$35$7205759403792808678$35$$35$d3Vc ds_d3Q7) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808678$35$$35$d3Vc) 0)))
(define-fun b$36$$35$$35$429 () Bool (=> (apply$35$$35$1 (as Trees.Measures.notEmpty Int) xs$35$$35$a3CG) (> lq_anf$36$$35$$35$7205759403792808764$35$$35$d3WA 0)))
(define-fun b$36$$35$$35$445 () Bool (and (= lq_anf$36$$35$$35$7205759403792808770$35$$35$d3WG ds_d3PI) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808770$35$$35$d3WG) 0)))
(define-fun b$36$$35$$35$461 () Bool (and (=> (apply$35$$35$1 (as Trees.Measures.notEmpty Int) xs$35$$35$a3Cz) (> elems$35$$35$a3CB 0)) (>= elems$35$$35$a3CB 0)))
(define-fun b$36$$35$$35$302 () Bool (= lq_anf$36$$35$$35$7205759403792808714$35$$35$d3VM lit$36$foldl1))
(define-fun b$36$$35$$35$814 () Bool (and (= VV$35$$35$F$35$$35$6 xs$35$$35$a3CC) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$6) 0)))
(define-fun b$36$$35$$35$830 () Bool (and (= VV$35$$35$F$35$$35$265 lq_anf$36$$35$$35$7205759403792808683$35$$35$d3Vh) (= (apply$35$$35$8 (as len Int) VV$35$$35$F$35$$35$265) (strLen lq_anf$36$$35$$35$7205759403792808682$35$$35$d3Vg)) (>= (apply$35$$35$8 (as len Int) VV$35$$35$F$35$$35$265) 0) (= VV$35$$35$F$35$$35$265 lq_anf$36$$35$$35$7205759403792808682$35$$35$d3Vg)))
(define-fun b$36$$35$$35$366 () Bool (= lq_anf$36$$35$$35$7205759403792808742$35$$35$d3We lit$36$Trees.Measures))
(define-fun b$36$$35$$35$126 () Bool (= lq_anf$36$$35$$35$7205759403792808669$35$$35$d3V3 18))
(define-fun b$36$$35$$35$142 () Bool (and (apply$35$$35$1 (as Trees.Measures.notEmpty Int) lq_anf$36$$35$$35$7205759403792808678$35$$35$d3Vc) (not (apply$35$$35$1 (as Trees.Measures.notEmpty Int) lq_anf$36$$35$$35$7205759403792808678$35$$35$d3Vc)) (= lq_anf$36$$35$$35$7205759403792808678$35$$35$d3Vc (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792808678$35$$35$d3Vc ds_d3Q7) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808678$35$$35$d3Vc) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808678$35$$35$d3Vc) 0)))
(define-fun b$36$$35$$35$414 () Bool (and (= (apply$35$$35$1 (as Trees.Measures.notEmpty Int) wxs$35$$35$a3CY) (apply$35$$35$1 (as Trees.Measures.notEmpty Int) elems$35$$35$a3CZ)) (>= (apply$35$$35$0 (as len Int) elems$35$$35$a3CZ) 0)))
(define-fun b$36$$35$$35$446 () Bool (and (= lq_anf$36$$35$$35$7205759403792808770$35$$35$d3WG ds_d3PI) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808770$35$$35$d3WG) 0)))
(define-fun b$36$$35$$35$799 () Bool (and (not (apply$35$$35$1 (as Trees.Measures.notEmpty Int) VV$35$$35$F$35$$35$82)) (= VV$35$$35$F$35$$35$82 lq_anf$36$$35$$35$7205759403792808733$35$$35$d3W5) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$82) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$82) 0)))
(define-fun b$36$$35$$35$303 () Bool (and (= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792808715$35$$35$d3VN) (strLen lq_anf$36$$35$$35$7205759403792808714$35$$35$d3VM)) (>= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792808715$35$$35$d3VN) 0) (= lq_anf$36$$35$$35$7205759403792808715$35$$35$d3VN lq_anf$36$$35$$35$7205759403792808714$35$$35$d3VM)))
(define-fun b$36$$35$$35$815 () Bool (= VV$35$$35$F$35$$35$22 lq_anf$36$$35$$35$7205759403792808766$35$$35$d3WC))
(define-fun b$36$$35$$35$319 () Bool (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808721$35$$35$d3VT) 0))
(define-fun b$36$$35$$35$831 () Bool (= VV$35$$35$F$35$$35$25 lq_anf$36$$35$$35$7205759403792808761$35$$35$d3Wx))
(define-fun b$36$$35$$35$335 () Bool (and (apply$35$$35$1 (as Trees.Measures.notEmpty Int) lq_anf$36$$35$$35$7205759403792808730$35$$35$d3W2) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792808730$35$$35$d3W2) lq_anf$36$$35$$35$7205759403792808724$35$$35$d3VW) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808730$35$$35$d3W2) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808729$35$$35$d3W1))) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792808730$35$$35$d3W2) lq_anf$36$$35$$35$7205759403792808729$35$$35$d3W1) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808730$35$$35$d3W2) 0)))
(define-fun b$36$$35$$35$351 () Bool (and (= lq_anf$36$$35$$35$7205759403792808734$35$$35$d3W6 ds_d3NP) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808734$35$$35$d3W6) 0)))
(define-fun b$36$$35$$35$127 () Bool (= lq_anf$36$$35$$35$7205759403792808670$35$$35$d3V4 lq_anf$36$$35$$35$7205759403792808669$35$$35$d3V3))
(define-fun b$36$$35$$35$383 () Bool (= lq_anf$36$$35$$35$7205759403792808748$35$$35$d3Wk (+ x$35$$35$a3Cq y$35$$35$a3Cr)))
(define-fun b$36$$35$$35$143 () Bool (= lq_anf$36$$35$$35$7205759403792808679$35$$35$d3Vd lit$36$Fear$32$not$33$$32$$39$twill$32$ne$39$er$32$come$32$to$32$pass))
(define-fun b$36$$35$$35$175 () Bool (>= (apply$35$$35$0 (as len Int) ds_d3RG) 0))
(define-fun b$36$$35$$35$431 () Bool (and (apply$35$$35$1 (as Trees.Measures.notEmpty Int) ds_d3Pd) (>= (apply$35$$35$0 (as len Int) ds_d3Pd) 0)))
(define-fun b$36$$35$$35$447 () Bool (and (not (apply$35$$35$1 (as Trees.Measures.notEmpty Int) lq_anf$36$$35$$35$7205759403792808770$35$$35$d3WG)) (= lq_anf$36$$35$$35$7205759403792808770$35$$35$d3WG (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792808770$35$$35$d3WG ds_d3PI) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808770$35$$35$d3WG) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808770$35$$35$d3WG) 0)))
(push 1)
(assert (and true b$36$$35$$35$48 b$36$$35$$35$364 b$36$$35$$35$45 b$36$$35$$35$366))
(push 1)
(assert (not (= 0 1)))
(check-sat)
(pop 1)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (exists ((lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4156 Int) (lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4156 Int) (lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4156 Int) (lq_karg$36$VV$35$$35$4155$35$$35$k_$35$$35$4156 Int)) (and (= lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4156 Trees.Measures.sumBad) (= lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4156 Trees.Measures.sumOk) (= lq_karg$36$VV$35$$35$4155$35$$35$k_$35$$35$4156 VV$35$$35$F$35$$35$46) (= lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4156 wxs$35$$35$a3CY) (exists ((VV$35$$35$F$35$$35$42 Int)) (and (< 0 VV$35$$35$F$35$$35$42) (= lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4156 Trees.Measures.sumBad) (= lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4156 Trees.Measures.sumOk) (= lq_karg$36$VV$35$$35$4155$35$$35$k_$35$$35$4156 VV$35$$35$F$35$$35$42) (= lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4156 wxs$35$$35$a3CY))))) b$36$$35$$35$48 b$36$$35$$35$395 b$36$$35$$35$45))
(push 1)
(assert (not (> VV$35$$35$F$35$$35$46 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$46 Trees.Measures.sumOk)))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$46 Trees.Measures.sumBad)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$46 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= 0 VV$35$$35$F$35$$35$46))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$46 Trees.Measures.sumOk))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$46 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$46 Trees.Measures.sumBad))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< 0 VV$35$$35$F$35$$35$46)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$46 Trees.Measures.sumBad)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$46 Trees.Measures.sumBad)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$46 0))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$46 Trees.Measures.sumOk)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$46 Trees.Measures.sumBad)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$46 (apply$35$$35$0 (as len Int) wxs$35$$35$a3CY))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$46 Trees.Measures.sumOk)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$46 (+ (apply$35$$35$0 (as len Int) wxs$35$$35$a3CY) Trees.Measures.sumOk))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$46 Trees.Measures.sumOk)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$46 Trees.Measures.sumOk)))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$46 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (=> (apply$35$$35$1 (as Trees.Measures.notEmpty Int) wxs$35$$35$a3CY) (> VV$35$$35$F$35$$35$46 0))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$46 1)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$46 Trees.Measures.sumBad)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$46 (+ (apply$35$$35$0 (as len Int) wxs$35$$35$a3CY) Trees.Measures.sumBad))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$46 Trees.Measures.sumBad)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$46 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$46 Trees.Measures.sumOk)))
(check-sat)
(pop 1)
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (exists ((lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4163 Int) (lq_karg$36$VV$35$$35$4162$35$$35$k_$35$$35$4163 Int) (lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4163 Int) (lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4163 Int)) (and (= lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4163 Trees.Measures.sumBad) (= lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4163 Trees.Measures.sumOk) (= lq_karg$36$VV$35$$35$4162$35$$35$k_$35$$35$4163 VV$35$$35$F$35$$35$45) (= lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4163 wxs$35$$35$a3CY) (exists ((VV$35$$35$F$35$$35$41 Int)) (and (= lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4163 Trees.Measures.sumBad) (= lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4163 Trees.Measures.sumOk) (= lq_karg$36$VV$35$$35$4162$35$$35$k_$35$$35$4163 VV$35$$35$F$35$$35$41) (= lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4163 wxs$35$$35$a3CY))))) b$36$$35$$35$48 b$36$$35$$35$395 b$36$$35$$35$45))
(push 1)
(assert (not (= (apply$35$$35$0 (as snd Int) VV$35$$35$F$35$$35$45) Trees.Measures.sumOk)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as fst Int) VV$35$$35$F$35$$35$45) Trees.Measures.sumOk)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as x_Tuple22 Int) VV$35$$35$F$35$$35$45) Trees.Measures.sumBad)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as snd Int) VV$35$$35$F$35$$35$45) Trees.Measures.sumBad)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as fst Int) VV$35$$35$F$35$$35$45) Trees.Measures.sumBad)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as x_Tuple21 Int) VV$35$$35$F$35$$35$45) Trees.Measures.sumOk)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as x_Tuple22 Int) VV$35$$35$F$35$$35$45) Trees.Measures.sumOk)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as x_Tuple21 Int) VV$35$$35$F$35$$35$45) Trees.Measures.sumBad)))
(check-sat)
(pop 1)
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (exists ((lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4170 Int) (lq_karg$36$VV$35$$35$4169$35$$35$k_$35$$35$4170 Int) (lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4170 Int) (lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4170 Int)) (and (= lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4170 Trees.Measures.sumBad) (= lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4170 Trees.Measures.sumOk) (= lq_karg$36$VV$35$$35$4169$35$$35$k_$35$$35$4170 VV$35$$35$F$35$$35$40) (= lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4170 wxs$35$$35$a3CY) (exists ((lq_tmp$36$x$35$$35$4149 Int) (VV$35$$35$F$35$$35$49 Int)) (and (exists ((lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4163 Int) (lq_tmp$36$x$35$$35$4168 Int) (lq_karg$36$VV$35$$35$4162$35$$35$k_$35$$35$4163 Int) (lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4163 Int) (lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4163 Int)) (and (= lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4163 Trees.Measures.sumBad) (= lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4163 Trees.Measures.sumOk) (= lq_karg$36$VV$35$$35$4162$35$$35$k_$35$$35$4163 lq_tmp$36$x$35$$35$4149) (= lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4163 wxs$35$$35$a3CY) (= lq_tmp$36$x$35$$35$4168 lq_tmp$36$x$35$$35$4149) (exists ((VV$35$$35$F$35$$35$41 Int)) (and (= lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4163 Trees.Measures.sumBad) (= lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4163 Trees.Measures.sumOk) (= lq_karg$36$VV$35$$35$4162$35$$35$k_$35$$35$4163 VV$35$$35$F$35$$35$41) (= lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4163 wxs$35$$35$a3CY))))) (exists ((lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4095 Int) (lq_karg$36$ds_d3R0$35$$35$k_$35$$35$4095 Int) (lq_karg$36$VV$35$$35$4094$35$$35$k_$35$$35$4095 Int) (lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4095 Int) (lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4095 Int)) (and (= lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4095 Trees.Measures.sumBad) (= lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4095 Trees.Measures.sumOk) (= lq_karg$36$VV$35$$35$4094$35$$35$k_$35$$35$4095 VV$35$$35$F$35$$35$49) (= lq_karg$36$ds_d3R0$35$$35$k_$35$$35$4095 lq_tmp$36$x$35$$35$4149) (= lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4095 wxs$35$$35$a3CY) (exists ((lq_anf$36$$35$$35$7205759403792808756$35$$35$d3Ws Int) (w$35$$35$a3D6 Int) (ds_d3R9 Int) (lq_anf$36$$35$$35$7205759403792808756$35$$35$d3Ws Int) (VV$35$$35$F$35$$35$50 Int) (ds_d3R0 Int) (lq_anf$36$$35$$35$7205759403792808756$35$$35$d3Ws Int)) (and (=> (apply$35$$35$1 (as Trees.Measures.notEmpty Int) wxs$35$$35$a3CY) (> w$35$$35$a3D6 0)) (not (= w$35$$35$a3D6 0)) (< 0 w$35$$35$a3D6) (not (= 0 w$35$$35$a3D6)) (>= w$35$$35$a3D6 0) (> w$35$$35$a3D6 0) (exists ((lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4090 Int) (lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4090 Int) (lq_tmp$36$x$35$$35$4104 Int) (lq_karg$36$VV$35$$35$4089$35$$35$k_$35$$35$4090 Int) (lq_karg$36$lq_tmp$36$x$35$$35$4088$35$$35$k_$35$$35$4090 Int) (lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4090 Int)) (and (= lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4090 Trees.Measures.sumBad) (= lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4090 Trees.Measures.sumOk) (= lq_karg$36$VV$35$$35$4089$35$$35$k_$35$$35$4090 ds_d3R9) (= lq_karg$36$lq_tmp$36$x$35$$35$4088$35$$35$k_$35$$35$4090 w$35$$35$a3D6) (= lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4090 wxs$35$$35$a3CY) (= lq_tmp$36$x$35$$35$4104 ds_d3R9) (exists ((lq_anf$36$$35$$35$7205759403792808757$35$$35$d3Wt Int) (VV$35$$35$F$35$$35$48 Int) (lq_tmp$36$x$35$$35$4181 Int)) (and (exists ((lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4161 Int) (lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4161 Int) (lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4161 Int) (lq_karg$36$lq_tmp$36$x$35$$35$4159$35$$35$k_$35$$35$4161 Int) (lq_karg$36$VV$35$$35$4160$35$$35$k_$35$$35$4161 Int)) (and (= lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4161 Trees.Measures.sumBad) (= lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4161 Trees.Measures.sumOk) (= lq_karg$36$VV$35$$35$4160$35$$35$k_$35$$35$4161 VV$35$$35$F$35$$35$48) (= lq_karg$36$lq_tmp$36$x$35$$35$4159$35$$35$k_$35$$35$4161 lq_tmp$36$x$35$$35$4181) (= lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4161 wxs$35$$35$a3CY) (exists ((lq_tmp$36$x$35$$35$4166 Int) (VV$35$$35$F$35$$35$44 Int)) (and (= lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4161 Trees.Measures.sumBad) (= lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4161 Trees.Measures.sumOk) (= lq_karg$36$VV$35$$35$4160$35$$35$k_$35$$35$4161 VV$35$$35$F$35$$35$44) (= lq_karg$36$lq_tmp$36$x$35$$35$4159$35$$35$k_$35$$35$4161 lq_tmp$36$x$35$$35$4166) (= lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4161 wxs$35$$35$a3CY))))) (= lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4090 Trees.Measures.sumBad) (= lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4090 Trees.Measures.sumOk) (= lq_karg$36$VV$35$$35$4089$35$$35$k_$35$$35$4090 VV$35$$35$F$35$$35$48) (= lq_karg$36$lq_tmp$36$x$35$$35$4088$35$$35$k_$35$$35$4090 lq_tmp$36$x$35$$35$4181) (= lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4090 wxs$35$$35$a3CY))))) (exists ((lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4087 Int) (lq_tmp$36$x$35$$35$4104 Int) (lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4087 Int) (lq_karg$36$VV$35$$35$4086$35$$35$k_$35$$35$4087 Int) (lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4087 Int)) (and (= lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4087 Trees.Measures.sumBad) (= lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4087 Trees.Measures.sumOk) (= lq_karg$36$VV$35$$35$4086$35$$35$k_$35$$35$4087 ds_d3R9) (= lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4087 wxs$35$$35$a3CY) (= lq_tmp$36$x$35$$35$4104 ds_d3R9) (exists ((lq_anf$36$$35$$35$7205759403792808757$35$$35$d3Wt Int) (VV$35$$35$F$35$$35$47 Int)) (and (exists ((lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4158 Int) (lq_karg$36$VV$35$$35$4157$35$$35$k_$35$$35$4158 Int) (lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4158 Int) (lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4158 Int)) (and (= lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4158 Trees.Measures.sumBad) (= lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4158 Trees.Measures.sumOk) (= lq_karg$36$VV$35$$35$4157$35$$35$k_$35$$35$4158 VV$35$$35$F$35$$35$47) (= lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4158 wxs$35$$35$a3CY) (exists ((VV$35$$35$F$35$$35$43 Int)) (and (< 0 VV$35$$35$F$35$$35$43) (= lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4158 Trees.Measures.sumBad) (= lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4158 Trees.Measures.sumOk) (= lq_karg$36$VV$35$$35$4157$35$$35$k_$35$$35$4158 VV$35$$35$F$35$$35$43) (= lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4158 wxs$35$$35$a3CY))))) (= lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4087 Trees.Measures.sumBad) (= lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4087 Trees.Measures.sumOk) (= lq_karg$36$VV$35$$35$4086$35$$35$k_$35$$35$4087 VV$35$$35$F$35$$35$47) (= lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4087 wxs$35$$35$a3CY))))) (=> (apply$35$$35$1 (as Trees.Measures.notEmpty Int) wxs$35$$35$a3CY) (> VV$35$$35$F$35$$35$50 0)) (not (= VV$35$$35$F$35$$35$50 0)) (< 0 VV$35$$35$F$35$$35$50) (not (= 0 VV$35$$35$F$35$$35$50)) (>= VV$35$$35$F$35$$35$50 0) (> VV$35$$35$F$35$$35$50 0) (= lq_anf$36$$35$$35$7205759403792808756$35$$35$d3Ws ds_d3R0) (= lq_anf$36$$35$$35$7205759403792808756$35$$35$d3Ws ds_d3R0) (= lq_anf$36$$35$$35$7205759403792808756$35$$35$d3Ws (apply$35$$35$0 (apply$35$$35$0 (as GHC.Tuple.$40$$44$$41$ Int) w$35$$35$a3D6) ds_d3R9)) (= (apply$35$$35$0 (as fst Int) lq_anf$36$$35$$35$7205759403792808756$35$$35$d3Ws) w$35$$35$a3D6) (= (apply$35$$35$0 (as snd Int) lq_anf$36$$35$$35$7205759403792808756$35$$35$d3Ws) ds_d3R9) (= (apply$35$$35$0 (as x_Tuple21 Int) lq_anf$36$$35$$35$7205759403792808756$35$$35$d3Ws) w$35$$35$a3D6) (= (apply$35$$35$0 (as x_Tuple22 Int) lq_anf$36$$35$$35$7205759403792808756$35$$35$d3Ws) ds_d3R9) (= VV$35$$35$F$35$$35$50 w$35$$35$a3D6) (= lq_anf$36$$35$$35$7205759403792808756$35$$35$d3Ws ds_d3R0) (= lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4095 Trees.Measures.sumBad) (= lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4095 Trees.Measures.sumOk) (= lq_karg$36$VV$35$$35$4094$35$$35$k_$35$$35$4095 VV$35$$35$F$35$$35$50) (= lq_karg$36$ds_d3R0$35$$35$k_$35$$35$4095 ds_d3R0) (= lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4095 wxs$35$$35$a3CY))))) (= lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4170 Trees.Measures.sumBad) (= lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4170 Trees.Measures.sumOk) (= lq_karg$36$VV$35$$35$4169$35$$35$k_$35$$35$4170 VV$35$$35$F$35$$35$49) (= lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4170 wxs$35$$35$a3CY))))) b$36$$35$$35$48 b$36$$35$$35$405 b$36$$35$$35$395 b$36$$35$$35$45))
(push 1)
(assert (not (not (= 0 VV$35$$35$F$35$$35$40))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$40 Trees.Measures.sumBad)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$40 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$40 Trees.Measures.sumOk)))
(check-sat)
(pop 1)
(push 1)
(assert (not (< 0 VV$35$$35$F$35$$35$40)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$40 Trees.Measures.sumOk))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$40 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$40 Trees.Measures.sumBad))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$40 Trees.Measures.sumOk)))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$40 Trees.Measures.sumBad)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$40 (apply$35$$35$0 (as len Int) wxs$35$$35$a3CY))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$40 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$40 Trees.Measures.sumBad)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$40 1)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$40 Trees.Measures.sumOk)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$40 (+ (apply$35$$35$0 (as len Int) wxs$35$$35$a3CY) Trees.Measures.sumOk))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$40 (+ (apply$35$$35$0 (as len Int) wxs$35$$35$a3CY) Trees.Measures.sumBad))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$40 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$40 Trees.Measures.sumBad)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$40 Trees.Measures.sumOk)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$40 Trees.Measures.sumOk)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$40 Trees.Measures.sumBad)))
(check-sat)
(pop 1)
(push 1)
(assert (not (=> (apply$35$$35$1 (as Trees.Measures.notEmpty Int) wxs$35$$35$a3CY) (> VV$35$$35$F$35$$35$40 0))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$40 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$40 0))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$40 Trees.Measures.sumBad)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$40 Trees.Measures.sumOk)))
(check-sat)
(pop 1)
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (and (not (= totWeight$35$$35$a3D2 0)) (=> (apply$35$$35$1 (as Trees.Measures.notEmpty Int) wxs$35$$35$a3CY) (> totWeight$35$$35$a3D2 0)) (> totWeight$35$$35$a3D2 0) (>= totWeight$35$$35$a3D2 0) (< 0 totWeight$35$$35$a3D2) (not (= 0 totWeight$35$$35$a3D2)) (exists ((lq_karg$36$totWeight$35$$35$a3D2$35$$35$k_$35$$35$4314 Int) (lq_karg$36$weights$35$$35$a3D0$35$$35$k_$35$$35$4314 Int) (lq_karg$36$VV$35$$35$4313$35$$35$k_$35$$35$4314 Int) (lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4314 Int) (lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4314 Int) (lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4314 Int)) (and (= lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4314 Trees.Measures.sumBad) (= lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4314 Trees.Measures.sumOk) (= lq_karg$36$VV$35$$35$4313$35$$35$k_$35$$35$4314 VV$35$$35$F$35$$35$28) (= lq_karg$36$totWeight$35$$35$a3D2$35$$35$k_$35$$35$4314 totWeight$35$$35$a3D2) (= lq_karg$36$weights$35$$35$a3D0$35$$35$k_$35$$35$4314 weights$35$$35$a3D0) (= lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4314 wxs$35$$35$a3CY) (exists ((lq_tmp$36$x$35$$35$4293 Int) (VV$35$$35$F$35$$35$37 Int)) (and (exists ((lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4307 Int) (lq_karg$36$weights$35$$35$a3D0$35$$35$k_$35$$35$4307 Int) (lq_karg$36$VV$35$$35$4306$35$$35$k_$35$$35$4307 Int) (lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4307 Int) (lq_tmp$36$x$35$$35$4312 Int) (lq_karg$36$totWeight$35$$35$a3D2$35$$35$k_$35$$35$4307 Int) (lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4307 Int)) (and (= lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4307 Trees.Measures.sumBad) (= lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4307 Trees.Measures.sumOk) (= lq_karg$36$VV$35$$35$4306$35$$35$k_$35$$35$4307 lq_tmp$36$x$35$$35$4293) (= lq_karg$36$totWeight$35$$35$a3D2$35$$35$k_$35$$35$4307 totWeight$35$$35$a3D2) (= lq_karg$36$weights$35$$35$a3D0$35$$35$k_$35$$35$4307 weights$35$$35$a3D0) (= lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4307 wxs$35$$35$a3CY) (= lq_tmp$36$x$35$$35$4312 lq_tmp$36$x$35$$35$4293) (exists ((VV$35$$35$F$35$$35$29 Int)) (and (= lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4307 Trees.Measures.sumBad) (= lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4307 Trees.Measures.sumOk) (= lq_karg$36$VV$35$$35$4306$35$$35$k_$35$$35$4307 VV$35$$35$F$35$$35$29) (= lq_karg$36$totWeight$35$$35$a3D2$35$$35$k_$35$$35$4307 totWeight$35$$35$a3D2) (= lq_karg$36$weights$35$$35$a3D0$35$$35$k_$35$$35$4307 weights$35$$35$a3D0) (= lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4307 wxs$35$$35$a3CY))))) (exists ((lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4224 Int) (lq_karg$36$weights$35$$35$a3D0$35$$35$k_$35$$35$4224 Int) (lq_karg$36$ds_d3QT$35$$35$k_$35$$35$4224 Int) (lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4224 Int) (lq_karg$36$VV$35$$35$4223$35$$35$k_$35$$35$4224 Int) (lq_karg$36$totWeight$35$$35$a3D2$35$$35$k_$35$$35$4224 Int) (lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4224 Int)) (and (= lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4224 Trees.Measures.sumBad) (= lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4224 Trees.Measures.sumOk) (= lq_karg$36$VV$35$$35$4223$35$$35$k_$35$$35$4224 VV$35$$35$F$35$$35$37) (= lq_karg$36$ds_d3QT$35$$35$k_$35$$35$4224 lq_tmp$36$x$35$$35$4293) (= lq_karg$36$totWeight$35$$35$a3D2$35$$35$k_$35$$35$4224 totWeight$35$$35$a3D2) (= lq_karg$36$weights$35$$35$a3D0$35$$35$k_$35$$35$4224 weights$35$$35$a3D0) (= lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4224 wxs$35$$35$a3CY) (exists ((VV$35$$35$F$35$$35$38 Int) (ds_d3QT Int) (lq_anf$36$$35$$35$7205759403792808758$35$$35$d3Wu Int) (lq_anf$36$$35$$35$7205759403792808758$35$$35$d3Wu Int) (w$35$$35$a3D4 Int) (x$35$$35$a3D5 Int) (lq_anf$36$$35$$35$7205759403792808758$35$$35$d3Wu Int)) (and (= (apply$35$$35$0 (as x_Tuple22 Int) ds_d3QT) Trees.Measures.sumBad) (= (apply$35$$35$0 (as x_Tuple21 Int) ds_d3QT) Trees.Measures.sumOk) (= (apply$35$$35$0 (as x_Tuple21 Int) ds_d3QT) Trees.Measures.sumBad) (= (apply$35$$35$0 (as snd Int) ds_d3QT) totWeight$35$$35$a3D2) (= (apply$35$$35$0 (as fst Int) ds_d3QT) totWeight$35$$35$a3D2) (= 0 1) (= (apply$35$$35$0 (as snd Int) ds_d3QT) Trees.Measures.sumOk) (= (apply$35$$35$0 (as fst Int) ds_d3QT) Trees.Measures.sumOk) (= (apply$35$$35$0 (as x_Tuple22 Int) ds_d3QT) Trees.Measures.sumOk) (= (apply$35$$35$0 (as x_Tuple21 Int) ds_d3QT) totWeight$35$$35$a3D2) (= (apply$35$$35$0 (as snd Int) ds_d3QT) Trees.Measures.sumBad) (= (apply$35$$35$0 (as fst Int) ds_d3QT) Trees.Measures.sumBad) (= (apply$35$$35$0 (as x_Tuple22 Int) ds_d3QT) totWeight$35$$35$a3D2) (= (apply$35$$35$0 (as x_Tuple22 Int) lq_anf$36$$35$$35$7205759403792808758$35$$35$d3Wu) Trees.Measures.sumBad) (= (apply$35$$35$0 (as x_Tuple21 Int) lq_anf$36$$35$$35$7205759403792808758$35$$35$d3Wu) Trees.Measures.sumOk) (= (apply$35$$35$0 (as x_Tuple21 Int) lq_anf$36$$35$$35$7205759403792808758$35$$35$d3Wu) Trees.Measures.sumBad) (= (apply$35$$35$0 (as snd Int) lq_anf$36$$35$$35$7205759403792808758$35$$35$d3Wu) totWeight$35$$35$a3D2) (= (apply$35$$35$0 (as fst Int) lq_anf$36$$35$$35$7205759403792808758$35$$35$d3Wu) totWeight$35$$35$a3D2) (= 0 1) (= (apply$35$$35$0 (as snd Int) lq_anf$36$$35$$35$7205759403792808758$35$$35$d3Wu) Trees.Measures.sumOk) (= (apply$35$$35$0 (as fst Int) lq_anf$36$$35$$35$7205759403792808758$35$$35$d3Wu) Trees.Measures.sumOk) (= (apply$35$$35$0 (as x_Tuple22 Int) lq_anf$36$$35$$35$7205759403792808758$35$$35$d3Wu) Trees.Measures.sumOk) (= (apply$35$$35$0 (as x_Tuple21 Int) lq_anf$36$$35$$35$7205759403792808758$35$$35$d3Wu) totWeight$35$$35$a3D2) (= (apply$35$$35$0 (as snd Int) lq_anf$36$$35$$35$7205759403792808758$35$$35$d3Wu) Trees.Measures.sumBad) (= (apply$35$$35$0 (as fst Int) lq_anf$36$$35$$35$7205759403792808758$35$$35$d3Wu) Trees.Measures.sumBad) (= (apply$35$$35$0 (as x_Tuple22 Int) lq_anf$36$$35$$35$7205759403792808758$35$$35$d3Wu) totWeight$35$$35$a3D2) (= (apply$35$$35$0 (as x_Tuple22 Int) lq_anf$36$$35$$35$7205759403792808758$35$$35$d3Wu) Trees.Measures.sumBad) (= (apply$35$$35$0 (as x_Tuple21 Int) lq_anf$36$$35$$35$7205759403792808758$35$$35$d3Wu) Trees.Measures.sumOk) (= (apply$35$$35$0 (as x_Tuple21 Int) lq_anf$36$$35$$35$7205759403792808758$35$$35$d3Wu) Trees.Measures.sumBad) (= (apply$35$$35$0 (as snd Int) lq_anf$36$$35$$35$7205759403792808758$35$$35$d3Wu) totWeight$35$$35$a3D2) (= (apply$35$$35$0 (as fst Int) lq_anf$36$$35$$35$7205759403792808758$35$$35$d3Wu) totWeight$35$$35$a3D2) (= 0 1) (= (apply$35$$35$0 (as snd Int) lq_anf$36$$35$$35$7205759403792808758$35$$35$d3Wu) Trees.Measures.sumOk) (= (apply$35$$35$0 (as fst Int) lq_anf$36$$35$$35$7205759403792808758$35$$35$d3Wu) Trees.Measures.sumOk) (= (apply$35$$35$0 (as x_Tuple22 Int) lq_anf$36$$35$$35$7205759403792808758$35$$35$d3Wu) Trees.Measures.sumOk) (= (apply$35$$35$0 (as x_Tuple21 Int) lq_anf$36$$35$$35$7205759403792808758$35$$35$d3Wu) totWeight$35$$35$a3D2) (= (apply$35$$35$0 (as snd Int) lq_anf$36$$35$$35$7205759403792808758$35$$35$d3Wu) Trees.Measures.sumBad) (= (apply$35$$35$0 (as fst Int) lq_anf$36$$35$$35$7205759403792808758$35$$35$d3Wu) Trees.Measures.sumBad) (= (apply$35$$35$0 (as x_Tuple22 Int) lq_anf$36$$35$$35$7205759403792808758$35$$35$d3Wu) totWeight$35$$35$a3D2) (exists ((lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4214 Int) (lq_karg$36$totWeight$35$$35$a3D2$35$$35$k_$35$$35$4214 Int) (lq_tmp$36$x$35$$35$4232 Int) (lq_karg$36$weights$35$$35$a3D0$35$$35$k_$35$$35$4214 Int) (lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4214 Int) (lq_karg$36$VV$35$$35$4213$35$$35$k_$35$$35$4214 Int) (lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4214 Int)) (and (= lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4214 Trees.Measures.sumBad) (= lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4214 Trees.Measures.sumOk) (= lq_karg$36$VV$35$$35$4213$35$$35$k_$35$$35$4214 w$35$$35$a3D4) (= lq_karg$36$totWeight$35$$35$a3D2$35$$35$k_$35$$35$4214 totWeight$35$$35$a3D2) (= lq_karg$36$weights$35$$35$a3D0$35$$35$k_$35$$35$4214 weights$35$$35$a3D0) (= lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4214 wxs$35$$35$a3CY) (= lq_tmp$36$x$35$$35$4232 w$35$$35$a3D4) (exists ((VV$35$$35$F$35$$35$34 Int) (lq_anf$36$$35$$35$7205759403792808759$35$$35$d3Wv Int)) (and (exists ((lq_karg$36$VV$35$$35$4299$35$$35$k_$35$$35$4300 Int) (lq_karg$36$weights$35$$35$a3D0$35$$35$k_$35$$35$4300 Int) (lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4300 Int) (lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4300 Int) (lq_karg$36$totWeight$35$$35$a3D2$35$$35$k_$35$$35$4300 Int) (lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4300 Int)) (and (= lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4300 Trees.Measures.sumBad) (= lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4300 Trees.Measures.sumOk) (= lq_karg$36$VV$35$$35$4299$35$$35$k_$35$$35$4300 VV$35$$35$F$35$$35$34) (= lq_karg$36$totWeight$35$$35$a3D2$35$$35$k_$35$$35$4300 totWeight$35$$35$a3D2) (= lq_karg$36$weights$35$$35$a3D0$35$$35$k_$35$$35$4300 weights$35$$35$a3D0) (= lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4300 wxs$35$$35$a3CY) (exists ((VV$35$$35$F$35$$35$30 Int)) (and (< 0 VV$35$$35$F$35$$35$30) (= lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4300 Trees.Measures.sumBad) (= lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4300 Trees.Measures.sumOk) (= lq_karg$36$VV$35$$35$4299$35$$35$k_$35$$35$4300 VV$35$$35$F$35$$35$30) (= lq_karg$36$totWeight$35$$35$a3D2$35$$35$k_$35$$35$4300 totWeight$35$$35$a3D2) (= lq_karg$36$weights$35$$35$a3D0$35$$35$k_$35$$35$4300 weights$35$$35$a3D0) (= lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4300 wxs$35$$35$a3CY))))) (= lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4214 Trees.Measures.sumBad) (= lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4214 Trees.Measures.sumOk) (= lq_karg$36$VV$35$$35$4213$35$$35$k_$35$$35$4214 VV$35$$35$F$35$$35$34) (= lq_karg$36$totWeight$35$$35$a3D2$35$$35$k_$35$$35$4214 totWeight$35$$35$a3D2) (= lq_karg$36$weights$35$$35$a3D0$35$$35$k_$35$$35$4214 weights$35$$35$a3D0) (= lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4214 wxs$35$$35$a3CY))))) (exists ((lq_karg$36$lq_tmp$36$x$35$$35$4217$35$$35$k_$35$$35$4219 Int) (lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4219 Int) (lq_karg$36$totWeight$35$$35$a3D2$35$$35$k_$35$$35$4219 Int) (lq_tmp$36$x$35$$35$4233 Int) (lq_karg$36$VV$35$$35$4218$35$$35$k_$35$$35$4219 Int) (lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4219 Int) (lq_karg$36$weights$35$$35$a3D0$35$$35$k_$35$$35$4219 Int) (lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4219 Int)) (and (= lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4219 Trees.Measures.sumBad) (= lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4219 Trees.Measures.sumOk) (= lq_karg$36$VV$35$$35$4218$35$$35$k_$35$$35$4219 x$35$$35$a3D5) (= lq_karg$36$lq_tmp$36$x$35$$35$4217$35$$35$k_$35$$35$4219 w$35$$35$a3D4) (= lq_karg$36$totWeight$35$$35$a3D2$35$$35$k_$35$$35$4219 totWeight$35$$35$a3D2) (= lq_karg$36$weights$35$$35$a3D0$35$$35$k_$35$$35$4219 weights$35$$35$a3D0) (= lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4219 wxs$35$$35$a3CY) (= lq_tmp$36$x$35$$35$4233 x$35$$35$a3D5) (exists ((VV$35$$35$F$35$$35$36 Int) (lq_tmp$36$x$35$$35$4325 Int) (lq_anf$36$$35$$35$7205759403792808759$35$$35$d3Wv Int)) (and (exists ((lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4305 Int) (lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4305 Int) (lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4305 Int) (lq_karg$36$VV$35$$35$4304$35$$35$k_$35$$35$4305 Int) (lq_karg$36$totWeight$35$$35$a3D2$35$$35$k_$35$$35$4305 Int) (lq_karg$36$lq_tmp$36$x$35$$35$4303$35$$35$k_$35$$35$4305 Int) (lq_karg$36$weights$35$$35$a3D0$35$$35$k_$35$$35$4305 Int)) (and (= lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4305 Trees.Measures.sumBad) (= lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4305 Trees.Measures.sumOk) (= lq_karg$36$VV$35$$35$4304$35$$35$k_$35$$35$4305 VV$35$$35$F$35$$35$36) (= lq_karg$36$lq_tmp$36$x$35$$35$4303$35$$35$k_$35$$35$4305 lq_tmp$36$x$35$$35$4325) (= lq_karg$36$totWeight$35$$35$a3D2$35$$35$k_$35$$35$4305 totWeight$35$$35$a3D2) (= lq_karg$36$weights$35$$35$a3D0$35$$35$k_$35$$35$4305 weights$35$$35$a3D0) (= lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4305 wxs$35$$35$a3CY) (exists ((VV$35$$35$F$35$$35$32 Int) (lq_tmp$36$x$35$$35$4310 Int)) (and (= lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4305 Trees.Measures.sumBad) (= lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4305 Trees.Measures.sumOk) (= lq_karg$36$VV$35$$35$4304$35$$35$k_$35$$35$4305 VV$35$$35$F$35$$35$32) (= lq_karg$36$lq_tmp$36$x$35$$35$4303$35$$35$k_$35$$35$4305 lq_tmp$36$x$35$$35$4310) (= lq_karg$36$totWeight$35$$35$a3D2$35$$35$k_$35$$35$4305 totWeight$35$$35$a3D2) (= lq_karg$36$weights$35$$35$a3D0$35$$35$k_$35$$35$4305 weights$35$$35$a3D0) (= lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4305 wxs$35$$35$a3CY))))) (= lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4219 Trees.Measures.sumBad) (= lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4219 Trees.Measures.sumOk) (= lq_karg$36$VV$35$$35$4218$35$$35$k_$35$$35$4219 VV$35$$35$F$35$$35$36) (= lq_karg$36$lq_tmp$36$x$35$$35$4217$35$$35$k_$35$$35$4219 lq_tmp$36$x$35$$35$4325) (= lq_karg$36$totWeight$35$$35$a3D2$35$$35$k_$35$$35$4219 totWeight$35$$35$a3D2) (= lq_karg$36$weights$35$$35$a3D0$35$$35$k_$35$$35$4219 weights$35$$35$a3D0) (= lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4219 wxs$35$$35$a3CY))))) (exists ((lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4216 Int) (lq_tmp$36$x$35$$35$4233 Int) (lq_karg$36$totWeight$35$$35$a3D2$35$$35$k_$35$$35$4216 Int) (lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4216 Int) (lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4216 Int) (lq_karg$36$VV$35$$35$4215$35$$35$k_$35$$35$4216 Int) (lq_karg$36$weights$35$$35$a3D0$35$$35$k_$35$$35$4216 Int)) (and (= lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4216 Trees.Measures.sumBad) (= lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4216 Trees.Measures.sumOk) (= lq_karg$36$VV$35$$35$4215$35$$35$k_$35$$35$4216 x$35$$35$a3D5) (= lq_karg$36$totWeight$35$$35$a3D2$35$$35$k_$35$$35$4216 totWeight$35$$35$a3D2) (= lq_karg$36$weights$35$$35$a3D0$35$$35$k_$35$$35$4216 weights$35$$35$a3D0) (= lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4216 wxs$35$$35$a3CY) (= lq_tmp$36$x$35$$35$4233 x$35$$35$a3D5) (exists ((VV$35$$35$F$35$$35$35 Int) (lq_anf$36$$35$$35$7205759403792808759$35$$35$d3Wv Int)) (and (exists ((lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4302 Int) (lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4302 Int) (lq_karg$36$weights$35$$35$a3D0$35$$35$k_$35$$35$4302 Int) (lq_karg$36$totWeight$35$$35$a3D2$35$$35$k_$35$$35$4302 Int) (lq_karg$36$VV$35$$35$4301$35$$35$k_$35$$35$4302 Int) (lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4302 Int)) (and (= lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4302 Trees.Measures.sumBad) (= lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4302 Trees.Measures.sumOk) (= lq_karg$36$VV$35$$35$4301$35$$35$k_$35$$35$4302 VV$35$$35$F$35$$35$35) (= lq_karg$36$totWeight$35$$35$a3D2$35$$35$k_$35$$35$4302 totWeight$35$$35$a3D2) (= lq_karg$36$weights$35$$35$a3D0$35$$35$k_$35$$35$4302 weights$35$$35$a3D0) (= lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4302 wxs$35$$35$a3CY) (exists ((VV$35$$35$F$35$$35$31 Int)) (and (< 0 VV$35$$35$F$35$$35$31) (= lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4302 Trees.Measures.sumBad) (= lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4302 Trees.Measures.sumOk) (= lq_karg$36$VV$35$$35$4301$35$$35$k_$35$$35$4302 VV$35$$35$F$35$$35$31) (= lq_karg$36$totWeight$35$$35$a3D2$35$$35$k_$35$$35$4302 totWeight$35$$35$a3D2) (= lq_karg$36$weights$35$$35$a3D0$35$$35$k_$35$$35$4302 weights$35$$35$a3D0) (= lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4302 wxs$35$$35$a3CY))))) (= lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4216 Trees.Measures.sumBad) (= lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4216 Trees.Measures.sumOk) (= lq_karg$36$VV$35$$35$4215$35$$35$k_$35$$35$4216 VV$35$$35$F$35$$35$35) (= lq_karg$36$totWeight$35$$35$a3D2$35$$35$k_$35$$35$4216 totWeight$35$$35$a3D2) (= lq_karg$36$weights$35$$35$a3D0$35$$35$k_$35$$35$4216 weights$35$$35$a3D0) (= lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4216 wxs$35$$35$a3CY))))) (= (apply$35$$35$0 (as x_Tuple22 Int) lq_anf$36$$35$$35$7205759403792808758$35$$35$d3Wu) Trees.Measures.sumBad) (= (apply$35$$35$0 (as x_Tuple21 Int) lq_anf$36$$35$$35$7205759403792808758$35$$35$d3Wu) Trees.Measures.sumOk) (= (apply$35$$35$0 (as x_Tuple21 Int) lq_anf$36$$35$$35$7205759403792808758$35$$35$d3Wu) Trees.Measures.sumBad) (= (apply$35$$35$0 (as snd Int) lq_anf$36$$35$$35$7205759403792808758$35$$35$d3Wu) totWeight$35$$35$a3D2) (= (apply$35$$35$0 (as fst Int) lq_anf$36$$35$$35$7205759403792808758$35$$35$d3Wu) totWeight$35$$35$a3D2) (= 0 1) (= (apply$35$$35$0 (as snd Int) lq_anf$36$$35$$35$7205759403792808758$35$$35$d3Wu) Trees.Measures.sumOk) (= (apply$35$$35$0 (as fst Int) lq_anf$36$$35$$35$7205759403792808758$35$$35$d3Wu) Trees.Measures.sumOk) (= (apply$35$$35$0 (as x_Tuple22 Int) lq_anf$36$$35$$35$7205759403792808758$35$$35$d3Wu) Trees.Measures.sumOk) (= (apply$35$$35$0 (as x_Tuple21 Int) lq_anf$36$$35$$35$7205759403792808758$35$$35$d3Wu) totWeight$35$$35$a3D2) (= (apply$35$$35$0 (as snd Int) lq_anf$36$$35$$35$7205759403792808758$35$$35$d3Wu) Trees.Measures.sumBad) (= (apply$35$$35$0 (as fst Int) lq_anf$36$$35$$35$7205759403792808758$35$$35$d3Wu) Trees.Measures.sumBad) (= (apply$35$$35$0 (as x_Tuple22 Int) lq_anf$36$$35$$35$7205759403792808758$35$$35$d3Wu) totWeight$35$$35$a3D2) (= VV$35$$35$F$35$$35$38 (Z3_OP_MUL w$35$$35$a3D4 x$35$$35$a3D5)) (= lq_anf$36$$35$$35$7205759403792808758$35$$35$d3Wu ds_d3QT) (= lq_anf$36$$35$$35$7205759403792808758$35$$35$d3Wu ds_d3QT) (= lq_anf$36$$35$$35$7205759403792808758$35$$35$d3Wu ds_d3QT) (= lq_anf$36$$35$$35$7205759403792808758$35$$35$d3Wu (apply$35$$35$0 (apply$35$$35$0 (as GHC.Tuple.$40$$44$$41$ Int) w$35$$35$a3D4) x$35$$35$a3D5)) (= (apply$35$$35$0 (as fst Int) lq_anf$36$$35$$35$7205759403792808758$35$$35$d3Wu) w$35$$35$a3D4) (= (apply$35$$35$0 (as snd Int) lq_anf$36$$35$$35$7205759403792808758$35$$35$d3Wu) x$35$$35$a3D5) (= (apply$35$$35$0 (as x_Tuple21 Int) lq_anf$36$$35$$35$7205759403792808758$35$$35$d3Wu) w$35$$35$a3D4) (= (apply$35$$35$0 (as x_Tuple22 Int) lq_anf$36$$35$$35$7205759403792808758$35$$35$d3Wu) x$35$$35$a3D5) (= lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4224 Trees.Measures.sumBad) (= lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4224 Trees.Measures.sumOk) (= lq_karg$36$VV$35$$35$4223$35$$35$k_$35$$35$4224 VV$35$$35$F$35$$35$38) (= lq_karg$36$ds_d3QT$35$$35$k_$35$$35$4224 ds_d3QT) (= lq_karg$36$totWeight$35$$35$a3D2$35$$35$k_$35$$35$4224 totWeight$35$$35$a3D2) (= lq_karg$36$weights$35$$35$a3D0$35$$35$k_$35$$35$4224 weights$35$$35$a3D0) (= lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4224 wxs$35$$35$a3CY))))) (= lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4314 Trees.Measures.sumBad) (= lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4314 Trees.Measures.sumOk) (= lq_karg$36$VV$35$$35$4313$35$$35$k_$35$$35$4314 VV$35$$35$F$35$$35$37) (= lq_karg$36$totWeight$35$$35$a3D2$35$$35$k_$35$$35$4314 totWeight$35$$35$a3D2) (= lq_karg$36$weights$35$$35$a3D0$35$$35$k_$35$$35$4314 weights$35$$35$a3D0) (= lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4314 wxs$35$$35$a3CY)))))) b$36$$35$$35$48 b$36$$35$$35$405 b$36$$35$$35$395 b$36$$35$$35$45 b$36$$35$$35$414))
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$28 0))))
(check-sat)
(pop 1)
(push 1)
(assert (not (=> (apply$35$$35$1 (as Trees.Measures.notEmpty Int) wxs$35$$35$a3CY) (> VV$35$$35$F$35$$35$28 0))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$28 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$28 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (< 0 VV$35$$35$F$35$$35$28)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= 0 VV$35$$35$F$35$$35$28))))
(check-sat)
(pop 1)
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (and (not (= 0 totWeight$35$$35$a3D2)) (< 0 totWeight$35$$35$a3D2) (>= totWeight$35$$35$a3D2 0) (> totWeight$35$$35$a3D2 0) (=> (apply$35$$35$1 (as Trees.Measures.notEmpty Int) wxs$35$$35$a3CY) (> totWeight$35$$35$a3D2 0)) (not (= totWeight$35$$35$a3D2 0)) (exists ((lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4307 Int) (lq_karg$36$weights$35$$35$a3D0$35$$35$k_$35$$35$4307 Int) (lq_karg$36$VV$35$$35$4306$35$$35$k_$35$$35$4307 Int) (lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4307 Int) (lq_karg$36$totWeight$35$$35$a3D2$35$$35$k_$35$$35$4307 Int) (lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4307 Int)) (and (= lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4307 Trees.Measures.sumBad) (= lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4307 Trees.Measures.sumOk) (= lq_karg$36$VV$35$$35$4306$35$$35$k_$35$$35$4307 VV$35$$35$F$35$$35$33) (= lq_karg$36$totWeight$35$$35$a3D2$35$$35$k_$35$$35$4307 totWeight$35$$35$a3D2) (= lq_karg$36$weights$35$$35$a3D0$35$$35$k_$35$$35$4307 weights$35$$35$a3D0) (= lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4307 wxs$35$$35$a3CY) (exists ((VV$35$$35$F$35$$35$29 Int)) (and (= lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4307 Trees.Measures.sumBad) (= lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4307 Trees.Measures.sumOk) (= lq_karg$36$VV$35$$35$4306$35$$35$k_$35$$35$4307 VV$35$$35$F$35$$35$29) (= lq_karg$36$totWeight$35$$35$a3D2$35$$35$k_$35$$35$4307 totWeight$35$$35$a3D2) (= lq_karg$36$weights$35$$35$a3D0$35$$35$k_$35$$35$4307 weights$35$$35$a3D0) (= lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4307 wxs$35$$35$a3CY)))))) b$36$$35$$35$48 b$36$$35$$35$405 b$36$$35$$35$395 b$36$$35$$35$45))
(push 1)
(assert (not (= (apply$35$$35$0 (as x_Tuple22 Int) VV$35$$35$F$35$$35$33) Trees.Measures.sumBad)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as x_Tuple21 Int) VV$35$$35$F$35$$35$33) Trees.Measures.sumOk)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as x_Tuple21 Int) VV$35$$35$F$35$$35$33) Trees.Measures.sumBad)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as snd Int) VV$35$$35$F$35$$35$33) totWeight$35$$35$a3D2)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as fst Int) VV$35$$35$F$35$$35$33) totWeight$35$$35$a3D2)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as snd Int) VV$35$$35$F$35$$35$33) Trees.Measures.sumOk)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as fst Int) VV$35$$35$F$35$$35$33) Trees.Measures.sumOk)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as x_Tuple22 Int) VV$35$$35$F$35$$35$33) Trees.Measures.sumOk)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as x_Tuple21 Int) VV$35$$35$F$35$$35$33) totWeight$35$$35$a3D2)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as snd Int) VV$35$$35$F$35$$35$33) Trees.Measures.sumBad)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as fst Int) VV$35$$35$F$35$$35$33) Trees.Measures.sumBad)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as x_Tuple22 Int) VV$35$$35$F$35$$35$33) totWeight$35$$35$a3D2)))
(check-sat)
(pop 1)
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (and (not (= 0 lq_tmp$36$x$35$$35$4067)) (< 0 lq_tmp$36$x$35$$35$4067) (>= lq_tmp$36$x$35$$35$4067 0) (> lq_tmp$36$x$35$$35$4067 0) (=> (apply$35$$35$1 (as Trees.Measures.notEmpty Int) wxs$35$$35$a3CY) (> lq_tmp$36$x$35$$35$4067 0)) (not (= lq_tmp$36$x$35$$35$4067 0)) (not (= 0 lq_tmp$36$x$35$$35$4068)) (< 0 lq_tmp$36$x$35$$35$4068) (>= lq_tmp$36$x$35$$35$4068 0) (> lq_tmp$36$x$35$$35$4068 0) (=> (apply$35$$35$1 (as Trees.Measures.notEmpty Int) wxs$35$$35$a3CY) (> lq_tmp$36$x$35$$35$4068 0)) (not (= lq_tmp$36$x$35$$35$4068 0))) b$36$$35$$35$48 b$36$$35$$35$802 b$36$$35$$35$395 b$36$$35$$35$45))
(push 1)
(assert (not (not (= 0 VV$35$$35$F$35$$35$51))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< 0 VV$35$$35$F$35$$35$51)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$51 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$51 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (=> (apply$35$$35$1 (as Trees.Measures.notEmpty Int) wxs$35$$35$a3CY) (> VV$35$$35$F$35$$35$51 0))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$51 0))))
(check-sat)
(pop 1)
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (and (not (= totWeight$35$$35$a3D2 0)) (=> (apply$35$$35$1 (as Trees.Measures.notEmpty Int) wxs$35$$35$a3CY) (> totWeight$35$$35$a3D2 0)) (> totWeight$35$$35$a3D2 0) (>= totWeight$35$$35$a3D2 0) (< 0 totWeight$35$$35$a3D2) (not (= 0 totWeight$35$$35$a3D2)) (exists ((lq_karg$36$totWeight$35$$35$a3D2$35$$35$k_$35$$35$4314 Int) (lq_karg$36$weights$35$$35$a3D0$35$$35$k_$35$$35$4314 Int) (lq_karg$36$VV$35$$35$4313$35$$35$k_$35$$35$4314 Int) (lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4314 Int) (lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4314 Int) (lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4314 Int)) (and (= lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4314 Trees.Measures.sumBad) (= lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4314 Trees.Measures.sumOk) (= lq_karg$36$VV$35$$35$4313$35$$35$k_$35$$35$4314 VV$35$$35$F$35$$35$28) (= lq_karg$36$totWeight$35$$35$a3D2$35$$35$k_$35$$35$4314 totWeight$35$$35$a3D2) (= lq_karg$36$weights$35$$35$a3D0$35$$35$k_$35$$35$4314 weights$35$$35$a3D0) (= lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4314 wxs$35$$35$a3CY) (exists ((lq_tmp$36$x$35$$35$4293 Int) (VV$35$$35$F$35$$35$37 Int)) (and (exists ((lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4307 Int) (lq_karg$36$weights$35$$35$a3D0$35$$35$k_$35$$35$4307 Int) (lq_karg$36$VV$35$$35$4306$35$$35$k_$35$$35$4307 Int) (lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4307 Int) (lq_tmp$36$x$35$$35$4312 Int) (lq_karg$36$totWeight$35$$35$a3D2$35$$35$k_$35$$35$4307 Int) (lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4307 Int)) (and (= lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4307 Trees.Measures.sumBad) (= lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4307 Trees.Measures.sumOk) (= lq_karg$36$VV$35$$35$4306$35$$35$k_$35$$35$4307 lq_tmp$36$x$35$$35$4293) (= lq_karg$36$totWeight$35$$35$a3D2$35$$35$k_$35$$35$4307 totWeight$35$$35$a3D2) (= lq_karg$36$weights$35$$35$a3D0$35$$35$k_$35$$35$4307 weights$35$$35$a3D0) (= lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4307 wxs$35$$35$a3CY) (= lq_tmp$36$x$35$$35$4312 lq_tmp$36$x$35$$35$4293) (exists ((VV$35$$35$F$35$$35$29 Int)) (and (= lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4307 Trees.Measures.sumBad) (= lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4307 Trees.Measures.sumOk) (= lq_karg$36$VV$35$$35$4306$35$$35$k_$35$$35$4307 VV$35$$35$F$35$$35$29) (= lq_karg$36$totWeight$35$$35$a3D2$35$$35$k_$35$$35$4307 totWeight$35$$35$a3D2) (= lq_karg$36$weights$35$$35$a3D0$35$$35$k_$35$$35$4307 weights$35$$35$a3D0) (= lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4307 wxs$35$$35$a3CY))))) (exists ((lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4224 Int) (lq_karg$36$weights$35$$35$a3D0$35$$35$k_$35$$35$4224 Int) (lq_karg$36$ds_d3QT$35$$35$k_$35$$35$4224 Int) (lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4224 Int) (lq_karg$36$VV$35$$35$4223$35$$35$k_$35$$35$4224 Int) (lq_karg$36$totWeight$35$$35$a3D2$35$$35$k_$35$$35$4224 Int) (lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4224 Int)) (and (= lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4224 Trees.Measures.sumBad) (= lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4224 Trees.Measures.sumOk) (= lq_karg$36$VV$35$$35$4223$35$$35$k_$35$$35$4224 VV$35$$35$F$35$$35$37) (= lq_karg$36$ds_d3QT$35$$35$k_$35$$35$4224 lq_tmp$36$x$35$$35$4293) (= lq_karg$36$totWeight$35$$35$a3D2$35$$35$k_$35$$35$4224 totWeight$35$$35$a3D2) (= lq_karg$36$weights$35$$35$a3D0$35$$35$k_$35$$35$4224 weights$35$$35$a3D0) (= lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4224 wxs$35$$35$a3CY) (exists ((VV$35$$35$F$35$$35$38 Int) (ds_d3QT Int) (lq_anf$36$$35$$35$7205759403792808758$35$$35$d3Wu Int) (lq_anf$36$$35$$35$7205759403792808758$35$$35$d3Wu Int) (w$35$$35$a3D4 Int) (x$35$$35$a3D5 Int) (lq_anf$36$$35$$35$7205759403792808758$35$$35$d3Wu Int)) (and (exists ((lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4214 Int) (lq_karg$36$totWeight$35$$35$a3D2$35$$35$k_$35$$35$4214 Int) (lq_tmp$36$x$35$$35$4232 Int) (lq_karg$36$weights$35$$35$a3D0$35$$35$k_$35$$35$4214 Int) (lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4214 Int) (lq_karg$36$VV$35$$35$4213$35$$35$k_$35$$35$4214 Int) (lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4214 Int)) (and (= lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4214 Trees.Measures.sumBad) (= lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4214 Trees.Measures.sumOk) (= lq_karg$36$VV$35$$35$4213$35$$35$k_$35$$35$4214 w$35$$35$a3D4) (= lq_karg$36$totWeight$35$$35$a3D2$35$$35$k_$35$$35$4214 totWeight$35$$35$a3D2) (= lq_karg$36$weights$35$$35$a3D0$35$$35$k_$35$$35$4214 weights$35$$35$a3D0) (= lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4214 wxs$35$$35$a3CY) (= lq_tmp$36$x$35$$35$4232 w$35$$35$a3D4) (exists ((VV$35$$35$F$35$$35$34 Int) (lq_anf$36$$35$$35$7205759403792808759$35$$35$d3Wv Int)) (and (exists ((lq_karg$36$VV$35$$35$4299$35$$35$k_$35$$35$4300 Int) (lq_karg$36$weights$35$$35$a3D0$35$$35$k_$35$$35$4300 Int) (lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4300 Int) (lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4300 Int) (lq_karg$36$totWeight$35$$35$a3D2$35$$35$k_$35$$35$4300 Int) (lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4300 Int)) (and (= lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4300 Trees.Measures.sumBad) (= lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4300 Trees.Measures.sumOk) (= lq_karg$36$VV$35$$35$4299$35$$35$k_$35$$35$4300 VV$35$$35$F$35$$35$34) (= lq_karg$36$totWeight$35$$35$a3D2$35$$35$k_$35$$35$4300 totWeight$35$$35$a3D2) (= lq_karg$36$weights$35$$35$a3D0$35$$35$k_$35$$35$4300 weights$35$$35$a3D0) (= lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4300 wxs$35$$35$a3CY) (exists ((VV$35$$35$F$35$$35$30 Int)) (and (< 0 VV$35$$35$F$35$$35$30) (= lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4300 Trees.Measures.sumBad) (= lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4300 Trees.Measures.sumOk) (= lq_karg$36$VV$35$$35$4299$35$$35$k_$35$$35$4300 VV$35$$35$F$35$$35$30) (= lq_karg$36$totWeight$35$$35$a3D2$35$$35$k_$35$$35$4300 totWeight$35$$35$a3D2) (= lq_karg$36$weights$35$$35$a3D0$35$$35$k_$35$$35$4300 weights$35$$35$a3D0) (= lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4300 wxs$35$$35$a3CY))))) (= lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4214 Trees.Measures.sumBad) (= lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4214 Trees.Measures.sumOk) (= lq_karg$36$VV$35$$35$4213$35$$35$k_$35$$35$4214 VV$35$$35$F$35$$35$34) (= lq_karg$36$totWeight$35$$35$a3D2$35$$35$k_$35$$35$4214 totWeight$35$$35$a3D2) (= lq_karg$36$weights$35$$35$a3D0$35$$35$k_$35$$35$4214 weights$35$$35$a3D0) (= lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4214 wxs$35$$35$a3CY))))) (exists ((lq_karg$36$lq_tmp$36$x$35$$35$4217$35$$35$k_$35$$35$4219 Int) (lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4219 Int) (lq_karg$36$totWeight$35$$35$a3D2$35$$35$k_$35$$35$4219 Int) (lq_tmp$36$x$35$$35$4233 Int) (lq_karg$36$VV$35$$35$4218$35$$35$k_$35$$35$4219 Int) (lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4219 Int) (lq_karg$36$weights$35$$35$a3D0$35$$35$k_$35$$35$4219 Int) (lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4219 Int)) (and (= lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4219 Trees.Measures.sumBad) (= lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4219 Trees.Measures.sumOk) (= lq_karg$36$VV$35$$35$4218$35$$35$k_$35$$35$4219 x$35$$35$a3D5) (= lq_karg$36$lq_tmp$36$x$35$$35$4217$35$$35$k_$35$$35$4219 w$35$$35$a3D4) (= lq_karg$36$totWeight$35$$35$a3D2$35$$35$k_$35$$35$4219 totWeight$35$$35$a3D2) (= lq_karg$36$weights$35$$35$a3D0$35$$35$k_$35$$35$4219 weights$35$$35$a3D0) (= lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4219 wxs$35$$35$a3CY) (= lq_tmp$36$x$35$$35$4233 x$35$$35$a3D5) (exists ((VV$35$$35$F$35$$35$36 Int) (lq_tmp$36$x$35$$35$4325 Int) (lq_anf$36$$35$$35$7205759403792808759$35$$35$d3Wv Int)) (and (exists ((lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4305 Int) (lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4305 Int) (lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4305 Int) (lq_karg$36$VV$35$$35$4304$35$$35$k_$35$$35$4305 Int) (lq_karg$36$totWeight$35$$35$a3D2$35$$35$k_$35$$35$4305 Int) (lq_karg$36$lq_tmp$36$x$35$$35$4303$35$$35$k_$35$$35$4305 Int) (lq_karg$36$weights$35$$35$a3D0$35$$35$k_$35$$35$4305 Int)) (and (= lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4305 Trees.Measures.sumBad) (= lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4305 Trees.Measures.sumOk) (= lq_karg$36$VV$35$$35$4304$35$$35$k_$35$$35$4305 VV$35$$35$F$35$$35$36) (= lq_karg$36$lq_tmp$36$x$35$$35$4303$35$$35$k_$35$$35$4305 lq_tmp$36$x$35$$35$4325) (= lq_karg$36$totWeight$35$$35$a3D2$35$$35$k_$35$$35$4305 totWeight$35$$35$a3D2) (= lq_karg$36$weights$35$$35$a3D0$35$$35$k_$35$$35$4305 weights$35$$35$a3D0) (= lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4305 wxs$35$$35$a3CY) (exists ((VV$35$$35$F$35$$35$32 Int) (lq_tmp$36$x$35$$35$4310 Int)) (and (= lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4305 Trees.Measures.sumBad) (= lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4305 Trees.Measures.sumOk) (= lq_karg$36$VV$35$$35$4304$35$$35$k_$35$$35$4305 VV$35$$35$F$35$$35$32) (= lq_karg$36$lq_tmp$36$x$35$$35$4303$35$$35$k_$35$$35$4305 lq_tmp$36$x$35$$35$4310) (= lq_karg$36$totWeight$35$$35$a3D2$35$$35$k_$35$$35$4305 totWeight$35$$35$a3D2) (= lq_karg$36$weights$35$$35$a3D0$35$$35$k_$35$$35$4305 weights$35$$35$a3D0) (= lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4305 wxs$35$$35$a3CY))))) (= lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4219 Trees.Measures.sumBad) (= lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4219 Trees.Measures.sumOk) (= lq_karg$36$VV$35$$35$4218$35$$35$k_$35$$35$4219 VV$35$$35$F$35$$35$36) (= lq_karg$36$lq_tmp$36$x$35$$35$4217$35$$35$k_$35$$35$4219 lq_tmp$36$x$35$$35$4325) (= lq_karg$36$totWeight$35$$35$a3D2$35$$35$k_$35$$35$4219 totWeight$35$$35$a3D2) (= lq_karg$36$weights$35$$35$a3D0$35$$35$k_$35$$35$4219 weights$35$$35$a3D0) (= lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4219 wxs$35$$35$a3CY))))) (exists ((lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4216 Int) (lq_tmp$36$x$35$$35$4233 Int) (lq_karg$36$totWeight$35$$35$a3D2$35$$35$k_$35$$35$4216 Int) (lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4216 Int) (lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4216 Int) (lq_karg$36$VV$35$$35$4215$35$$35$k_$35$$35$4216 Int) (lq_karg$36$weights$35$$35$a3D0$35$$35$k_$35$$35$4216 Int)) (and (= lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4216 Trees.Measures.sumBad) (= lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4216 Trees.Measures.sumOk) (= lq_karg$36$VV$35$$35$4215$35$$35$k_$35$$35$4216 x$35$$35$a3D5) (= lq_karg$36$totWeight$35$$35$a3D2$35$$35$k_$35$$35$4216 totWeight$35$$35$a3D2) (= lq_karg$36$weights$35$$35$a3D0$35$$35$k_$35$$35$4216 weights$35$$35$a3D0) (= lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4216 wxs$35$$35$a3CY) (= lq_tmp$36$x$35$$35$4233 x$35$$35$a3D5) (exists ((VV$35$$35$F$35$$35$35 Int) (lq_anf$36$$35$$35$7205759403792808759$35$$35$d3Wv Int)) (and (exists ((lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4302 Int) (lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4302 Int) (lq_karg$36$weights$35$$35$a3D0$35$$35$k_$35$$35$4302 Int) (lq_karg$36$totWeight$35$$35$a3D2$35$$35$k_$35$$35$4302 Int) (lq_karg$36$VV$35$$35$4301$35$$35$k_$35$$35$4302 Int) (lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4302 Int)) (and (= lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4302 Trees.Measures.sumBad) (= lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4302 Trees.Measures.sumOk) (= lq_karg$36$VV$35$$35$4301$35$$35$k_$35$$35$4302 VV$35$$35$F$35$$35$35) (= lq_karg$36$totWeight$35$$35$a3D2$35$$35$k_$35$$35$4302 totWeight$35$$35$a3D2) (= lq_karg$36$weights$35$$35$a3D0$35$$35$k_$35$$35$4302 weights$35$$35$a3D0) (= lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4302 wxs$35$$35$a3CY) (exists ((VV$35$$35$F$35$$35$31 Int)) (and (< 0 VV$35$$35$F$35$$35$31) (= lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4302 Trees.Measures.sumBad) (= lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4302 Trees.Measures.sumOk) (= lq_karg$36$VV$35$$35$4301$35$$35$k_$35$$35$4302 VV$35$$35$F$35$$35$31) (= lq_karg$36$totWeight$35$$35$a3D2$35$$35$k_$35$$35$4302 totWeight$35$$35$a3D2) (= lq_karg$36$weights$35$$35$a3D0$35$$35$k_$35$$35$4302 weights$35$$35$a3D0) (= lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4302 wxs$35$$35$a3CY))))) (= lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4216 Trees.Measures.sumBad) (= lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4216 Trees.Measures.sumOk) (= lq_karg$36$VV$35$$35$4215$35$$35$k_$35$$35$4216 VV$35$$35$F$35$$35$35) (= lq_karg$36$totWeight$35$$35$a3D2$35$$35$k_$35$$35$4216 totWeight$35$$35$a3D2) (= lq_karg$36$weights$35$$35$a3D0$35$$35$k_$35$$35$4216 weights$35$$35$a3D0) (= lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4216 wxs$35$$35$a3CY))))) (= VV$35$$35$F$35$$35$38 (Z3_OP_MUL w$35$$35$a3D4 x$35$$35$a3D5)) (= lq_anf$36$$35$$35$7205759403792808758$35$$35$d3Wu ds_d3QT) (= lq_anf$36$$35$$35$7205759403792808758$35$$35$d3Wu ds_d3QT) (= lq_anf$36$$35$$35$7205759403792808758$35$$35$d3Wu ds_d3QT) (= lq_anf$36$$35$$35$7205759403792808758$35$$35$d3Wu (apply$35$$35$0 (apply$35$$35$0 (as GHC.Tuple.$40$$44$$41$ Int) w$35$$35$a3D4) x$35$$35$a3D5)) (= (apply$35$$35$0 (as fst Int) lq_anf$36$$35$$35$7205759403792808758$35$$35$d3Wu) w$35$$35$a3D4) (= (apply$35$$35$0 (as snd Int) lq_anf$36$$35$$35$7205759403792808758$35$$35$d3Wu) x$35$$35$a3D5) (= (apply$35$$35$0 (as x_Tuple21 Int) lq_anf$36$$35$$35$7205759403792808758$35$$35$d3Wu) w$35$$35$a3D4) (= (apply$35$$35$0 (as x_Tuple22 Int) lq_anf$36$$35$$35$7205759403792808758$35$$35$d3Wu) x$35$$35$a3D5) (= lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4224 Trees.Measures.sumBad) (= lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4224 Trees.Measures.sumOk) (= lq_karg$36$VV$35$$35$4223$35$$35$k_$35$$35$4224 VV$35$$35$F$35$$35$38) (= lq_karg$36$ds_d3QT$35$$35$k_$35$$35$4224 ds_d3QT) (= lq_karg$36$totWeight$35$$35$a3D2$35$$35$k_$35$$35$4224 totWeight$35$$35$a3D2) (= lq_karg$36$weights$35$$35$a3D0$35$$35$k_$35$$35$4224 weights$35$$35$a3D0) (= lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4224 wxs$35$$35$a3CY))))) (= lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$4314 Trees.Measures.sumBad) (= lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$4314 Trees.Measures.sumOk) (= lq_karg$36$VV$35$$35$4313$35$$35$k_$35$$35$4314 VV$35$$35$F$35$$35$37) (= lq_karg$36$totWeight$35$$35$a3D2$35$$35$k_$35$$35$4314 totWeight$35$$35$a3D2) (= lq_karg$36$weights$35$$35$a3D0$35$$35$k_$35$$35$4314 weights$35$$35$a3D0) (= lq_karg$36$wxs$35$$35$a3CY$35$$35$k_$35$$35$4314 wxs$35$$35$a3CY)))))) b$36$$35$$35$48 b$36$$35$$35$405 b$36$$35$$35$395 b$36$$35$$35$45 b$36$$35$$35$414))
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$28 0))))
(check-sat)
(pop 1)
(push 1)
(assert (not (=> (apply$35$$35$1 (as Trees.Measures.notEmpty Int) wxs$35$$35$a3CY) (> VV$35$$35$F$35$$35$28 0))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$28 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$28 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (< 0 VV$35$$35$F$35$$35$28)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= 0 VV$35$$35$F$35$$35$28))))
(check-sat)
(pop 1)
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$272 b$36$$35$$35$48 b$36$$35$$35$273 b$36$$35$$35$274 b$36$$35$$35$259 b$36$$35$$35$260 b$36$$35$$35$264 b$36$$35$$35$266 b$36$$35$$35$267 b$36$$35$$35$828 b$36$$35$$35$45))
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$136) (+ 1 (apply$35$$35$0 (as len Int) xs$35$$35$a3CL)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$136) (apply$35$$35$0 (as len Int) xs$35$$35$a3CL))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$136) (apply$35$$35$0 (as len Int) ds_d3Oe))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$1 (as Trees.Measures.notEmpty Int) lq_anf$36$$35$$35$7205759403792808707$35$$35$d3VF) (apply$35$$35$1 (as Trees.Measures.notEmpty Int) VV$35$$35$F$35$$35$136))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$136) (apply$35$$35$0 (as len Int) xs$35$$35$a3CL))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$136) 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$136) 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$136) (apply$35$$35$0 (as len Int) ds_d3Oe))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$136 ds_d3Oe)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$136 xs$35$$35$a3CL)))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$136 lq_anf$36$$35$$35$7205759403792808707$35$$35$d3VF)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$136) 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$136) (apply$35$$35$0 (as len Int) ds_d3Oe))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$136 ds_d3Oe)))
(check-sat)
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$136) (apply$35$$35$0 (as len Int) xs$35$$35$a3CL))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$136 xs$35$$35$a3CL)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$136 lq_anf$36$$35$$35$7205759403792808707$35$$35$d3VF)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$136) (apply$35$$35$0 (as len Int) xs$35$$35$a3CL))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$136 ds_d3Oe)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$136 lq_anf$36$$35$$35$7205759403792808707$35$$35$d3VF)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$136) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808707$35$$35$d3VF))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$136 (apply$35$$35$0 (as fst Int) ds_d3Oz))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$136) (apply$35$$35$0 (as len Int) ds_d3Oe))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$136 xs$35$$35$a3CL)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$136) (+ 1 (apply$35$$35$0 (as len Int) ds_d3Oe)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$136 (apply$35$$35$0 (as snd Int) ds_d3Oz))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (apply$35$$35$1 (as Trees.Measures.notEmpty Int) VV$35$$35$F$35$$35$136))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$136 lq_anf$36$$35$$35$7205759403792808707$35$$35$d3VF)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$136) x$35$$35$a3CK)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$1 (as Trees.Measures.notEmpty Int) xs$35$$35$a3CL) (apply$35$$35$1 (as Trees.Measures.notEmpty Int) VV$35$$35$F$35$$35$136))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$136) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808707$35$$35$d3VF))))
(check-sat)
(pop 1)
(push 1)
(assert (not (apply$35$$35$1 (as Trees.Measures.notEmpty Int) VV$35$$35$F$35$$35$136)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$136) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808707$35$$35$d3VF)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$136) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808707$35$$35$d3VF))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$136 ds_d3Oe))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$136) (apply$35$$35$0 (as len Int) ds_d3Oe))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$136) ds_d3Oe)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$136 xs$35$$35$a3CL)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$136) lq_anf$36$$35$$35$7205759403792808707$35$$35$d3VF)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$136) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808707$35$$35$d3VF))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$136 lq_anf$36$$35$$35$7205759403792808707$35$$35$d3VF))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$136 ds_d3Oe)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$1 (as Trees.Measures.notEmpty Int) ds_d3Oe) (apply$35$$35$1 (as Trees.Measures.notEmpty Int) VV$35$$35$F$35$$35$136))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$136 xs$35$$35$a3CL)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$136 lq_anf$36$$35$$35$7205759403792808707$35$$35$d3VF)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$136 xs$35$$35$a3CL))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$136) xs$35$$35$a3CL)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$136) (apply$35$$35$0 (as len Int) xs$35$$35$a3CL))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$136) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808707$35$$35$d3VF))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$136 ds_d3Oe)))
(check-sat)
(pop 1)
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (and (<= (apply$35$$35$0 (as len Int) ys$35$$35$a3Fw) (apply$35$$35$0 (as len Int) xs$35$$35$a3CL)) (not (= ys$35$$35$a3Fw lq_anf$36$$35$$35$7205759403792808707$35$$35$d3VF)) (<= (apply$35$$35$0 (as len Int) ys$35$$35$a3Fw) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808707$35$$35$d3VF)) (<= (apply$35$$35$0 (as len Int) ys$35$$35$a3Fw) (apply$35$$35$0 (as len Int) ds_d3Oe)) (not (= ys$35$$35$a3Fw ds_d3Oe)) (< (apply$35$$35$0 (as len Int) ys$35$$35$a3Fw) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808707$35$$35$d3VF)) (= ys$35$$35$a3Fw (apply$35$$35$0 (as fst Int) ds_d3Oz)) (< (apply$35$$35$0 (as len Int) ys$35$$35$a3Fw) (apply$35$$35$0 (as len Int) ds_d3Oe)) (>= (apply$35$$35$0 (as len Int) ys$35$$35$a3Fw) 0)) b$36$$35$$35$48 b$36$$35$$35$259 (>= (apply$35$$35$0 (as len Int) ys$35$$35$a3Fw) 0) b$36$$35$$35$260 b$36$$35$$35$277 b$36$$35$$35$278 b$36$$35$$35$279 b$36$$35$$35$264 b$36$$35$$35$266 b$36$$35$$35$267 b$36$$35$$35$45 b$36$$35$$35$813))
(push 1)
(assert (not (not (apply$35$$35$1 (as Trees.Measures.notEmpty Int) VV$35$$35$F$35$$35$133))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$133 ys$35$$35$a3Fw)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$133) (+ 1 (apply$35$$35$0 (as len Int) xs$35$$35$a3CL)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$133 lq_anf$36$$35$$35$7205759403792808707$35$$35$d3VF)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$133) (apply$35$$35$0 (as len Int) ys$35$$35$a3Fw))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$133) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808707$35$$35$d3VF))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$133) (apply$35$$35$0 (as len Int) ds_d3Oe))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$133 xs$35$$35$a3CL)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$1 (as Trees.Measures.notEmpty Int) ds_d3Oe) (apply$35$$35$1 (as Trees.Measures.notEmpty Int) VV$35$$35$F$35$$35$133))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$133) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808707$35$$35$d3VF))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$133) 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$133) (+ 1 (apply$35$$35$0 (as len Int) ds_d3Oe)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$133) 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$133) (apply$35$$35$0 (as len Int) ds_d3Oe))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$133) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808707$35$$35$d3VF))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$133 lq_anf$36$$35$$35$7205759403792808707$35$$35$d3VF)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$133) x$35$$35$a3CK)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$133) (apply$35$$35$0 (as len Int) ys$35$$35$a3Fw))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$133 ys$35$$35$a3Fw)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$133 xs$35$$35$a3CL)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$133) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808707$35$$35$d3VF))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$133 lq_anf$36$$35$$35$7205759403792808707$35$$35$d3VF)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$133) ds_d3Oe)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$133 ds_d3Oe))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$133 ds_d3Oe)))
(check-sat)
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$133) (apply$35$$35$0 (as len Int) ys$35$$35$a3Fw))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$133) (apply$35$$35$0 (as len Int) ds_d3Oe))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$133) (apply$35$$35$0 (as len Int) ys$35$$35$a3Fw))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$133 ys$35$$35$a3Fw)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$133 ds_d3Oe)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
(pop 1)
(push 1)
(assert (not (apply$35$$35$1 (as Trees.Measures.notEmpty Int) VV$35$$35$F$35$$35$133)))
(check-sat)
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$133) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808707$35$$35$d3VF))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$133) 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$133 xs$35$$35$a3CL)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$133 ds_d3Oe)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$133) (apply$35$$35$0 (as len Int) xs$35$$35$a3CL))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$133) (apply$35$$35$0 (as len Int) xs$35$$35$a3CL))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$133) (apply$35$$35$0 (as len Int) ds_d3Oe))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$133 ds_d3Oe)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$133 ys$35$$35$a3Fw)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$133 xs$35$$35$a3CL)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$133) (apply$35$$35$0 (as len Int) xs$35$$35$a3CL))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$133) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808707$35$$35$d3VF)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$1 (as Trees.Measures.notEmpty Int) xs$35$$35$a3CL) (apply$35$$35$1 (as Trees.Measures.notEmpty Int) VV$35$$35$F$35$$35$133))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$133 ys$35$$35$a3Fw)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$1 (as Trees.Measures.notEmpty Int) lq_anf$36$$35$$35$7205759403792808707$35$$35$d3VF) (apply$35$$35$1 (as Trees.Measures.notEmpty Int) VV$35$$35$F$35$$35$133))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$133) lq_anf$36$$35$$35$7205759403792808707$35$$35$d3VF)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$133 lq_anf$36$$35$$35$7205759403792808707$35$$35$d3VF))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$133 xs$35$$35$a3CL)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$1 (as Trees.Measures.notEmpty Int) ys$35$$35$a3Fw) (apply$35$$35$1 (as Trees.Measures.notEmpty Int) VV$35$$35$F$35$$35$133))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$133 (apply$35$$35$0 (as fst Int) ds_d3Oz))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$133 (apply$35$$35$0 (as snd Int) ds_d3Oz))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$133) (+ 1 (apply$35$$35$0 (as len Int) ys$35$$35$a3Fw)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$133) (apply$35$$35$0 (as len Int) xs$35$$35$a3CL))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$133 lq_anf$36$$35$$35$7205759403792808707$35$$35$d3VF)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$133 xs$35$$35$a3CL))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$133) (apply$35$$35$0 (as len Int) ys$35$$35$a3Fw))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$133) xs$35$$35$a3CL)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$133) (apply$35$$35$0 (as len Int) ds_d3Oe))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$133) (apply$35$$35$0 (as len Int) xs$35$$35$a3CL))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$133 ds_d3Oe)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$133 lq_anf$36$$35$$35$7205759403792808707$35$$35$d3VF)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$133) ys$35$$35$a3Fw)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$133 ys$35$$35$a3Fw))))
(check-sat)
(pop 1)
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$48 b$36$$35$$35$839 b$36$$35$$35$45))
(push 1)
(assert (not false))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$8 (as len Int) VV$35$$35$F$35$$35$267) 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$8 (as len Int) VV$35$$35$F$35$$35$267) 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$8 (as len Int) VV$35$$35$F$35$$35$267) 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (apply$35$$35$9 (as Trees.Measures.notEmpty Int) VV$35$$35$F$35$$35$267))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
(pop 1)
(push 1)
(assert (not (apply$35$$35$9 (as Trees.Measures.notEmpty Int) VV$35$$35$F$35$$35$267)))
(check-sat)
(pop 1)
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
(pop 1)
(push 1)
(push 1)
(assert (and true b$36$$35$$35$48 b$36$$35$$35$448 b$36$$35$$35$792 b$36$$35$$35$444 b$36$$35$$35$45 b$36$$35$$35$445 b$36$$35$$35$446 b$36$$35$$35$447))
(push 1)
(assert (not (=> (apply$35$$35$1 (as Trees.Measures.notEmpty Int) ds_d3PI) (> VV$35$$35$F$35$$35$17 0))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$48 b$36$$35$$35$346 b$36$$35$$35$795 b$36$$35$$35$347 b$36$$35$$35$348 b$36$$35$$35$45 b$36$$35$$35$349))
(push 1)
(assert (not (= (apply$35$$35$1 (as Trees.Measures.notEmpty Int) ds_d3NP) (apply$35$$35$1 (as Trees.Measures.notEmpty Int) VV$35$$35$F$35$$35$81))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$48 b$36$$35$$35$448 b$36$$35$$35$796 b$36$$35$$35$444 b$36$$35$$35$45 b$36$$35$$35$445 b$36$$35$$35$446 b$36$$35$$35$447))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$18 0)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$48 b$36$$35$$35$342 b$36$$35$$35$45 b$36$$35$$35$799))
(push 1)
(assert (not (apply$35$$35$1 (as Trees.Measures.notEmpty Int) VV$35$$35$F$35$$35$82)))
(check-sat)
(pop 1)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$800 b$36$$35$$35$48 b$36$$35$$35$432 b$36$$35$$35$436 b$36$$35$$35$438 b$36$$35$$35$439 b$36$$35$$35$440 b$36$$35$$35$441 b$36$$35$$35$442 b$36$$35$$35$45 b$36$$35$$35$431))
(push 1)
(assert (not (< 0 VV$35$$35$F$35$$35$19)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$48 b$36$$35$$35$337 b$36$$35$$35$803 b$36$$35$$35$323 b$36$$35$$35$339 b$36$$35$$35$324 b$36$$35$$35$325 b$36$$35$$35$326 b$36$$35$$35$327 b$36$$35$$35$329 b$36$$35$$35$331 b$36$$35$$35$45 b$36$$35$$35$333 b$36$$35$$35$335))
(push 1)
(assert (not (apply$35$$35$1 (as Trees.Measures.notEmpty Int) VV$35$$35$F$35$$35$83)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (and (<= (apply$35$$35$0 (as len Int) ys$35$$35$a3Fw) (apply$35$$35$0 (as len Int) xs$35$$35$a3CL)) (not (= ys$35$$35$a3Fw lq_anf$36$$35$$35$7205759403792808707$35$$35$d3VF)) (<= (apply$35$$35$0 (as len Int) ys$35$$35$a3Fw) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808707$35$$35$d3VF)) (<= (apply$35$$35$0 (as len Int) ys$35$$35$a3Fw) (apply$35$$35$0 (as len Int) ds_d3Oe)) (not (= ys$35$$35$a3Fw ds_d3Oe)) (< (apply$35$$35$0 (as len Int) ys$35$$35$a3Fw) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808707$35$$35$d3VF)) (= ys$35$$35$a3Fw (apply$35$$35$0 (as fst Int) ds_d3Oz)) (< (apply$35$$35$0 (as len Int) ys$35$$35$a3Fw) (apply$35$$35$0 (as len Int) ds_d3Oe)) (>= (apply$35$$35$0 (as len Int) ys$35$$35$a3Fw) 0) (or (exists ((lq_karg$36$ds_d3Oe$35$$35$k_$35$$35$2824 Int) (lq_karg$36$ys$35$$35$a3Fw$35$$35$k_$35$$35$2824 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792808710$35$$35$d3VI$35$$35$k_$35$$35$2824 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792808709$35$$35$d3VH$35$$35$k_$35$$35$2824 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792808707$35$$35$d3VF$35$$35$k_$35$$35$2824 Int) (lq_karg$36$xs$35$$35$a3CL$35$$35$k_$35$$35$2824 Int) (lq_karg$36$VV$35$$35$2823$35$$35$k_$35$$35$2824 Int) (lq_karg$36$zs$35$$35$a3Fy$35$$35$k_$35$$35$2824 Int) (lq_karg$36$x$35$$35$a3CK$35$$35$k_$35$$35$2824 Int) (lq_karg$36$ds_d3Oz$35$$35$k_$35$$35$2824 Int)) (and (= lq_karg$36$VV$35$$35$2823$35$$35$k_$35$$35$2824 VV$35$$35$F$35$$35$115) (= lq_karg$36$ds_d3Oe$35$$35$k_$35$$35$2824 ds_d3Oe) (= lq_karg$36$ds_d3Oz$35$$35$k_$35$$35$2824 ds_d3Oz) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808707$35$$35$d3VF$35$$35$k_$35$$35$2824 lq_anf$36$$35$$35$7205759403792808707$35$$35$d3VF) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808709$35$$35$d3VH$35$$35$k_$35$$35$2824 lq_anf$36$$35$$35$7205759403792808709$35$$35$d3VH) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808710$35$$35$d3VI$35$$35$k_$35$$35$2824 lq_anf$36$$35$$35$7205759403792808710$35$$35$d3VI) (= lq_karg$36$x$35$$35$a3CK$35$$35$k_$35$$35$2824 x$35$$35$a3CK) (= lq_karg$36$xs$35$$35$a3CL$35$$35$k_$35$$35$2824 xs$35$$35$a3CL) (= lq_karg$36$ys$35$$35$a3Fw$35$$35$k_$35$$35$2824 ys$35$$35$a3Fw) (= lq_karg$36$zs$35$$35$a3Fy$35$$35$k_$35$$35$2824 zs$35$$35$a3Fy) (exists ((VV$35$$35$F$35$$35$125 Int)) (and (apply$35$$35$1 (as Trees.Measures.notEmpty Int) VV$35$$35$F$35$$35$125) (= VV$35$$35$F$35$$35$125 lq_anf$36$$35$$35$7205759403792808709$35$$35$d3VH) (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$125) x$35$$35$a3CK) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$125) (+ 1 (apply$35$$35$0 (as len Int) ys$35$$35$a3Fw))) (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$125) ys$35$$35$a3Fw) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$125) 0) (= lq_karg$36$VV$35$$35$2823$35$$35$k_$35$$35$2824 VV$35$$35$F$35$$35$125) (= lq_karg$36$ds_d3Oe$35$$35$k_$35$$35$2824 ds_d3Oe) (= lq_karg$36$ds_d3Oz$35$$35$k_$35$$35$2824 ds_d3Oz) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808707$35$$35$d3VF$35$$35$k_$35$$35$2824 lq_anf$36$$35$$35$7205759403792808707$35$$35$d3VF) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808709$35$$35$d3VH$35$$35$k_$35$$35$2824 lq_anf$36$$35$$35$7205759403792808709$35$$35$d3VH) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808710$35$$35$d3VI$35$$35$k_$35$$35$2824 lq_anf$36$$35$$35$7205759403792808710$35$$35$d3VI) (= lq_karg$36$x$35$$35$a3CK$35$$35$k_$35$$35$2824 x$35$$35$a3CK) (= lq_karg$36$xs$35$$35$a3CL$35$$35$k_$35$$35$2824 xs$35$$35$a3CL) (= lq_karg$36$ys$35$$35$a3Fw$35$$35$k_$35$$35$2824 ys$35$$35$a3Fw) (= lq_karg$36$zs$35$$35$a3Fy$35$$35$k_$35$$35$2824 zs$35$$35$a3Fy))))) (exists ((lq_karg$36$ds_d3Oe$35$$35$k_$35$$35$2824 Int) (lq_karg$36$ys$35$$35$a3Fw$35$$35$k_$35$$35$2824 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792808710$35$$35$d3VI$35$$35$k_$35$$35$2824 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792808709$35$$35$d3VH$35$$35$k_$35$$35$2824 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792808707$35$$35$d3VF$35$$35$k_$35$$35$2824 Int) (lq_karg$36$xs$35$$35$a3CL$35$$35$k_$35$$35$2824 Int) (lq_karg$36$VV$35$$35$2823$35$$35$k_$35$$35$2824 Int) (lq_karg$36$zs$35$$35$a3Fy$35$$35$k_$35$$35$2824 Int) (lq_karg$36$x$35$$35$a3CK$35$$35$k_$35$$35$2824 Int) (lq_karg$36$ds_d3Oz$35$$35$k_$35$$35$2824 Int)) (and (= lq_karg$36$VV$35$$35$2823$35$$35$k_$35$$35$2824 VV$35$$35$F$35$$35$115) (= lq_karg$36$ds_d3Oe$35$$35$k_$35$$35$2824 ds_d3Oe) (= lq_karg$36$ds_d3Oz$35$$35$k_$35$$35$2824 ds_d3Oz) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808707$35$$35$d3VF$35$$35$k_$35$$35$2824 lq_anf$36$$35$$35$7205759403792808707$35$$35$d3VF) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808709$35$$35$d3VH$35$$35$k_$35$$35$2824 lq_anf$36$$35$$35$7205759403792808709$35$$35$d3VH) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808710$35$$35$d3VI$35$$35$k_$35$$35$2824 lq_anf$36$$35$$35$7205759403792808710$35$$35$d3VI) (= lq_karg$36$x$35$$35$a3CK$35$$35$k_$35$$35$2824 x$35$$35$a3CK) (= lq_karg$36$xs$35$$35$a3CL$35$$35$k_$35$$35$2824 xs$35$$35$a3CL) (= lq_karg$36$ys$35$$35$a3Fw$35$$35$k_$35$$35$2824 ys$35$$35$a3Fw) (= lq_karg$36$zs$35$$35$a3Fy$35$$35$k_$35$$35$2824 zs$35$$35$a3Fy) (exists ((VV$35$$35$F$35$$35$116 Int)) (and (apply$35$$35$1 (as Trees.Measures.notEmpty Int) VV$35$$35$F$35$$35$116) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$116) 0) (= lq_karg$36$VV$35$$35$2823$35$$35$k_$35$$35$2824 VV$35$$35$F$35$$35$116) (= lq_karg$36$ds_d3Oe$35$$35$k_$35$$35$2824 ds_d3Oe) (= lq_karg$36$ds_d3Oz$35$$35$k_$35$$35$2824 ds_d3Oz) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808707$35$$35$d3VF$35$$35$k_$35$$35$2824 lq_anf$36$$35$$35$7205759403792808707$35$$35$d3VF) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808709$35$$35$d3VH$35$$35$k_$35$$35$2824 lq_anf$36$$35$$35$7205759403792808709$35$$35$d3VH) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808710$35$$35$d3VI$35$$35$k_$35$$35$2824 lq_anf$36$$35$$35$7205759403792808710$35$$35$d3VI) (= lq_karg$36$x$35$$35$a3CK$35$$35$k_$35$$35$2824 x$35$$35$a3CK) (= lq_karg$36$xs$35$$35$a3CL$35$$35$k_$35$$35$2824 xs$35$$35$a3CL) (= lq_karg$36$ys$35$$35$a3Fw$35$$35$k_$35$$35$2824 ys$35$$35$a3Fw) (= lq_karg$36$zs$35$$35$a3Fy$35$$35$k_$35$$35$2824 zs$35$$35$a3Fy)))))) (<= (apply$35$$35$0 (as len Int) zs$35$$35$a3Fy) (apply$35$$35$0 (as len Int) ds_d3Oe)) (= zs$35$$35$a3Fy (apply$35$$35$0 (as snd Int) ds_d3Oz)) (not (= zs$35$$35$a3Fy lq_anf$36$$35$$35$7205759403792808707$35$$35$d3VF)) (<= (apply$35$$35$0 (as len Int) zs$35$$35$a3Fy) (apply$35$$35$0 (as len Int) xs$35$$35$a3CL)) (< (apply$35$$35$0 (as len Int) zs$35$$35$a3Fy) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808707$35$$35$d3VF)) (not (= zs$35$$35$a3Fy ds_d3Oe)) (>= (apply$35$$35$0 (as len Int) zs$35$$35$a3Fy) 0) (< (apply$35$$35$0 (as len Int) zs$35$$35$a3Fy) (apply$35$$35$0 (as len Int) ds_d3Oe)) (<= (apply$35$$35$0 (as len Int) zs$35$$35$a3Fy) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808707$35$$35$d3VF))) b$36$$35$$35$48 b$36$$35$$35$259 (>= (apply$35$$35$0 (as len Int) ys$35$$35$a3Fw) 0) b$36$$35$$35$260 (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$115) 0) b$36$$35$$35$264 (>= (apply$35$$35$0 (as len Int) zs$35$$35$a3Fy) 0) b$36$$35$$35$266 b$36$$35$$35$282 b$36$$35$$35$267 b$36$$35$$35$283 b$36$$35$$35$45))
(push 1)
(assert (not (apply$35$$35$1 (as Trees.Measures.notEmpty Int) VV$35$$35$F$35$$35$115)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$48 b$36$$35$$35$432 b$36$$35$$35$436 b$36$$35$$35$805 b$36$$35$$35$438 b$36$$35$$35$439 b$36$$35$$35$440 b$36$$35$$35$441 b$36$$35$$35$45 b$36$$35$$35$431))
(push 1)
(assert (not (apply$35$$35$1 (as Trees.Measures.notEmpty Int) VV$35$$35$F$35$$35$20)))
(check-sat)
(pop 1)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$48 b$36$$35$$35$390 b$36$$35$$35$807 b$36$$35$$35$391 b$36$$35$$35$392 b$36$$35$$35$393 b$36$$35$$35$45))
(push 1)
(assert (not (not (= 0 VV$35$$35$F$35$$35$52))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$48 b$36$$35$$35$247 b$36$$35$$35$809 b$36$$35$$35$249 b$36$$35$$35$250 b$36$$35$$35$251 b$36$$35$$35$45))
(push 1)
(assert (not (apply$35$$35$1 (as Trees.Measures.notEmpty Int) VV$35$$35$F$35$$35$148)))
(check-sat)
(pop 1)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$48 b$36$$35$$35$464 b$36$$35$$35$465 b$36$$35$$35$466 b$36$$35$$35$469 b$36$$35$$35$470 b$36$$35$$35$810 b$36$$35$$35$45))
(push 1)
(assert (not (not (= 0 VV$35$$35$F$35$$35$5))))
(check-sat)
(pop 1)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$48 b$36$$35$$35$384 b$36$$35$$35$385 b$36$$35$$35$812 b$36$$35$$35$45 b$36$$35$$35$383))
(push 1)
(assert (not (not (= 0 VV$35$$35$F$35$$35$53))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$48 b$36$$35$$35$464 b$36$$35$$35$465 b$36$$35$$35$466 b$36$$35$$35$469 b$36$$35$$35$470 b$36$$35$$35$45 b$36$$35$$35$814))
(push 1)
(assert (not (apply$35$$35$1 (as Trees.Measures.notEmpty Int) VV$35$$35$F$35$$35$6)))
(check-sat)
(pop 1)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$48 b$36$$35$$35$432 b$36$$35$$35$433 b$36$$35$$35$434 b$36$$35$$35$435 b$36$$35$$35$45 b$36$$35$$35$815 b$36$$35$$35$431))
(push 1)
(assert (not (< 0 VV$35$$35$F$35$$35$22)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$48 b$36$$35$$35$817 b$36$$35$$35$370 b$36$$35$$35$371 b$36$$35$$35$372 b$36$$35$$35$374 b$36$$35$$35$375 b$36$$35$$35$377 b$36$$35$$35$378 b$36$$35$$35$379 b$36$$35$$35$45))
(push 1)
(assert (not false))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (exists ((lq_karg$36$ds_d3RG$35$$35$k_$35$$35$1662 Int) (lq_karg$36$ds_d3So$35$$35$k_$35$$35$1662 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792808694$35$$35$d3Vs$35$$35$k_$35$$35$1662 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792808688$35$$35$d3Vm$35$$35$k_$35$$35$1662 Int) (lq_karg$36$etc$35$$35$a3Dd$35$$35$k_$35$$35$1662 Int) (lq_karg$36$x$35$$35$a3Da$35$$35$k_$35$$35$1662 Int) (lq_karg$36$y$35$$35$a3Dc$35$$35$k_$35$$35$1662 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792808687$35$$35$d3Vl$35$$35$k_$35$$35$1662 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792808693$35$$35$d3Vr$35$$35$k_$35$$35$1662 Int) (lq_karg$36$VV$35$$35$1661$35$$35$k_$35$$35$1662 Int)) (and (= lq_karg$36$VV$35$$35$1661$35$$35$k_$35$$35$1662 VV$35$$35$F$35$$35$214) (= lq_karg$36$ds_d3RG$35$$35$k_$35$$35$1662 ds_d3RG) (= lq_karg$36$ds_d3So$35$$35$k_$35$$35$1662 ds_d3So) (= lq_karg$36$etc$35$$35$a3Dd$35$$35$k_$35$$35$1662 etc$35$$35$a3Dd) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808687$35$$35$d3Vl$35$$35$k_$35$$35$1662 lq_anf$36$$35$$35$7205759403792808687$35$$35$d3Vl) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808688$35$$35$d3Vm$35$$35$k_$35$$35$1662 lq_anf$36$$35$$35$7205759403792808688$35$$35$d3Vm) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808693$35$$35$d3Vr$35$$35$k_$35$$35$1662 lq_anf$36$$35$$35$7205759403792808693$35$$35$d3Vr) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808694$35$$35$d3Vs$35$$35$k_$35$$35$1662 lq_anf$36$$35$$35$7205759403792808694$35$$35$d3Vs) (= lq_karg$36$x$35$$35$a3Da$35$$35$k_$35$$35$1662 x$35$$35$a3Da) (= lq_karg$36$y$35$$35$a3Dc$35$$35$k_$35$$35$1662 y$35$$35$a3Dc) (exists ((VV$35$$35$F$35$$35$207 Int)) (and (= VV$35$$35$F$35$$35$207 lq_anf$36$$35$$35$7205759403792808694$35$$35$d3Vs) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$207) 0) (= lq_karg$36$VV$35$$35$1661$35$$35$k_$35$$35$1662 VV$35$$35$F$35$$35$207) (= lq_karg$36$ds_d3RG$35$$35$k_$35$$35$1662 ds_d3RG) (= lq_karg$36$ds_d3So$35$$35$k_$35$$35$1662 ds_d3So) (= lq_karg$36$etc$35$$35$a3Dd$35$$35$k_$35$$35$1662 etc$35$$35$a3Dd) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808687$35$$35$d3Vl$35$$35$k_$35$$35$1662 lq_anf$36$$35$$35$7205759403792808687$35$$35$d3Vl) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808688$35$$35$d3Vm$35$$35$k_$35$$35$1662 lq_anf$36$$35$$35$7205759403792808688$35$$35$d3Vm) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808693$35$$35$d3Vr$35$$35$k_$35$$35$1662 lq_anf$36$$35$$35$7205759403792808693$35$$35$d3Vr) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808694$35$$35$d3Vs$35$$35$k_$35$$35$1662 lq_anf$36$$35$$35$7205759403792808694$35$$35$d3Vs) (= lq_karg$36$x$35$$35$a3Da$35$$35$k_$35$$35$1662 x$35$$35$a3Da) (= lq_karg$36$y$35$$35$a3Dc$35$$35$k_$35$$35$1662 y$35$$35$a3Dc))))) b$36$$35$$35$48 b$36$$35$$35$176 (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$214) 0) b$36$$35$$35$194 b$36$$35$$35$180 b$36$$35$$35$196 b$36$$35$$35$197 b$36$$35$$35$182 b$36$$35$$35$183 b$36$$35$$35$184 b$36$$35$$35$200 b$36$$35$$35$201 b$36$$35$$35$45 b$36$$35$$35$175))
(push 1)
(assert (not (apply$35$$35$1 (as Trees.Measures.notEmpty Int) VV$35$$35$F$35$$35$214)))
(check-sat)
(pop 1)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$48 b$36$$35$$35$418 b$36$$35$$35$819 b$36$$35$$35$419 b$36$$35$$35$423 b$36$$35$$35$425 b$36$$35$$35$426 b$36$$35$$35$427 b$36$$35$$35$428 b$36$$35$$35$45 b$36$$35$$35$429))
(push 1)
(assert (not (=> (apply$35$$35$1 (as Trees.Measures.notEmpty Int) ds_d3OZ) (> VV$35$$35$F$35$$35$23 0))))
(check-sat)
(pop 1)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$48 b$36$$35$$35$820 b$36$$35$$35$405 b$36$$35$$35$395 b$36$$35$$35$45))
(push 1)
(assert (not (apply$35$$35$1 (as Trees.Measures.notEmpty Int) VV$35$$35$F$35$$35$39)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$48 b$36$$35$$35$370 b$36$$35$$35$371 b$36$$35$$35$372 b$36$$35$$35$821 b$36$$35$$35$374 b$36$$35$$35$375 b$36$$35$$35$376 b$36$$35$$35$45))
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$55 0))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (exists ((lq_karg$36$xs$35$$35$a3CO$35$$35$k_$35$$35$3690 Int) (lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$3690 Int) (lq_karg$36$VV$35$$35$3689$35$$35$k_$35$$35$3690 Int) (lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$3690 Int)) (and (= lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$3690 Trees.Measures.sumBad) (= lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$3690 Trees.Measures.sumOk) (= lq_karg$36$VV$35$$35$3689$35$$35$k_$35$$35$3690 VV$35$$35$F$35$$35$71) (= lq_karg$36$xs$35$$35$a3CO$35$$35$k_$35$$35$3690 xs$35$$35$a3CO) (exists ((VV$35$$35$F$35$$35$64 Int) (lq_anf$36$$35$$35$7205759403792808738$35$$35$d3Wa Int) (lq_anf$36$$35$$35$7205759403792808739$35$$35$d3Wb Int)) (and (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403792808739$35$$35$d3Wb$35$$35$k_$35$$35$3763 Int) (lq_karg$36$VV$35$$35$3762$35$$35$k_$35$$35$3763 Int) (lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$3763 Int) (lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$3763 Int) (lq_karg$36$xs$35$$35$a3CO$35$$35$k_$35$$35$3763 Int)) (and (= lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$3763 Trees.Measures.sumBad) (= lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$3763 Trees.Measures.sumOk) (= lq_karg$36$VV$35$$35$3762$35$$35$k_$35$$35$3763 VV$35$$35$F$35$$35$64) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808739$35$$35$d3Wb$35$$35$k_$35$$35$3763 lq_anf$36$$35$$35$7205759403792808739$35$$35$d3Wb) (= lq_karg$36$xs$35$$35$a3CO$35$$35$k_$35$$35$3763 xs$35$$35$a3CO) (exists ((VV$35$$35$F$35$$35$58 Int)) (and (apply$35$$35$1 (as Trees.Measures.notEmpty Int) VV$35$$35$F$35$$35$58) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$58) 0) (= lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$3763 Trees.Measures.sumBad) (= lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$3763 Trees.Measures.sumOk) (= lq_karg$36$VV$35$$35$3762$35$$35$k_$35$$35$3763 VV$35$$35$F$35$$35$58) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792808739$35$$35$d3Wb$35$$35$k_$35$$35$3763 lq_anf$36$$35$$35$7205759403792808739$35$$35$d3Wb) (= lq_karg$36$xs$35$$35$a3CO$35$$35$k_$35$$35$3763 xs$35$$35$a3CO))))) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$64) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808739$35$$35$d3Wb) 0) (= lq_karg$36$Trees.Measures.sumBad$35$$35$k_$35$$35$3690 Trees.Measures.sumBad) (= lq_karg$36$Trees.Measures.sumOk$35$$35$k_$35$$35$3690 Trees.Measures.sumOk) (= lq_karg$36$VV$35$$35$3689$35$$35$k_$35$$35$3690 VV$35$$35$F$35$$35$64) (= lq_karg$36$xs$35$$35$a3CO$35$$35$k_$35$$35$3690 xs$35$$35$a3CO))))) b$36$$35$$35$48 (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$71) 0) b$36$$35$$35$359 b$36$$35$$35$45))
(push 1)
(assert (not (apply$35$$35$1 (as Trees.Measures.notEmpty Int) VV$35$$35$F$35$$35$71)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$48 b$36$$35$$35$823 b$36$$35$$35$460 b$36$$35$$35$45 b$36$$35$$35$461))
(push 1)
(assert (not (not (= 0 VV$35$$35$F$35$$35$8))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$48 b$36$$35$$35$161 b$36$$35$$35$162 b$36$$35$$35$163 b$36$$35$$35$164 b$36$$35$$35$165 b$36$$35$$35$166 b$36$$35$$35$824 b$36$$35$$35$45))
(push 1)
(assert (not false))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$48 b$36$$35$$35$320 b$36$$35$$35$311 b$36$$35$$35$312 b$36$$35$$35$827 b$36$$35$$35$45 b$36$$35$$35$317 b$36$$35$$35$319))
(push 1)
(assert (not (apply$35$$35$1 (as Trees.Measures.notEmpty Int) VV$35$$35$F$35$$35$104)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$48 b$36$$35$$35$460 b$36$$35$$35$45 b$36$$35$$35$829 b$36$$35$$35$461))
(push 1)
(assert (not (apply$35$$35$1 (as Trees.Measures.notEmpty Int) VV$35$$35$F$35$$35$9)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$48 b$36$$35$$35$150 b$36$$35$$35$151 b$36$$35$$35$152 b$36$$35$$35$153 b$36$$35$$35$154 b$36$$35$$35$155 b$36$$35$$35$45 b$36$$35$$35$830))
(push 1)
(assert (not false))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$48 b$36$$35$$35$418 b$36$$35$$35$419 b$36$$35$$35$420 b$36$$35$$35$421 b$36$$35$$35$422 b$36$$35$$35$45 b$36$$35$$35$831))
(push 1)
(assert (not (=> (apply$35$$35$1 (as Trees.Measures.notEmpty Int) ds_d3OZ) (> VV$35$$35$F$35$$35$25 0))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$48 b$36$$35$$35$144 b$36$$35$$35$833 b$36$$35$$35$139 b$36$$35$$35$140 b$36$$35$$35$45 b$36$$35$$35$141 b$36$$35$$35$142 b$36$$35$$35$143))
(push 1)
(assert (not false))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (and (not (= 0 VV$35$$35$F$35$$35$26)) (< 0 VV$35$$35$F$35$$35$26) (>= VV$35$$35$F$35$$35$26 0) (> VV$35$$35$F$35$$35$26 0) (=> (apply$35$$35$1 (as Trees.Measures.notEmpty Int) wxs$35$$35$a3CY) (> VV$35$$35$F$35$$35$26 0)) (not (= VV$35$$35$F$35$$35$26 0)) (not (= 0 totWeight$35$$35$a3D2)) (< 0 totWeight$35$$35$a3D2) (>= totWeight$35$$35$a3D2 0) (> totWeight$35$$35$a3D2 0) (=> (apply$35$$35$1 (as Trees.Measures.notEmpty Int) wxs$35$$35$a3CY) (> totWeight$35$$35$a3D2 0)) (not (= totWeight$35$$35$a3D2 0)) (not (= 0 totElems$35$$35$a3D1)) (< 0 totElems$35$$35$a3D1) (>= totElems$35$$35$a3D1 0) (> totElems$35$$35$a3D1 0) (=> (apply$35$$35$1 (as Trees.Measures.notEmpty Int) wxs$35$$35$a3CY) (> totElems$35$$35$a3D1 0)) (not (= totElems$35$$35$a3D1 0))) b$36$$35$$35$48 (= VV$35$$35$F$35$$35$26 totWeight$35$$35$a3D2) b$36$$35$$35$405 b$36$$35$$35$395 b$36$$35$$35$45 b$36$$35$$35$414))
(push 1)
(assert (not (not (= 0 VV$35$$35$F$35$$35$26))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$48 b$36$$35$$35$353 b$36$$35$$35$354 b$36$$35$$35$356 b$36$$35$$35$837 b$36$$35$$35$346 b$36$$35$$35$347 b$36$$35$$35$45 b$36$$35$$35$351))
(push 1)
(assert (not (= (apply$35$$35$1 (as Trees.Measures.notEmpty Int) ds_d3NP) (apply$35$$35$1 (as Trees.Measures.notEmpty Int) VV$35$$35$F$35$$35$74))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$48 b$36$$35$$35$838 b$36$$35$$35$456 b$36$$35$$35$457 b$36$$35$$35$45))
(push 1)
(assert (not (not (= 0 VV$35$$35$F$35$$35$11))))
(check-sat)
(pop 1)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (and (not (= 0 totWeight$35$$35$a3D2)) (< 0 totWeight$35$$35$a3D2) (>= totWeight$35$$35$a3D2 0) (> totWeight$35$$35$a3D2 0) (=> (apply$35$$35$1 (as Trees.Measures.notEmpty Int) wxs$35$$35$a3CY) (> totWeight$35$$35$a3D2 0)) (not (= totWeight$35$$35$a3D2 0))) b$36$$35$$35$48 b$36$$35$$35$405 b$36$$35$$35$840 b$36$$35$$35$395 b$36$$35$$35$45 b$36$$35$$35$414))
(push 1)
(assert (not (apply$35$$35$1 (as Trees.Measures.notEmpty Int) VV$35$$35$F$35$$35$27)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$48 b$36$$35$$35$311 b$36$$35$$35$312 b$36$$35$$35$313 b$36$$35$$35$314 b$36$$35$$35$842 b$36$$35$$35$315 b$36$$35$$35$316 b$36$$35$$35$45))
(push 1)
(assert (not false))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$48 b$36$$35$$35$456 b$36$$35$$35$457 b$36$$35$$35$843 b$36$$35$$35$45))
(push 1)
(assert (not (apply$35$$35$1 (as Trees.Measures.notEmpty Int) VV$35$$35$F$35$$35$12)))
(check-sat)
(pop 1)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$48 b$36$$35$$35$849 b$36$$35$$35$449 b$36$$35$$35$451 b$36$$35$$35$452 b$36$$35$$35$453 b$36$$35$$35$454 b$36$$35$$35$455 b$36$$35$$35$444 b$36$$35$$35$45 b$36$$35$$35$445))
(push 1)
(assert (not (=> (apply$35$$35$1 (as Trees.Measures.notEmpty Int) ds_d3PI) (> VV$35$$35$F$35$$35$14 0))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$48 b$36$$35$$35$449 b$36$$35$$35$451 b$36$$35$$35$852 b$36$$35$$35$452 b$36$$35$$35$453 b$36$$35$$35$454 b$36$$35$$35$455 b$36$$35$$35$444 b$36$$35$$35$45 b$36$$35$$35$445))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$15 0)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and false b$36$$35$$35$48 b$36$$35$$35$128 b$36$$35$$35$129 b$36$$35$$35$114 b$36$$35$$35$115 b$36$$35$$35$116 b$36$$35$$35$132 (and (= VV$35$$35$F$35$$35$271 msg$35$$35$a3Cn) (>= (apply$35$$35$8 (as len Int) VV$35$$35$F$35$$35$271) 0)) b$36$$35$$35$117 b$36$$35$$35$118 b$36$$35$$35$134 b$36$$35$$35$119 b$36$$35$$35$120 b$36$$35$$35$121 (>= (apply$35$$35$8 (as len Int) msg$35$$35$a3Cn) 0) b$36$$35$$35$122 b$36$$35$$35$123 b$36$$35$$35$124 b$36$$35$$35$45 b$36$$35$$35$125 b$36$$35$$35$126 b$36$$35$$35$127))
(push 1)
(assert (not false))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$48 b$36$$35$$35$856 b$36$$35$$35$298 b$36$$35$$35$299 b$36$$35$$35$300 b$36$$35$$35$45 b$36$$35$$35$301 b$36$$35$$35$302 b$36$$35$$35$303))
(push 1)
(assert (not false))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and false b$36$$35$$35$48 b$36$$35$$35$259 b$36$$35$$35$260 b$36$$35$$35$261 b$36$$35$$35$262 (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$143) 0) b$36$$35$$35$45))
(push 1)
(assert (not (apply$35$$35$1 (as Trees.Measures.notEmpty Int) VV$35$$35$F$35$$35$143)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(pop 1)
(pop 1)
(exit)
