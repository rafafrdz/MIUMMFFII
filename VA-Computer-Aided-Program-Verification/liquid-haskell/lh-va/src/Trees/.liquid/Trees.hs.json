{"status":"safe","types":{"124":{"48":{"ann":"(Trees.Trees.SkewH a)","ident":"ds_d3mQ","row":124,"col":48},"36":{"ann":"(Trees.Trees.SkewH a)","ident":"lq_anf$##7205759403792806789","row":124,"col":36},"53":{"ann":"(Trees.Trees.SkewH a)","ident":"ds_d3nZ","row":124,"col":53},"16":{"ann":"{VV : forall a .\n      x1:a -> x2:(Trees.Trees.SkewH {VV : a | x1 <= VV}) -> x3:(Trees.Trees.SkewH {VV : a | x1 <= VV}) -> {v : (Trees.Trees.SkewH a) | sLeft v == x2\n                                                                                                                                       && sRight v == x3\n                                                                                                                                       && sk v == x1} | VV == Skew}","ident":"Trees.Trees.Skew","row":124,"col":16},"5":{"ann":"a","ident":"ds_d3nY","row":124,"col":5},"11":{"ann":"{VV : a | VV == k2}","ident":"k2","row":124,"col":11},"21":{"ann":"a","ident":"ds_d3nY","row":124,"col":21},"24":{"ann":"(Trees.Trees.SkewH a)","ident":"lq_anf$##7205759403792806790","row":124,"col":24},"32":{"ann":"(Trees.Trees.SkewH a)","ident":"ds_d3o0","row":124,"col":32}},"78":{"26":{"ann":"forall a .\n{t : (Trees.Trees.BST a) | nonEmpty t} -> (Trees.Trees.MinPair a)","ident":"Trees.Trees.delMin","row":78,"col":26},"8":{"ann":"{VV : a | VV /= k\n          && VV < k\n          && VV <= k}","ident":"k'","row":78,"col":8},"11":{"ann":"(Trees.Trees.BST {VV : a | VV /= k\n                           && VV /= k'\n                           && VV > k'\n                           && VV >= k'\n                           && VV < k\n                           && k' < VV\n                           && VV <= k\n                           && k' <= VV})","ident":"l'","row":78,"col":11},"33":{"ann":"(Trees.Trees.BST {VV : a | VV < k})","ident":"ds_d3oZ","row":78,"col":33}},"75":{"31":{"ann":"{v : (Trees.Trees.BST {VV : a | k < VV}) | v == r}","ident":"r","row":75,"col":31},"29":{"ann":"{VV : a | VV == k}","ident":"k","row":75,"col":29},"1":{"ann":"forall a .\n{t : (Trees.Trees.BST a) | nonEmpty t} -> (Trees.Trees.MinPair a)","ident":"Trees.Trees.delMin","row":75,"col":1},"26":{"ann":"{VV : forall a .\n      x1:a -> x2:(Trees.Trees.BST {VV : a | x1 < VV}) -> {v : (Trees.Trees.MinPair a) | mElt v == x1\n                                                                                        && rest v == x2} | VV == MP}","ident":"Trees.Trees.MP","row":75,"col":26}},"115":{"37":{"ann":"{v : (Trees.Trees.SkewH {VV : a | a <= VV}) | v == c}","ident":"c","row":115,"col":37},"35":{"ann":"{v : (Trees.Trees.SkewH {VV : a | a <= VV}) | v == b}","ident":"b","row":115,"col":35},"1":{"ann":"forall a .\n(Ord<[]> a) =>\nx2:(Trees.Trees.SkewH a) -> (Trees.Trees.SkewH {VV : a | sk x2 <= VV})","ident":"Trees.Trees.refineSkew","row":115,"col":1},"27":{"ann":"{VV : forall a .\n      x1:a -> x2:(Trees.Trees.SkewH {VV : a | x1 <= VV}) -> x3:(Trees.Trees.SkewH {VV : a | x1 <= VV}) -> {v : (Trees.Trees.SkewH a) | sLeft v == x2\n                                                                                                                                       && sRight v == x3\n                                                                                                                                       && sk v == x1} | VV == Skew}","ident":"Trees.Trees.Skew","row":115,"col":27},"33":{"ann":"{VV : a | VV == a}","ident":"a","row":115,"col":33}},"72":{"27":{"ann":"{v : GHC.Types.Bool | v\n                      && v == True}","ident":"GHC.Types.True","row":72,"col":27}},"88":{"28":{"ann":"{v : (Trees.Trees.IncList {VV : a | VV >= z}) | v == ys}","ident":"ys","row":88,"col":28},"1":{"ann":"forall a .\nx1:a -> (Trees.Trees.IncList {VV : a | VV <= x1}) -> (Trees.Trees.IncList {VV : a | VV >= x1}) -> (Trees.Trees.IncList a)","ident":"Trees.Trees.join","row":88,"col":1},"23":{"ann":"{VV : a | VV == z}","ident":"z","row":88,"col":23},"18":{"ann":"(Trees.Trees.IncList {VV : a | VV >= z})","ident":"ys","row":88,"col":18},"6":{"ann":"a","ident":"z","row":88,"col":6}},"116":{"20":{"ann":"{VV : forall a . (Trees.Trees.SkewH a) | VV == Empty}","ident":"_","row":116,"col":20}},"71":{"1":{"ann":"forall a .\nx1:(Trees.Trees.BST a) -> {VV : GHC.Types.Bool | VV <=> nonEmpty x1}","ident":"Trees.Trees.nonEmpty","row":71,"col":1},"27":{"ann":"{v : GHC.Types.Bool | not v\n                      && v == False}","ident":"GHC.Types.False","row":71,"col":27}},"89":{"28":{"ann":"(Trees.Trees.IncList a)","ident":"lq_anf$##7205759403792806779","row":89,"col":28},"35":{"ann":"{v : (Trees.Trees.IncList {VV : a | VV <= z\n                                    && x <= VV}) | v == xs}","ident":"xs","row":89,"col":35},"23":{"ann":"{VV : a | VV == x\n          && VV <= z}","ident":"x","row":89,"col":23},"33":{"ann":"{VV : a | VV == z}","ident":"z","row":89,"col":33},"38":{"ann":"{v : (Trees.Trees.IncList {VV : a | VV >= z}) | v == ys}","ident":"ys","row":89,"col":38}},"1":{"1":{"ann":"GHC.Types.Module","ident":"Trees.Trees.$trModule","row":1,"col":1}},"122":{"26":{"ann":"(Trees.Trees.SkewH a)","ident":"ds_d3mP","row":122,"col":26}},"121":{"19":{"ann":"(Trees.Trees.SkewH a)","ident":"ds_d3mQ","row":121,"col":19}},"120":{"22":{"ann":"{VV : forall a . (Trees.Trees.SkewH a) | VV == Empty}","ident":"_","row":120,"col":22},"1":{"ann":"forall a .\n(Ord<[]> a) =>\n(Trees.Trees.SkewH a) -> (Trees.Trees.SkewH a) -> (Trees.Trees.SkewH a)","ident":"Trees.Trees.joinSk","row":120,"col":1}},"24":{"17":{"ann":"{v : [GHC.Types.Char] | false}","ident":"msg","row":24,"col":17},"1":{"ann":"forall a . {VV : [GHC.Types.Char] | false} -> a","ident":"Trees.Trees.die","row":24,"col":1},"5":{"ann":"{VV : [GHC.Types.Char] | false}","ident":"msg","row":24,"col":5}},"79":{"30":{"ann":"[GHC.Types.Char]","ident":"lq_anf$##7205759403792806771","row":79,"col":30},"26":{"ann":"{VV : forall a . {v : [GHC.Types.Char] | false} -> a | VV == die}","ident":"Trees.Trees.die","row":79,"col":26}},"125":{"17":{"ann":"forall a .\n(Ord<[]> a) =>\n(Trees.Trees.SkewH a) -> (Trees.Trees.SkewH a) -> (Trees.Trees.SkewH a)","ident":"Trees.Trees.joinSk","row":125,"col":17},"27":{"ann":"(Trees.Trees.SkewH a)","ident":"ds_d3mP","row":125,"col":27},"24":{"ann":"(Trees.Trees.SkewH a)","ident":"ds_d3mQ","row":125,"col":24}},"76":{"43":{"ann":"{v : (Trees.Trees.BST {VV : a | k < VV}) | v == r}","ident":"r","row":76,"col":43},"29":{"ann":"{VV : a | VV == k'\n          && VV /= k\n          && VV < k\n          && VV <= k}","ident":"k'","row":76,"col":29},"40":{"ann":"{v : (Trees.Trees.BST {VV : a | VV /= k\n                                && VV /= k'\n                                && VV > k'\n                                && VV >= k'\n                                && VV < k\n                                && k' < VV\n                                && VV <= k\n                                && k' <= VV}) | v == l'}","ident":"l'","row":76,"col":40},"26":{"ann":"{VV : forall a .\n      x1:a -> x2:(Trees.Trees.BST {VV : a | x1 < VV}) -> {v : (Trees.Trees.MinPair a) | mElt v == x1\n                                                                                        && rest v == x2} | VV == MP}","ident":"Trees.Trees.MP","row":76,"col":26},"38":{"ann":"{VV : a | VV == k}","ident":"k","row":76,"col":38},"32":{"ann":"{v : (Trees.Trees.BST a) | nonEmpty v\n                           && left v == l'\n                           && right v == r\n                           && root v == k}","ident":"lq_anf$##7205759403792806773","row":76,"col":32}}},"sptypes":[{"start":{"line":1,"column":1},"ann":"GHC.Types.Module","ident":"Trees.Trees.$trModule","stop":{"line":1,"column":1}},{"start":{"line":24,"column":1},"ann":"forall a . {VV : [GHC.Types.Char] | false} -> a","ident":"Trees.Trees.die","stop":{"line":24,"column":4}},{"start":{"line":24,"column":5},"ann":"{VV : [GHC.Types.Char] | false}","ident":"msg","stop":{"line":24,"column":8}},{"start":{"line":24,"column":17},"ann":"{v : [GHC.Types.Char] | false}","ident":"msg","stop":{"line":24,"column":20}},{"start":{"line":71,"column":1},"ann":"forall a .\nx1:(Trees.Trees.BST a) -> {VV : GHC.Types.Bool | VV <=> nonEmpty x1}","ident":"Trees.Trees.nonEmpty","stop":{"line":71,"column":9}},{"start":{"line":71,"column":27},"ann":"{v : GHC.Types.Bool | not v\n                      && v == False}","ident":"GHC.Types.False","stop":{"line":71,"column":32}},{"start":{"line":72,"column":27},"ann":"{v : GHC.Types.Bool | v\n                      && v == True}","ident":"GHC.Types.True","stop":{"line":72,"column":31}},{"start":{"line":75,"column":1},"ann":"forall a .\n{t : (Trees.Trees.BST a) | nonEmpty t} -> (Trees.Trees.MinPair a)","ident":"Trees.Trees.delMin","stop":{"line":75,"column":7}},{"start":{"line":75,"column":26},"ann":"{VV : forall a .\n      x1:a -> x2:(Trees.Trees.BST {VV : a | x1 < VV}) -> {v : (Trees.Trees.MinPair a) | mElt v == x1\n                                                                                        && rest v == x2} | VV == MP}","ident":"Trees.Trees.MP","stop":{"line":75,"column":32}},{"start":{"line":75,"column":29},"ann":"{VV : a | VV == k}","ident":"k","stop":{"line":75,"column":30}},{"start":{"line":75,"column":31},"ann":"{v : (Trees.Trees.BST {VV : a | k < VV}) | v == r}","ident":"r","stop":{"line":75,"column":32}},{"start":{"line":76,"column":26},"ann":"{VV : forall a .\n      x1:a -> x2:(Trees.Trees.BST {VV : a | x1 < VV}) -> {v : (Trees.Trees.MinPair a) | mElt v == x1\n                                                                                        && rest v == x2} | VV == MP}","ident":"Trees.Trees.MP","stop":{"line":76,"column":45}},{"start":{"line":76,"column":29},"ann":"{VV : a | VV == k'\n          && VV /= k\n          && VV < k\n          && VV <= k}","ident":"k'","stop":{"line":76,"column":31}},{"start":{"line":76,"column":32},"ann":"{v : (Trees.Trees.BST a) | nonEmpty v\n                           && left v == l'\n                           && right v == r\n                           && root v == k}","ident":"lq_anf$##7205759403792806773","stop":{"line":76,"column":45}},{"start":{"line":76,"column":38},"ann":"{VV : a | VV == k}","ident":"k","stop":{"line":76,"column":39}},{"start":{"line":76,"column":40},"ann":"{v : (Trees.Trees.BST {VV : a | VV /= k\n                                && VV /= k'\n                                && VV > k'\n                                && VV >= k'\n                                && VV < k\n                                && k' < VV\n                                && VV <= k\n                                && k' <= VV}) | v == l'}","ident":"l'","stop":{"line":76,"column":42}},{"start":{"line":76,"column":43},"ann":"{v : (Trees.Trees.BST {VV : a | k < VV}) | v == r}","ident":"r","stop":{"line":76,"column":44}},{"start":{"line":78,"column":8},"ann":"{VV : a | VV /= k\n          && VV < k\n          && VV <= k}","ident":"k'","stop":{"line":78,"column":10}},{"start":{"line":78,"column":11},"ann":"(Trees.Trees.BST {VV : a | VV /= k\n                           && VV /= k'\n                           && VV > k'\n                           && VV >= k'\n                           && VV < k\n                           && k' < VV\n                           && VV <= k\n                           && k' <= VV})","ident":"l'","stop":{"line":78,"column":13}},{"start":{"line":78,"column":26},"ann":"forall a .\n{t : (Trees.Trees.BST a) | nonEmpty t} -> (Trees.Trees.MinPair a)","ident":"Trees.Trees.delMin","stop":{"line":78,"column":34}},{"start":{"line":78,"column":33},"ann":"(Trees.Trees.BST {VV : a | VV < k})","ident":"ds_d3oZ","stop":{"line":78,"column":34}},{"start":{"line":79,"column":26},"ann":"{VV : forall a . {v : [GHC.Types.Char] | false} -> a | VV == die}","ident":"Trees.Trees.die","stop":{"line":79,"column":59}},{"start":{"line":79,"column":30},"ann":"[GHC.Types.Char]","ident":"lq_anf$##7205759403792806771","stop":{"line":79,"column":59}},{"start":{"line":88,"column":1},"ann":"forall a .\nx1:a -> (Trees.Trees.IncList {VV : a | VV <= x1}) -> (Trees.Trees.IncList {VV : a | VV >= x1}) -> (Trees.Trees.IncList a)","ident":"Trees.Trees.join","stop":{"line":88,"column":5}},{"start":{"line":88,"column":6},"ann":"a","ident":"z","stop":{"line":88,"column":7}},{"start":{"line":88,"column":18},"ann":"(Trees.Trees.IncList {VV : a | VV >= z})","ident":"ys","stop":{"line":88,"column":20}},{"start":{"line":88,"column":23},"ann":"{VV : a | VV == z}","ident":"z","stop":{"line":88,"column":24}},{"start":{"line":88,"column":28},"ann":"{v : (Trees.Trees.IncList {VV : a | VV >= z}) | v == ys}","ident":"ys","stop":{"line":88,"column":30}},{"start":{"line":89,"column":23},"ann":"{VV : a | VV == x\n          && VV <= z}","ident":"x","stop":{"line":89,"column":24}},{"start":{"line":89,"column":28},"ann":"(Trees.Trees.IncList a)","ident":"lq_anf$##7205759403792806779","stop":{"line":89,"column":40}},{"start":{"line":89,"column":33},"ann":"{VV : a | VV == z}","ident":"z","stop":{"line":89,"column":34}},{"start":{"line":89,"column":35},"ann":"{v : (Trees.Trees.IncList {VV : a | VV <= z\n                                    && x <= VV}) | v == xs}","ident":"xs","stop":{"line":89,"column":37}},{"start":{"line":89,"column":38},"ann":"{v : (Trees.Trees.IncList {VV : a | VV >= z}) | v == ys}","ident":"ys","stop":{"line":89,"column":40}},{"start":{"line":115,"column":1},"ann":"forall a .\n(Ord<[]> a) =>\nx2:(Trees.Trees.SkewH a) -> (Trees.Trees.SkewH {VV : a | sk x2 <= VV})","ident":"Trees.Trees.refineSkew","stop":{"line":115,"column":11}},{"start":{"line":115,"column":27},"ann":"{VV : forall a .\n      x1:a -> x2:(Trees.Trees.SkewH {VV : a | x1 <= VV}) -> x3:(Trees.Trees.SkewH {VV : a | x1 <= VV}) -> {v : (Trees.Trees.SkewH a) | sLeft v == x2\n                                                                                                                                       && sRight v == x3\n                                                                                                                                       && sk v == x1} | VV == Skew}","ident":"Trees.Trees.Skew","stop":{"line":115,"column":39}},{"start":{"line":115,"column":33},"ann":"{VV : a | VV == a}","ident":"a","stop":{"line":115,"column":34}},{"start":{"line":115,"column":35},"ann":"{v : (Trees.Trees.SkewH {VV : a | a <= VV}) | v == b}","ident":"b","stop":{"line":115,"column":36}},{"start":{"line":115,"column":37},"ann":"{v : (Trees.Trees.SkewH {VV : a | a <= VV}) | v == c}","ident":"c","stop":{"line":115,"column":38}},{"start":{"line":116,"column":20},"ann":"{VV : forall a . (Trees.Trees.SkewH a) | VV == Empty}","ident":"_","stop":{"line":116,"column":25}},{"start":{"line":120,"column":1},"ann":"forall a .\n(Ord<[]> a) =>\n(Trees.Trees.SkewH a) -> (Trees.Trees.SkewH a) -> (Trees.Trees.SkewH a)","ident":"Trees.Trees.joinSk","stop":{"line":120,"column":7}},{"start":{"line":120,"column":22},"ann":"{VV : forall a . (Trees.Trees.SkewH a) | VV == Empty}","ident":"_","stop":{"line":120,"column":27}},{"start":{"line":121,"column":19},"ann":"(Trees.Trees.SkewH a)","ident":"ds_d3mQ","stop":{"line":121,"column":21}},{"start":{"line":122,"column":26},"ann":"(Trees.Trees.SkewH a)","ident":"ds_d3mP","stop":{"line":122,"column":28}},{"start":{"line":124,"column":5},"ann":"a","ident":"ds_d3nY","stop":{"line":124,"column":7}},{"start":{"line":124,"column":11},"ann":"{VV : a | VV == k2}","ident":"k2","stop":{"line":124,"column":13}},{"start":{"line":124,"column":16},"ann":"{VV : forall a .\n      x1:a -> x2:(Trees.Trees.SkewH {VV : a | x1 <= VV}) -> x3:(Trees.Trees.SkewH {VV : a | x1 <= VV}) -> {v : (Trees.Trees.SkewH a) | sLeft v == x2\n                                                                                                                                       && sRight v == x3\n                                                                                                                                       && sk v == x1} | VV == Skew}","ident":"Trees.Trees.Skew","stop":{"line":124,"column":56}},{"start":{"line":124,"column":21},"ann":"a","ident":"ds_d3nY","stop":{"line":124,"column":23}},{"start":{"line":124,"column":24},"ann":"(Trees.Trees.SkewH a)","ident":"lq_anf$##7205759403792806790","stop":{"line":124,"column":52}},{"start":{"line":124,"column":32},"ann":"(Trees.Trees.SkewH a)","ident":"ds_d3o0","stop":{"line":124,"column":35}},{"start":{"line":124,"column":36},"ann":"(Trees.Trees.SkewH a)","ident":"lq_anf$##7205759403792806789","stop":{"line":124,"column":51}},{"start":{"line":124,"column":48},"ann":"(Trees.Trees.SkewH a)","ident":"ds_d3mQ","stop":{"line":124,"column":50}},{"start":{"line":124,"column":53},"ann":"(Trees.Trees.SkewH a)","ident":"ds_d3nZ","stop":{"line":124,"column":56}},{"start":{"line":125,"column":17},"ann":"forall a .\n(Ord<[]> a) =>\n(Trees.Trees.SkewH a) -> (Trees.Trees.SkewH a) -> (Trees.Trees.SkewH a)","ident":"Trees.Trees.joinSk","stop":{"line":125,"column":29}},{"start":{"line":125,"column":24},"ann":"(Trees.Trees.SkewH a)","ident":"ds_d3mQ","stop":{"line":125,"column":26}},{"start":{"line":125,"column":27},"ann":"(Trees.Trees.SkewH a)","ident":"ds_d3mP","stop":{"line":125,"column":29}}],"errors":[]}