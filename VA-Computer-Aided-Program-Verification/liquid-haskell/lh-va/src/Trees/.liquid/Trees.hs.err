{"o_vars":null,"o_types":[[{"spanInfo":{"startLine":89,"endLine":89,"endCol":40,"startCol":23,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["Trees.Trees.:<","{VV : forall a .\n      x1:a -> x2:(Trees.Trees.IncList {VV : a | x1 <= VV}) -> {v : (Trees.Trees.IncList a) | hd v == x1\n                                                                                             && tl v == x2} | VV == :<}"]]],[{"spanInfo":{"startLine":120,"endLine":120,"endCol":7,"startCol":1,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["Trees.Trees.joinSk","forall a .\n(Ord<[]> a) =>\n(Trees.Trees.SkewH a) -> (Trees.Trees.SkewH a) -> (Trees.Trees.SkewH a)"]]],[{"spanInfo":{"startLine":89,"endLine":89,"endCol":24,"startCol":23,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["x","{VV : a | VV == x\n          && VV <= z}"]]],[{"spanInfo":{"startLine":78,"endLine":78,"endCol":10,"startCol":8,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["k'","{VV : a | VV /= k\n          && VV < k\n          && VV <= k}"]]],[{"spanInfo":{"startLine":121,"endLine":121,"endCol":21,"startCol":19,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["ds_d3mQ","(Trees.Trees.SkewH a)"]]],[{"spanInfo":{"startLine":89,"endLine":89,"endCol":40,"startCol":28,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["lq_anf$##7205759403792806779","(Trees.Trees.IncList a)"]]],[{"spanInfo":{"startLine":89,"endLine":89,"endCol":37,"startCol":35,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["xs","{v : (Trees.Trees.IncList {VV : a | VV <= z\n                                    && x <= VV}) | v == xs}"]]],[{"spanInfo":{"startLine":88,"endLine":88,"endCol":5,"startCol":1,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["Trees.Trees.join","forall a .\nx1:a -> (Trees.Trees.IncList {VV : a | VV <= x1}) -> (Trees.Trees.IncList {VV : a | VV >= x1}) -> (Trees.Trees.IncList a)"]]],[{"spanInfo":{"startLine":124,"endLine":124,"endCol":50,"startCol":48,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["ds_d3mQ","(Trees.Trees.SkewH a)"]]],[{"spanInfo":{"startLine":124,"endLine":124,"endCol":13,"startCol":5,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["lq_anf$##7205759403792806787","GHC.Types.Bool"]]],[{"spanInfo":{"startLine":76,"endLine":76,"endCol":42,"startCol":40,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["l'","{v : (Trees.Trees.BST {VV : a | VV /= k\n                                && VV /= k'\n                                && VV > k'\n                                && VV >= k'\n                                && VV < k\n                                && k' < VV\n                                && VV <= k\n                                && k' <= VV}) | v == l'}"]]],[{"spanInfo":{"startLine":79,"endLine":79,"endCol":59,"startCol":26,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["Trees.Trees.die","{VV : forall a . {v : [GHC.Types.Char] | false} -> a | VV == die}"]]],[{"spanInfo":{"startLine":89,"endLine":89,"endCol":40,"startCol":38,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["ys","{v : (Trees.Trees.IncList {VV : a | VV >= z}) | v == ys}"]]],[{"spanInfo":{"startLine":124,"endLine":124,"endCol":35,"startCol":32,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["ds_d3o0","(Trees.Trees.SkewH a)"]]],[{"spanInfo":{"startLine":76,"endLine":76,"endCol":45,"startCol":26,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["Trees.Trees.MP","{VV : forall a .\n      x1:a -> x2:(Trees.Trees.BST {VV : a | x1 < VV}) -> {v : (Trees.Trees.MinPair a) | mElt v == x1\n                                                                                        && rest v == x2} | VV == MP}"]]],[{"spanInfo":{"startLine":24,"endLine":24,"endCol":8,"startCol":5,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["msg","{VV : [GHC.Types.Char] | false}"]]],[{"spanInfo":{"startLine":24,"endLine":24,"endCol":20,"startCol":17,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["msg","{v : [GHC.Types.Char] | false}"]]],[{"spanInfo":{"startLine":24,"endLine":24,"endCol":4,"startCol":1,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["Trees.Trees.die","forall a . {VV : [GHC.Types.Char] | false} -> a"]]],[{"spanInfo":{"startLine":1,"endLine":1,"endCol":1,"startCol":1,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["Trees.Trees.$trModule","GHC.Types.Module"]]],[{"spanInfo":{"startLine":24,"endLine":24,"endCol":20,"startCol":1,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["$dIP_a3lr","{v : (GHC.Classes.IP [GHC.Types.Char] GHC.Stack.Types.CallStack) | v == $dIP_a3lr}"]]],[{"spanInfo":{"startLine":122,"endLine":122,"endCol":28,"startCol":26,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["ds_d3mP","(Trees.Trees.SkewH a)"]]],[{"spanInfo":{"startLine":120,"endLine":120,"endCol":27,"startCol":22,"filename":"src/Trees/Trees.hs"},"realSpan":true},[[null,"{VV : forall a . (Trees.Trees.SkewH a) | VV == Empty}"]]],[{"spanInfo":{"startLine":115,"endLine":115,"endCol":39,"startCol":27,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["Trees.Trees.Skew","{VV : forall a .\n      x1:a -> x2:(Trees.Trees.SkewH {VV : a | x1 <= VV}) -> x3:(Trees.Trees.SkewH {VV : a | x1 <= VV}) -> {v : (Trees.Trees.SkewH a) | sLeft v == x2\n                                                                                                                                       && sRight v == x3\n                                                                                                                                       && sk v == x1} | VV == Skew}"]]],[{"spanInfo":{"startLine":76,"endLine":76,"endCol":39,"startCol":38,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["k","{VV : a | VV == k}"]]],[{"spanInfo":{"startLine":125,"endLine":125,"endCol":29,"startCol":27,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["ds_d3mP","(Trees.Trees.SkewH a)"]]],[{"spanInfo":{"startLine":75,"endLine":75,"endCol":30,"startCol":29,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["k","{VV : a | VV == k}"]]],[{"spanInfo":{"startLine":115,"endLine":115,"endCol":34,"startCol":33,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["a","{VV : a | VV == a}"]]],[{"spanInfo":{"startLine":78,"endLine":78,"endCol":34,"startCol":26,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["Trees.Trees.delMin","forall a .\n{t : (Trees.Trees.BST a) | nonEmpty t} -> (Trees.Trees.MinPair a)"]]],[{"spanInfo":{"startLine":78,"endLine":78,"endCol":34,"startCol":33,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["ds_d3oZ","(Trees.Trees.BST {VV : a | VV < k})"]]],[{"spanInfo":{"startLine":124,"endLine":124,"endCol":56,"startCol":53,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["ds_d3nZ","(Trees.Trees.SkewH a)"]]],[{"spanInfo":{"startLine":75,"endLine":79,"endCol":59,"startCol":1,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["lq_anf$##7205759403792806772","(Trees.Trees.BST {VV : a | VV < k})"]]],[{"spanInfo":{"startLine":76,"endLine":76,"endCol":31,"startCol":29,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["k'","{VV : a | VV == k'\n          && VV /= k\n          && VV < k\n          && VV <= k}"]]],[{"spanInfo":{"startLine":89,"endLine":89,"endCol":34,"startCol":33,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["z","{VV : a | VV == z}"]]],[{"spanInfo":{"startLine":124,"endLine":124,"endCol":23,"startCol":21,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["ds_d3nY","a"]]],[{"spanInfo":{"startLine":124,"endLine":124,"endCol":56,"startCol":16,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["Trees.Trees.Skew","{VV : forall a .\n      x1:a -> x2:(Trees.Trees.SkewH {VV : a | x1 <= VV}) -> x3:(Trees.Trees.SkewH {VV : a | x1 <= VV}) -> {v : (Trees.Trees.SkewH a) | sLeft v == x2\n                                                                                                                                       && sRight v == x3\n                                                                                                                                       && sk v == x1} | VV == Skew}"]]],[{"spanInfo":{"startLine":124,"endLine":124,"endCol":7,"startCol":5,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["ds_d3nY","a"]]],[{"spanInfo":{"startLine":71,"endLine":71,"endCol":9,"startCol":1,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["Trees.Trees.nonEmpty","forall a .\nx1:(Trees.Trees.BST a) -> {VV : GHC.Types.Bool | VV <=> nonEmpty x1}"]]],[{"spanInfo":{"startLine":88,"endLine":88,"endCol":7,"startCol":6,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["z","a"]]],[{"spanInfo":{"startLine":88,"endLine":88,"endCol":24,"startCol":23,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["z","{VV : a | VV == z}"]]],[{"spanInfo":{"startLine":120,"endLine":125,"endCol":29,"startCol":1,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["lq_anf$##7205759403792806788","GHC.Types.Bool"]]],[{"spanInfo":{"startLine":78,"endLine":78,"endCol":13,"startCol":11,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["l'","(Trees.Trees.BST {VV : a | VV /= k\n                           && VV /= k'\n                           && VV > k'\n                           && VV >= k'\n                           && VV < k\n                           && k' < VV\n                           && VV <= k\n                           && k' <= VV})"]]],[{"spanInfo":{"startLine":72,"endLine":72,"endCol":31,"startCol":27,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["GHC.Types.True","{v : GHC.Types.Bool | v\n                      && v == True}"]]],[{"spanInfo":{"startLine":125,"endLine":125,"endCol":26,"startCol":24,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["ds_d3mQ","(Trees.Trees.SkewH a)"]]],[{"spanInfo":{"startLine":75,"endLine":75,"endCol":7,"startCol":1,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["Trees.Trees.delMin","forall a .\n{t : (Trees.Trees.BST a) | nonEmpty t} -> (Trees.Trees.MinPair a)"]]],[{"spanInfo":{"startLine":125,"endLine":125,"endCol":29,"startCol":17,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["Trees.Trees.joinSk","forall a .\n(Ord<[]> a) =>\n(Trees.Trees.SkewH a) -> (Trees.Trees.SkewH a) -> (Trees.Trees.SkewH a)"]]],[{"spanInfo":{"startLine":124,"endLine":124,"endCol":52,"startCol":24,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["lq_anf$##7205759403792806790","(Trees.Trees.SkewH a)"]]],[{"spanInfo":{"startLine":124,"endLine":124,"endCol":13,"startCol":11,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["k2","{VV : a | VV == k2}"]]],[{"spanInfo":{"startLine":75,"endLine":75,"endCol":32,"startCol":26,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["Trees.Trees.MP","{VV : forall a .\n      x1:a -> x2:(Trees.Trees.BST {VV : a | x1 < VV}) -> {v : (Trees.Trees.MinPair a) | mElt v == x1\n                                                                                        && rest v == x2} | VV == MP}"]]],[{"spanInfo":{"startLine":76,"endLine":76,"endCol":45,"startCol":32,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["lq_anf$##7205759403792806773","{v : (Trees.Trees.BST a) | nonEmpty v\n                           && left v == l'\n                           && right v == r\n                           && root v == k}"]]],[{"spanInfo":{"startLine":76,"endLine":76,"endCol":44,"startCol":43,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["r","{v : (Trees.Trees.BST {VV : a | k < VV}) | v == r}"]]],[{"spanInfo":{"startLine":115,"endLine":116,"endCol":25,"startCol":1,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["lq_anf$##7205759403792806780","(Trees.Trees.SkewH a)"]]],[{"spanInfo":{"startLine":116,"endLine":116,"endCol":25,"startCol":20,"filename":"src/Trees/Trees.hs"},"realSpan":true},[[null,"{VV : forall a . (Trees.Trees.SkewH a) | VV == Empty}"]]],[{"spanInfo":{"startLine":115,"endLine":115,"endCol":38,"startCol":37,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["c","{v : (Trees.Trees.SkewH {VV : a | a <= VV}) | v == c}"]]],[{"spanInfo":{"startLine":75,"endLine":75,"endCol":32,"startCol":31,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["r","{v : (Trees.Trees.BST {VV : a | k < VV}) | v == r}"]]],[{"spanInfo":{"startLine":79,"endLine":79,"endCol":59,"startCol":30,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["lq_anf$##7205759403792806771","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":88,"endLine":88,"endCol":20,"startCol":18,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["ys","(Trees.Trees.IncList {VV : a | VV >= z})"]]],[{"spanInfo":{"startLine":88,"endLine":88,"endCol":30,"startCol":28,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["ys","{v : (Trees.Trees.IncList {VV : a | VV >= z}) | v == ys}"]]],[{"spanInfo":{"startLine":115,"endLine":115,"endCol":36,"startCol":35,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["b","{v : (Trees.Trees.SkewH {VV : a | a <= VV}) | v == b}"]]],[{"spanInfo":{"startLine":71,"endLine":71,"endCol":32,"startCol":27,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["GHC.Types.False","{v : GHC.Types.Bool | not v\n                      && v == False}"]]],[{"spanInfo":{"startLine":88,"endLine":89,"endCol":40,"startCol":1,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["lq_anf$##7205759403792806778","(Trees.Trees.IncList {VV : a | VV <= z})"]]],[{"spanInfo":{"startLine":71,"endLine":72,"endCol":31,"startCol":1,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["lq_anf$##7205759403792806777","(Trees.Trees.BST a)"]]],[{"spanInfo":{"startLine":115,"endLine":115,"endCol":11,"startCol":1,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["Trees.Trees.refineSkew","forall a .\n(Ord<[]> a) =>\nx2:(Trees.Trees.SkewH a) -> (Trees.Trees.SkewH {VV : a | sk x2 <= VV})"]]],[{"spanInfo":{"startLine":124,"endLine":124,"endCol":51,"startCol":36,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["lq_anf$##7205759403792806789","(Trees.Trees.SkewH a)"]]],[{"spanInfo":{"startLine":88,"endLine":88,"endCol":30,"startCol":23,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["Trees.Trees.:<","{VV : forall a .\n      x1:a -> x2:(Trees.Trees.IncList {VV : a | x1 <= VV}) -> {v : (Trees.Trees.IncList a) | hd v == x1\n                                                                                             && tl v == x2} | VV == :<}"]]]],"o_templs":[[{"spanInfo":{"startLine":89,"endLine":89,"endCol":40,"startCol":23,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["Trees.Trees.:<","{VV : forall a .\n      lq_tmp$x##1340:a -> lq_tmp$x##1341:(Trees.Trees.IncList {lq_tmp$x##1334 : a | lq_tmp$x##1340 <= lq_tmp$x##1334}) -> {lq_tmp$x##1337 : (Trees.Trees.IncList a) | Trees.Trees.hd lq_tmp$x##1337 == lq_tmp$x##1340\n                                                                                                                                                                      && Trees.Trees.tl lq_tmp$x##1337 == lq_tmp$x##1341} | VV == Trees.Trees.:<}"]]],[{"spanInfo":{"startLine":120,"endLine":120,"endCol":7,"startCol":1,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["Trees.Trees.joinSk","forall t .\n(Ord<[]> t) =>\nlq_tmp$x##1425:(Trees.Trees.SkewH t) -> lq_tmp$x##1426:(Trees.Trees.SkewH t) -> (Trees.Trees.SkewH t)"]]],[{"spanInfo":{"startLine":89,"endLine":89,"endCol":24,"startCol":23,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["x","{lq_tmp$x##1345 : a | lq_tmp$x##1345 == x##a3i7\n                      && lq_tmp$x##1345 <= z##a3i4}"]]],[{"spanInfo":{"startLine":78,"endLine":78,"endCol":10,"startCol":8,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["k'","{VV##1118 : a | $k_##1119}"]]],[{"spanInfo":{"startLine":121,"endLine":121,"endCol":21,"startCol":19,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["ds_d3mQ","{lq_tmp$x##1489 : (Trees.Trees.SkewH t) | lq_tmp$x##1489 == ds_d3mQ}"]]],[{"spanInfo":{"startLine":89,"endLine":89,"endCol":40,"startCol":28,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["lq_anf$##7205759403792806779","(Trees.Trees.IncList {lq_tmp$x##1326 : a | $k_##1325[VV##1324:=lq_tmp$x##1326][lq_tmp$x##1321:=z##a3i4][lq_tmp$x##1322:=xs##a3i8][lq_tmp$x##1323:=ys##a3i5]})"]]],[{"spanInfo":{"startLine":89,"endLine":89,"endCol":37,"startCol":35,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["xs","{lq_tmp$x##1329 : (Trees.Trees.IncList {lq_tmp$x##1328 : a | lq_tmp$x##1328 <= z##a3i4\n                                                             && x##a3i7 <= lq_tmp$x##1328}) | lq_tmp$x##1329 == xs##a3i8}"]]],[{"spanInfo":{"startLine":88,"endLine":88,"endCol":5,"startCol":1,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["Trees.Trees.join","forall a .\nlq_tmp$x##1256:a -> lq_tmp$x##1257:(Trees.Trees.IncList {VV : a | VV <= lq_tmp$x##1256}) -> lq_tmp$x##1258:(Trees.Trees.IncList {VV : a | VV >= lq_tmp$x##1256}) -> (Trees.Trees.IncList a)"]]],[{"spanInfo":{"startLine":124,"endLine":124,"endCol":50,"startCol":48,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["ds_d3mQ","{lq_tmp$x##1633 : (Trees.Trees.SkewH t) | lq_tmp$x##1633 == ds_d3mQ}"]]],[{"spanInfo":{"startLine":124,"endLine":124,"endCol":13,"startCol":5,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["lq_anf$##7205759403792806787","{lq_tmp$x##1567 : GHC.Types.Bool | lq_tmp$x##1567 <=> ds_d3nY <= k2##a3ik}"]]],[{"spanInfo":{"startLine":76,"endLine":76,"endCol":42,"startCol":40,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["l'","{lq_tmp$x##1191 : (Trees.Trees.BST {lq_tmp$x##1190 : a | $k_##1145[VV##1144:=lq_tmp$x##1190][VV##1146:=lq_tmp$x##1191]}) | lq_tmp$x##1191 == l'##a3lT\n                                                                                                                           && $k_##1147[VV##1146:=lq_tmp$x##1191]}"]]],[{"spanInfo":{"startLine":79,"endLine":79,"endCol":59,"startCol":26,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["Trees.Trees.die","{VV : forall a .\n      lq_tmp$x##1007:{lq_tmp$x##1003 : [GHC.Types.Char] | false} -> a | VV == Trees.Trees.die}"]]],[{"spanInfo":{"startLine":89,"endLine":89,"endCol":40,"startCol":38,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["ys","{lq_tmp$x##1331 : (Trees.Trees.IncList {lq_tmp$x##1330 : a | lq_tmp$x##1330 >= z##a3i4}) | lq_tmp$x##1331 == ys##a3i5}"]]],[{"spanInfo":{"startLine":124,"endLine":124,"endCol":35,"startCol":32,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["ds_d3o0","{lq_tmp$x##1655 : (Trees.Trees.SkewH {lq_tmp$x##1654 : t | ds_d3nY <= lq_tmp$x##1654}) | lq_tmp$x##1655 == ds_d3o0}"]]],[{"spanInfo":{"startLine":76,"endLine":76,"endCol":45,"startCol":26,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["Trees.Trees.MP","{VV : forall a .\n      lq_tmp$x##1202:a -> lq_tmp$x##1203:(Trees.Trees.BST {lq_tmp$x##1196 : a | lq_tmp$x##1202 < lq_tmp$x##1196}) -> {lq_tmp$x##1199 : (Trees.Trees.MinPair a) | Trees.Trees.mElt lq_tmp$x##1199 == lq_tmp$x##1202\n                                                                                                                                                                 && Trees.Trees.rest lq_tmp$x##1199 == lq_tmp$x##1203} | VV == Trees.Trees.MP}"]]],[{"spanInfo":{"startLine":24,"endLine":24,"endCol":8,"startCol":5,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["msg","{VV##697 : [{VV##692 : GHC.Types.Char | $k_##693}]<\\lq_tmp$x##694 VV -> {VV##695 : GHC.Types.Char | $k_##696}> | $k_##698}"]]],[{"spanInfo":{"startLine":24,"endLine":24,"endCol":20,"startCol":17,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["msg","{lq_tmp$x##968 : [{lq_tmp$x##965 : GHC.Types.Char | $k_##693[VV##692:=lq_tmp$x##965][VV##697:=lq_tmp$x##968]}]<\\lq_tmp$x##969 VV -> {lq_tmp$x##967 : GHC.Types.Char | $k_##696[VV##695:=lq_tmp$x##967][VV##697:=lq_tmp$x##968][lq_tmp$x##694:=lq_tmp$x##969][lq_tmp$x##966:=lq_tmp$x##969]}> | lq_tmp$x##968 == msg##a3hV\n                                                                                                                                                                                                                                                                                               && len lq_tmp$x##968 >= 0\n                                                                                                                                                                                                                                                                                               && $k_##698[VV##697:=lq_tmp$x##968]}"]]],[{"spanInfo":{"startLine":24,"endLine":24,"endCol":4,"startCol":1,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["Trees.Trees.die","forall a . lq_tmp$x##689:{VV##0 : [GHC.Types.Char] | false} -> a"]]],[{"spanInfo":{"startLine":1,"endLine":1,"endCol":1,"startCol":1,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["Trees.Trees.$trModule","{VV##1683 : GHC.Types.Module | $k_##1684}"]]],[{"spanInfo":{"startLine":24,"endLine":24,"endCol":20,"startCol":1,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["$dIP_a3lr","{lq_tmp$x##963 : (GHC.Classes.IP [GHC.Types.Char] GHC.Stack.Types.CallStack) | lq_tmp$x##963 == $dIP_a3lr}"]]],[{"spanInfo":{"startLine":122,"endLine":122,"endCol":28,"startCol":26,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["ds_d3mP","{lq_tmp$x##1532 : (Trees.Trees.SkewH t) | lq_tmp$x##1532 == ds_d3mP}"]]],[{"spanInfo":{"startLine":120,"endLine":120,"endCol":27,"startCol":22,"filename":"src/Trees/Trees.hs"},"realSpan":true},[[null,"{VV : forall t . (Trees.Trees.SkewH t) | VV == Trees.Trees.Empty}"]]],[{"spanInfo":{"startLine":115,"endLine":115,"endCol":39,"startCol":27,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["Trees.Trees.Skew","{VV : forall t .\n      lq_tmp$x##1411:t -> lq_tmp$x##1412:(Trees.Trees.SkewH {lq_tmp$x##1402 : t | lq_tmp$x##1411 <= lq_tmp$x##1402}) -> lq_tmp$x##1413:(Trees.Trees.SkewH {lq_tmp$x##1404 : t | lq_tmp$x##1411 <= lq_tmp$x##1404}) -> {lq_tmp$x##1407 : (Trees.Trees.SkewH t) | Trees.Trees.sLeft lq_tmp$x##1407 == lq_tmp$x##1412\n                                                                                                                                                                                                                                                                && Trees.Trees.sRight lq_tmp$x##1407 == lq_tmp$x##1413\n                                                                                                                                                                                                                                                                && Trees.Trees.sk lq_tmp$x##1407 == lq_tmp$x##1411} | VV == Trees.Trees.Skew}"]]],[{"spanInfo":{"startLine":76,"endLine":76,"endCol":39,"startCol":38,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["k","{lq_tmp$x##1189 : a | lq_tmp$x##1189 == k##a3hX}"]]],[{"spanInfo":{"startLine":125,"endLine":125,"endCol":29,"startCol":27,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["ds_d3mP","{lq_tmp$x##1611 : (Trees.Trees.SkewH t) | lq_tmp$x##1611 == ds_d3mP}"]]],[{"spanInfo":{"startLine":75,"endLine":75,"endCol":30,"startCol":29,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["k","{lq_tmp$x##1073 : a | lq_tmp$x##1073 == k##a3hX}"]]],[{"spanInfo":{"startLine":115,"endLine":115,"endCol":34,"startCol":33,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["a","{lq_tmp$x##1417 : t | lq_tmp$x##1417 == a##a3ia}"]]],[{"spanInfo":{"startLine":78,"endLine":78,"endCol":34,"startCol":26,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["Trees.Trees.delMin","forall a .\nlq_tmp$x##974:{t : (Trees.Trees.BST a) | Trees.Trees.nonEmpty t} -> (Trees.Trees.MinPair a)"]]],[{"spanInfo":{"startLine":78,"endLine":78,"endCol":34,"startCol":33,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["ds_d3oZ","{lq_tmp$x##1116 : (Trees.Trees.BST {lq_tmp$x##1115 : a | lq_tmp$x##1115 < k##a3hX}) | lq_tmp$x##1116 == ds_d3oZ}"]]],[{"spanInfo":{"startLine":124,"endLine":124,"endCol":56,"startCol":53,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["ds_d3nZ","{lq_tmp$x##1679 : (Trees.Trees.SkewH {lq_tmp$x##1678 : t | ds_d3nY <= lq_tmp$x##1678}) | lq_tmp$x##1679 == ds_d3nZ}"]]],[{"spanInfo":{"startLine":75,"endLine":79,"endCol":59,"startCol":1,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["lq_anf$##7205759403792806772","{lq_tmp$x##1051 : (Trees.Trees.BST {lq_tmp$x##1050 : a | lq_tmp$x##1050 < k##a3hX}) | lq_tmp$x##1051 == ds_d3oZ}"]]],[{"spanInfo":{"startLine":76,"endLine":76,"endCol":31,"startCol":29,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["k'","{lq_tmp$x##1207 : a | lq_tmp$x##1207 == k'##a3lR\n                      && $k_##1119[VV##1118:=lq_tmp$x##1207]}"]]],[{"spanInfo":{"startLine":89,"endLine":89,"endCol":34,"startCol":33,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["z","{lq_tmp$x##1327 : a | lq_tmp$x##1327 == z##a3i4}"]]],[{"spanInfo":{"startLine":124,"endLine":124,"endCol":23,"startCol":21,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["ds_d3nY","{lq_tmp$x##1675 : t | lq_tmp$x##1675 == ds_d3nY}"]]],[{"spanInfo":{"startLine":124,"endLine":124,"endCol":56,"startCol":16,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["Trees.Trees.Skew","{VV : forall t .\n      lq_tmp$x##1669:t -> lq_tmp$x##1670:(Trees.Trees.SkewH {lq_tmp$x##1660 : t | lq_tmp$x##1669 <= lq_tmp$x##1660}) -> lq_tmp$x##1671:(Trees.Trees.SkewH {lq_tmp$x##1662 : t | lq_tmp$x##1669 <= lq_tmp$x##1662}) -> {lq_tmp$x##1665 : (Trees.Trees.SkewH t) | Trees.Trees.sLeft lq_tmp$x##1665 == lq_tmp$x##1670\n                                                                                                                                                                                                                                                                && Trees.Trees.sRight lq_tmp$x##1665 == lq_tmp$x##1671\n                                                                                                                                                                                                                                                                && Trees.Trees.sk lq_tmp$x##1665 == lq_tmp$x##1669} | VV == Trees.Trees.Skew}"]]],[{"spanInfo":{"startLine":124,"endLine":124,"endCol":7,"startCol":5,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["ds_d3nY","{lq_tmp$x##1579 : t | lq_tmp$x##1579 == ds_d3nY}"]]],[{"spanInfo":{"startLine":71,"endLine":71,"endCol":9,"startCol":1,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["Trees.Trees.nonEmpty","forall a .\nlq_tmp$x##1210:(Trees.Trees.BST a) -> {VV : GHC.Types.Bool | VV <=> Trees.Trees.nonEmpty lq_tmp$x##1210}"]]],[{"spanInfo":{"startLine":88,"endLine":88,"endCol":7,"startCol":6,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["z","a"]]],[{"spanInfo":{"startLine":88,"endLine":88,"endCol":24,"startCol":23,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["z","{lq_tmp$x##1286 : a | lq_tmp$x##1286 == z##a3i4}"]]],[{"spanInfo":{"startLine":120,"endLine":125,"endCol":29,"startCol":1,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["lq_anf$##7205759403792806788","{lq_tmp$x##1582 : GHC.Types.Bool | (lq_tmp$x##1582 <=> ds_d3nY <= k2##a3ik)\n                                   && lq_tmp$x##1582 == lq_anf$##7205759403792806787##d3qH}"]]],[{"spanInfo":{"startLine":78,"endLine":78,"endCol":13,"startCol":11,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["l'","{VV##1146 : (Trees.Trees.BST {VV##1144 : a | $k_##1145}) | $k_##1147}"]]],[{"spanInfo":{"startLine":72,"endLine":72,"endCol":31,"startCol":27,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["GHC.Types.True","{lq_tmp$x##1254 : GHC.Types.Bool | lq_tmp$x##1254\n                                   && lq_tmp$x##1254 == GHC.Types.True}"]]],[{"spanInfo":{"startLine":125,"endLine":125,"endCol":26,"startCol":24,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["ds_d3mQ","{lq_tmp$x##1609 : (Trees.Trees.SkewH t) | lq_tmp$x##1609 == ds_d3mQ}"]]],[{"spanInfo":{"startLine":75,"endLine":75,"endCol":7,"startCol":1,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["Trees.Trees.delMin","forall a .\nlq_tmp$x##974:{t : (Trees.Trees.BST a) | Trees.Trees.nonEmpty t} -> (Trees.Trees.MinPair a)"]]],[{"spanInfo":{"startLine":125,"endLine":125,"endCol":29,"startCol":17,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["Trees.Trees.joinSk","forall t .\n(Ord<[]> t) =>\nlq_tmp$x##1425:(Trees.Trees.SkewH t) -> lq_tmp$x##1426:(Trees.Trees.SkewH t) -> (Trees.Trees.SkewH t)"]]],[{"spanInfo":{"startLine":124,"endLine":124,"endCol":52,"startCol":24,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["lq_anf$##7205759403792806790","(Trees.Trees.SkewH {lq_tmp$x##1651 : t | $k_##1650[VV##1649:=lq_tmp$x##1651][lq_tmp$x##1646:=fix$36$$36$dOrd_a3l1][lq_tmp$x##1647:=ds_d3o0][lq_tmp$x##1648:=lq_anf$##7205759403792806789##d3qJ]})"]]],[{"spanInfo":{"startLine":124,"endLine":124,"endCol":13,"startCol":11,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["k2","{lq_tmp$x##1580 : t | lq_tmp$x##1580 == k2##a3ik}"]]],[{"spanInfo":{"startLine":75,"endLine":75,"endCol":32,"startCol":26,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["Trees.Trees.MP","{VV : forall a .\n      lq_tmp$x##1068:a -> lq_tmp$x##1069:(Trees.Trees.BST {lq_tmp$x##1062 : a | lq_tmp$x##1068 < lq_tmp$x##1062}) -> {lq_tmp$x##1065 : (Trees.Trees.MinPair a) | Trees.Trees.mElt lq_tmp$x##1065 == lq_tmp$x##1068\n                                                                                                                                                                 && Trees.Trees.rest lq_tmp$x##1065 == lq_tmp$x##1069} | VV == Trees.Trees.MP}"]]],[{"spanInfo":{"startLine":76,"endLine":76,"endCol":45,"startCol":32,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["lq_anf$##7205759403792806773","{lq_tmp$x##1179 : (Trees.Trees.BST {lq_tmp$x##1188 : a | $k_##1187[VV##1186:=lq_tmp$x##1188][lq_tmp$x##1183:=k##a3hX][lq_tmp$x##1184:=l'##a3lT][lq_tmp$x##1185:=r##a3hY]}) | Trees.Trees.nonEmpty lq_tmp$x##1179\n                                                                                                                                                                             && Trees.Trees.left lq_tmp$x##1179 == l'##a3lT\n                                                                                                                                                                             && Trees.Trees.right lq_tmp$x##1179 == r##a3hY\n                                                                                                                                                                             && Trees.Trees.root lq_tmp$x##1179 == k##a3hX}"]]],[{"spanInfo":{"startLine":76,"endLine":76,"endCol":44,"startCol":43,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["r","{lq_tmp$x##1193 : (Trees.Trees.BST {lq_tmp$x##1192 : a | k##a3hX < lq_tmp$x##1192}) | lq_tmp$x##1193 == r##a3hY}"]]],[{"spanInfo":{"startLine":115,"endLine":116,"endCol":25,"startCol":1,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["lq_anf$##7205759403792806780","{lq_tmp$x##1356 : (Trees.Trees.SkewH t) | lq_tmp$x##1356 == ds_d3mz}"]]],[{"spanInfo":{"startLine":116,"endLine":116,"endCol":25,"startCol":20,"filename":"src/Trees/Trees.hs"},"realSpan":true},[[null,"{VV : forall t . (Trees.Trees.SkewH t) | VV == Trees.Trees.Empty}"]]],[{"spanInfo":{"startLine":115,"endLine":115,"endCol":38,"startCol":37,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["c","{lq_tmp$x##1421 : (Trees.Trees.SkewH {lq_tmp$x##1420 : t | a##a3ia <= lq_tmp$x##1420}) | lq_tmp$x##1421 == c##a3ic}"]]],[{"spanInfo":{"startLine":75,"endLine":75,"endCol":32,"startCol":31,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["r","{lq_tmp$x##1075 : (Trees.Trees.BST {lq_tmp$x##1074 : a | k##a3hX < lq_tmp$x##1074}) | lq_tmp$x##1075 == r##a3hY}"]]],[{"spanInfo":{"startLine":79,"endLine":79,"endCol":59,"startCol":30,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["lq_anf$##7205759403792806771","{lq_tmp$x##994 : [GHC.Types.Char] | len lq_tmp$x##994 == strLen lq_anf$##7205759403792806770##d3qq\n                                    && lq_tmp$x##994 ~~ lq_anf$##7205759403792806770##d3qq}"]]],[{"spanInfo":{"startLine":88,"endLine":88,"endCol":20,"startCol":18,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["ys","(Trees.Trees.IncList {VV : a | VV >= z##a3i4})"]]],[{"spanInfo":{"startLine":88,"endLine":88,"endCol":30,"startCol":28,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["ys","{lq_tmp$x##1288 : (Trees.Trees.IncList {lq_tmp$x##1287 : a | lq_tmp$x##1287 >= z##a3i4}) | lq_tmp$x##1288 == ys##a3i5}"]]],[{"spanInfo":{"startLine":115,"endLine":115,"endCol":36,"startCol":35,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["b","{lq_tmp$x##1419 : (Trees.Trees.SkewH {lq_tmp$x##1418 : t | a##a3ia <= lq_tmp$x##1418}) | lq_tmp$x##1419 == b##a3ib}"]]],[{"spanInfo":{"startLine":71,"endLine":71,"endCol":32,"startCol":27,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["GHC.Types.False","{lq_tmp$x##1223 : GHC.Types.Bool | not lq_tmp$x##1223\n                                   && lq_tmp$x##1223 == GHC.Types.False}"]]],[{"spanInfo":{"startLine":88,"endLine":89,"endCol":40,"startCol":1,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["lq_anf$##7205759403792806778","{lq_tmp$x##1264 : (Trees.Trees.IncList {lq_tmp$x##1263 : a | lq_tmp$x##1263 <= z##a3i4}) | lq_tmp$x##1264 == ds_d3o7}"]]],[{"spanInfo":{"startLine":71,"endLine":72,"endCol":31,"startCol":1,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["lq_anf$##7205759403792806777","{lq_tmp$x##1213 : (Trees.Trees.BST a) | lq_tmp$x##1213 == ds_d3oi}"]]],[{"spanInfo":{"startLine":115,"endLine":115,"endCol":11,"startCol":1,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["Trees.Trees.refineSkew","forall t .\n(Ord<[]> t) =>\nlq_tmp$x##1352:(Trees.Trees.SkewH t) -> (Trees.Trees.SkewH {VV : t | Trees.Trees.sk lq_tmp$x##1352 <= VV})"]]],[{"spanInfo":{"startLine":124,"endLine":124,"endCol":51,"startCol":36,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["lq_anf$##7205759403792806789","(Trees.Trees.SkewH {lq_tmp$x##1629 : t | Trees.Trees.sk ds_d3mQ <= lq_tmp$x##1629\n                                         && $k_##1628[VV##1627:=lq_tmp$x##1629][lq_tmp$x##1625:=fix$36$$36$dOrd_a3l1][lq_tmp$x##1626:=ds_d3mQ]})"]]],[{"spanInfo":{"startLine":88,"endLine":88,"endCol":30,"startCol":23,"filename":"src/Trees/Trees.hs"},"realSpan":true},[["Trees.Trees.:<","{VV : forall a .\n      lq_tmp$x##1281:a -> lq_tmp$x##1282:(Trees.Trees.IncList {lq_tmp$x##1275 : a | lq_tmp$x##1281 <= lq_tmp$x##1275}) -> {lq_tmp$x##1278 : (Trees.Trees.IncList a) | Trees.Trees.hd lq_tmp$x##1278 == lq_tmp$x##1281\n                                                                                                                                                                      && Trees.Trees.tl lq_tmp$x##1278 == lq_tmp$x##1282} | VV == Trees.Trees.:<}"]]]],"o_bots":[{"spanInfo":{"startLine":24,"endLine":24,"endCol":8,"startCol":5,"filename":"src/Trees/Trees.hs"},"realSpan":true},{"spanInfo":{"startLine":24,"endLine":24,"endCol":20,"startCol":17,"filename":"src/Trees/Trees.hs"},"realSpan":true}],"o_result":{"tag":"Safe","contents":{"numCstr":22,"numIter":25,"numBrkt":22,"numChck":239,"numVald":45}}}