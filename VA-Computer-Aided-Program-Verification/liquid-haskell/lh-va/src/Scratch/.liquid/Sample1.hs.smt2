(set-option :auto-config false)
(set-option :model true)
(set-option :model.partial false)

(set-option :smt.mbqi false)

(define-sort Str () Int)
(declare-fun strLen (Str) Int)
(declare-fun subString (Str Int Int) Str)
(declare-fun concatString (Str Str) Str)
(define-sort Elt () Int)
(define-sort LSet () (Array Elt Bool))
(define-fun smt_set_emp () LSet ((as const LSet) false))
(define-fun smt_set_sng ((x Elt)) LSet (store ((as const LSet) false) x true))
(define-fun smt_set_mem ((x Elt) (s LSet)) Bool (select s x))
(define-fun smt_set_add ((s LSet) (x Elt)) LSet (store s x true))
(define-fun smt_set_cup ((s1 LSet) (s2 LSet)) LSet ((_ map or) s1 s2))
(define-fun smt_set_cap ((s1 LSet) (s2 LSet)) LSet ((_ map and) s1 s2))
(define-fun smt_set_com ((s LSet)) LSet ((_ map not) s))
(define-fun smt_set_dif ((s1 LSet) (s2 LSet)) LSet (smt_set_cap s1 (smt_set_com s2)))
(define-fun smt_set_sub ((s1 LSet) (s2 LSet)) Bool (= smt_set_emp (smt_set_dif s1 s2)))
(define-sort Map () (Array Elt Elt))
(define-fun smt_map_sel ((m Map) (k Elt)) Elt (select m k))
(define-fun smt_map_sto ((m Map) (k Elt) (v Elt)) Map (store m k v))
(define-fun smt_map_cup ((m1 Map) (m2 Map)) Map ((_ map (+ (Elt Elt) Elt)) m1 m2))
(define-fun smt_map_def ((v Elt)) Map ((as const (Map)) v))
(define-fun bool_to_int ((b Bool)) Int (ite b 1 0))
(define-fun Z3_OP_MUL ((x Int) (y Int)) Int (* x y))
(define-fun Z3_OP_DIV ((x Int) (y Int)) Int (div x y))
(declare-fun VV$35$$35$F$35$$35$28 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804167$35$$35$d2Kr () Int)
(declare-fun GHC.Base.id () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792804201$35$$35$d2KZ$35$$35$k_$35$$35$1609 () Bool)
(declare-fun cast_as_int () Int)
(declare-fun VV$35$$35$F$35$$35$31 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804183$35$$35$d2KH () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804187$35$$35$d2KL () Int)
(declare-fun GHC.Real.rem () Int)
(declare-fun GHC.List.init () Int)
(declare-fun lq_tmp$36$x$35$$35$1381 () Int)
(declare-fun addrLen () Int)
(declare-fun lq_karg$36$k2$35$$35$a1Ra$35$$35$k_$35$$35$1587 () Int)
(declare-fun papp5 () Int)
(declare-fun GHC.List.iterate () Int)
(declare-fun VV$35$$35$F$35$$35$13 () Int)
(declare-fun x_Tuple21 () Int)
(declare-fun lq_karg$36$ds_d2IX$35$$35$k_$35$$35$1609 () Int)
(declare-fun VV$35$$35$F$35$$35$57 () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792804165$35$$35$d2Kp () Int)
(declare-fun GHC.Classes.$61$$61$ () Int)
(declare-fun GHC.Types.C$35$ () Int)
(declare-fun GHC.List.drop () Int)
(declare-fun lq_tmp$36$x$35$$35$1191 () Int)
(declare-fun VV$35$$35$F$35$$35$18 () Int)
(declare-fun ds_d2JK () Int)
(declare-fun fix$36$$36$dOrd_a1SJ () Int)
(declare-fun lit$36$src$47$Scratch$47$Sample1.hs$58$48$58$1$45$23$124$function$32$getKey () Str)
(declare-fun lq_karg$36$c$35$$35$a1R2$35$$35$k_$35$$35$1374 () Int)
(declare-fun VV$35$$35$F$35$$35$23 () Int)
(declare-fun Data.Foldable.length () Int)
(declare-fun x_Tuple33 () Int)
(declare-fun lq_tmp$36$x$35$$35$1247 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804176$35$$35$d2KA () Int)
(declare-fun lit$36$$39$Empty () Str)
(declare-fun GHC.Types.LT () Int)
(declare-fun GHC.List.replicate () Int)
(declare-fun GHC.List.zipWith () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792804194$35$$35$d2KS$35$$35$k_$35$$35$1587 () Int)
(declare-fun fix$36$$36$krep_a1TL () Int)
(declare-fun lq_karg$36$a$35$$35$a1R0$35$$35$k_$35$$35$1374 () Int)
(declare-fun lq_tmp$36$x$35$$35$725 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804201$35$$35$d2KZ () Bool)
(declare-fun GHC.Classes.$62$$61$ () Int)
(declare-fun lq_karg$36$ds_d2IV$35$$35$k_$35$$35$1587 () Int)
(declare-fun k$35$$35$a1QX () Int)
(declare-fun GHC.Num.fromInteger () Int)
(declare-fun papp3 () Int)
(declare-fun GHC.List.span () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804225$35$$35$d2Ln () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804186$35$$35$d2KK () Int)
(declare-fun GHC.Classes.$62$ () Int)
(declare-fun Scratch.Sample1.getKey () Int)
(declare-fun GHC.Types.False () Bool)
(declare-fun GHC.List.scanr1 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792804202$35$$35$d2L0$35$$35$k_$35$$35$1609 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804184$35$$35$d2KI () Int)
(declare-fun lq_karg$36$VV$35$$35$1327$35$$35$k_$35$$35$1328 () Int)
(declare-fun GHC.Types.$58$ () Int)
(declare-fun lq_tmp$36$x$35$$35$1131 () Int)
(declare-fun GHC.Real.div () Int)
(declare-fun GHC.List.scanl () Int)
(declare-fun lit$36$error () Str)
(declare-fun GHC.Tuple.$40$$44$$44$$41$ () Int)
(declare-fun papp4 () Int)
(declare-fun GHC.Types.Module () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804179$35$$35$d2KD () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804192$35$$35$d2KQ () Str)
(declare-fun GHC.List.zip () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804157$35$$35$d2Kh () Int)
(declare-fun lq_tmp$36$x$35$$35$1308 () Int)
(declare-fun lq_tmp$36$x$35$$35$1784 () Int)
(declare-fun fix$36$$36$dOrd_a1SP () Int)
(declare-fun VV$35$$35$F$35$$35$29 () Int)
(declare-fun GHC.Tuple.$40$$41$ () Int)
(declare-fun GHC.Types.I$35$ () Int)
(declare-fun GHC.Stack.Types.SrcLoc () Int)
(declare-fun GHC.Num.$36$fNumInt () Int)
(declare-fun GHC.CString.unpackCString$35$ () Int)
(declare-fun VV$35$$35$F$35$$35$30 () Str)
(declare-fun GHC.Types.KindRepFun () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804196$35$$35$d2KU () Int)
(declare-fun lq_karg$36$ds_d2IT$35$$35$k_$35$$35$1609 () Int)
(declare-fun GHC.Types.KindRepTYPE () Int)
(declare-fun GHC.List.dropWhile () Int)
(declare-fun fix$36$$36$krep_a1TK () Int)
(declare-fun lq_tmp$36$x$35$$35$1161 () Int)
(declare-fun lit$36$$39$Skew () Str)
(declare-fun autolen () Int)
(declare-fun Data.Foldable.null () Int)
(declare-fun ds_d2IW () Int)
(declare-fun lq_karg$36$Scratch.Sample1.algo$35$$35$k_$35$$35$1587 () Int)
(declare-fun GHC.Integer.Type.$36$WJn$35$ () Int)
(declare-fun GHC.Real.$94$ () Int)
(declare-fun ds_d2JL () Int)
(declare-fun head () Int)
(declare-fun GHC.Real.mod () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804181$35$$35$d2KF () Int)
(declare-fun lit$36$Scratch.Sample1 () Str)
(declare-fun VV$35$$35$F$35$$35$24 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804189$35$$35$d2KN () Int)
(declare-fun lq_tmp$36$x$35$$35$1184 () Int)
(declare-fun GHC.Types.$36$WKindRepTYPE () Int)
(declare-fun GHC.Real.divMod () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804149$35$$35$d2K9 () Str)
(declare-fun ds_d2Hu () Int)
(declare-fun Scratch.Sample1.sLeft () Int)
(declare-fun GHC.Integer.Type.Jn$35$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804178$35$$35$d2KC () Int)
(declare-fun lq_tmp$36$x$35$$35$1757 () Int)
(declare-fun GHC.Classes.compare () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804213$35$$35$d2Lb () Int)
(declare-fun Scratch.Sample1.sk () Int)
(declare-fun papp2 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792804200$35$$35$d2KY$35$$35$k_$35$$35$1587 () Bool)
(declare-fun GHC.Real.toInteger () Int)
(declare-fun GHC.Real.quotRem () Int)
(declare-fun Scratch.Sample1.algo () Int)
(declare-fun GHC.Stack.Types.EmptyCallStack () Int)
(declare-fun GHC.Types.krep$36$$42$Arr$42$ () Int)
(declare-fun GHC.Stack.Types.emptyCallStack () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792804200$35$$35$d2KY$35$$35$k_$35$$35$1609 () Bool)
(declare-fun GHC.List.reverse () Int)
(declare-fun GHC.Integer.Type.$36$WJp$35$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804166$35$$35$d2Kq () Int)
(declare-fun lq_tmp$36$x$35$$35$1154 () Int)
(declare-fun Scratch.Sample1.Empty () Int)
(declare-fun lq_tmp$36$x$35$$35$768 () Int)
(declare-fun Control.Exception.Base.patError () Int)
(declare-fun GHC.List.filter () Int)
(declare-fun msg$35$$35$a1QV () Str)
(declare-fun lq_karg$36$ds_d2Hu$35$$35$k_$35$$35$1328 () Int)
(declare-fun fromJust () Int)
(declare-fun GHC.Types.KindRepTyConApp () Int)
(declare-fun GHC.List.cycle () Int)
(declare-fun GHC.List.$33$$33$ () Int)
(declare-fun GHC.List.tail () Int)
(declare-fun papp7 () Int)
(declare-fun VV$35$$35$F$35$$35$11 () Int)
(declare-fun GHC.Classes.$47$$61$ () Int)
(declare-fun a$35$$35$a1QY () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792804199$35$$35$d2KX$35$$35$k_$35$$35$1587 () Int)
(declare-fun lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792804159$35$$35$d2Kj () Int)
(declare-fun ds_d2IV () Int)
(declare-fun lq_karg$36$ds_d2IU$35$$35$k_$35$$35$1609 () Int)
(declare-fun b$35$$35$a1QZ () Int)
(declare-fun GHC.List.break () Int)
(declare-fun GHC.Types.True () Bool)
(declare-fun lq_karg$36$ds_d2HL$35$$35$k_$35$$35$1609 () Int)
(declare-fun Scratch.Sample1.joinSk () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804207$35$$35$d2L5 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804155$35$$35$d2Kf () Str)
(declare-fun VV$35$$35$F$35$$35$25 () Int)
(declare-fun GHC.Types.$91$$93$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804198$35$$35$d2KW () Int)
(declare-fun GHC.List.splitAt () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804202$35$$35$d2L0 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804203$35$$35$d2L1 () Int)
(declare-fun Scratch.Sample1.isNonSkewEmpty () Int)
(declare-fun GHC.Base.$43$$43$ () Int)
(declare-fun Scratch.Sample1.Skew () Int)
(declare-fun GHC.Real.$58$$37$ () Int)
(declare-fun lq_tmp$36$x$35$$35$970 () Int)
(declare-fun lq_tmp$36$x$35$$35$886 () Int)
(declare-fun lq_tmp$36$x$35$$35$1124 () Int)
(declare-fun GHC.Tuple.$40$$44$$41$ () Int)
(declare-fun fix$36$$36$dOrd_a1T3 () Int)
(declare-fun fix$36$$36$krep_a1TJ () Int)
(declare-fun GHC.Real.quot () Int)
(declare-fun b$35$$35$a1R1 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804151$35$$35$d2Kb () Str)
(declare-fun GHC.Real.$47$ () Int)
(declare-fun lq_tmp$36$x$35$$35$726 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792804199$35$$35$d2KX$35$$35$k_$35$$35$1609 () Int)
(declare-fun fldList () Int)
(declare-fun lq_karg$36$VV$35$$35$1586$35$$35$k_$35$$35$1587 () Int)
(declare-fun GHC.Classes.$38$$38$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804161$35$$35$d2Kl () Int)
(declare-fun lq_karg$36$ds_d2IU$35$$35$k_$35$$35$1587 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804163$35$$35$d2Kn () Int)
(declare-fun GHC.Types.GT () Int)
(declare-fun GHC.Classes.C$58$IP () Int)
(declare-fun GHC.Classes.$124$$124$ () Int)
(declare-fun lq_tmp$36$x$35$$35$1064 () Int)
(declare-fun Data.Either.Left () Int)
(declare-fun GHC.List.last () Int)
(declare-fun lq_tmp$36$x$35$$35$762 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804169$35$$35$d2Kt () Int)
(declare-fun lq_karg$36$ds_d2HL$35$$35$k_$35$$35$1587 () Int)
(declare-fun lq_karg$36$VV$35$$35$1608$35$$35$k_$35$$35$1609 () Int)
(declare-fun GHC.Integer.Type.S$35$ () Int)
(declare-fun lq_tmp$36$x$35$$35$1640 () Int)
(declare-fun GHC.List.scanl1 () Int)
(declare-fun Data.Either.Right () Int)
(declare-fun lit$36$SkewH () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792804199$35$$35$d2KX () Int)
(declare-fun GHC.Num.$45$ () Int)
(declare-fun len () Int)
(declare-fun papp6 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804197$35$$35$d2KV () Int)
(declare-fun ds_d2IX () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804193$35$$35$d2KR () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804175$35$$35$d2Kz () Int)
(declare-fun GHC.Base.. () Int)
(declare-fun x_Tuple22 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804191$35$$35$d2KP () Int)
(declare-fun lq_karg$36$ds_d2Hu$35$$35$k_$35$$35$1374 () Int)
(declare-fun lq_karg$36$VV$35$$35$607$35$$35$k_$35$$35$608 () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792804182$35$$35$d2KG () Int)
(declare-fun VV$35$$35$F$35$$35$26 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804160$35$$35$d2Kk () Int)
(declare-fun GHC.Types.KindRepTypeLitS () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792804193$35$$35$d2KR$35$$35$k_$35$$35$1328 () Int)
(declare-fun GHC.Real.$36$W$58$$37$ () Int)
(declare-fun lq_tmp$36$x$35$$35$1639 () Int)
(declare-fun Scratch.Sample1.refineSkew () Int)
(declare-fun k2$35$$35$a1Ra () Int)
(declare-fun GHC.Real.fromRational () Int)
(declare-fun ds_d2Jn () Int)
(declare-fun isJust () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804164$35$$35$d2Ko () Int)
(declare-fun lq_karg$36$Scratch.Sample1.algo$35$$35$k_$35$$35$1374 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792804194$35$$35$d2KS$35$$35$k_$35$$35$1609 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804188$35$$35$d2KM () Int)
(declare-fun ds_d2IU () Int)
(declare-fun ds_d2HL () Int)
(declare-fun GHC.List.takeWhile () Int)
(declare-fun GHC.Types.TrNameD () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804168$35$$35$d2Ks () Int)
(declare-fun lq_karg$36$VV$35$$35$1373$35$$35$k_$35$$35$1374 () Int)
(declare-fun lq_karg$36$ds_d2IV$35$$35$k_$35$$35$1609 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804180$35$$35$d2KE () Int)
(declare-fun lq_karg$36$ds_d2IT$35$$35$k_$35$$35$1587 () Int)
(declare-fun lit$36$LH$45$verificacion$45$asistida$45$0.1.0.0$45$B0H5GdfJzuc2jwReQRD3tY () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792804153$35$$35$d2Kd () Str)
(declare-fun GHC.Types.KindRepVar () Int)
(declare-fun GHC.Stack.Types.pushCallStack () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804200$35$$35$d2KY () Bool)
(declare-fun GHC.Types.KindRepTypeLitD () Int)
(declare-fun x_Tuple31 () Int)
(declare-fun lq_tmp$36$x$35$$35$1047 () Int)
(declare-fun GHC.Integer.Type.Jp$35$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804177$35$$35$d2KB () Int)
(declare-fun lq_karg$36$b$35$$35$a1R1$35$$35$k_$35$$35$1374 () Int)
(declare-fun lq_tmp$36$x$35$$35$1740 () Int)
(declare-fun lq_tmp$36$x$35$$35$1641 () Int)
(declare-fun GHC.IO.Exception.IOError () Int)
(declare-fun lq_tmp$36$x$35$$35$727 () Int)
(declare-fun GHC.List.take () Int)
(declare-fun fix$36$$36$dOrd_a1T7 () Int)
(declare-fun GHC.Stack.Types.PushCallStack () Int)
(declare-fun GHC.Classes.$60$$61$ () Int)
(declare-fun GHC.Types.TrNameS () Int)
(declare-fun GHC.Enum.C$58$Bounded () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804205$35$$35$d2L3 () Int)
(declare-fun GHC.Base.map () Int)
(declare-fun lq_tmp$36$x$35$$35$604 () Int)
(declare-fun lq_karg$36$Scratch.Sample1.algo$35$$35$k_$35$$35$1609 () Int)
(declare-fun ds_d2HK () Int)
(declare-fun GHC.Base.$36$ () Int)
(declare-fun papp1 () Int)
(declare-fun VV$35$$35$F$35$$35$17 () Int)
(declare-fun VV$35$$35$F$35$$35$53 () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792804220$35$$35$d2Li () Int)
(declare-fun lq_tmp$36$x$35$$35$861 () Int)
(declare-fun GHC.Classes.$60$ () Int)
(declare-fun tail () Int)
(declare-fun cast_as () Int)
(declare-fun lq_tmp$36$x$35$$35$1071 () Int)
(declare-fun fix$36$$36$dIP_a1Tr () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804185$35$$35$d2KJ () Int)
(declare-fun GHC.Types.TyCon () Int)
(declare-fun GHC.Stack.Types.FreezeCallStack () Int)
(declare-fun Scratch.Sample1.sRight () Int)
(declare-fun GHC.Num.$42$ () Int)
(declare-fun lq_karg$36$Scratch.Sample1.algo$35$$35$k_$35$$35$1328 () Int)
(declare-fun c$35$$35$a1R2 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792804193$35$$35$d2KR$35$$35$k_$35$$35$1374 () Int)
(declare-fun a$35$$35$a1R0 () Int)
(declare-fun lq_tmp$36$x$35$$35$1094 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804150$35$$35$d2Ka () Str)
(declare-fun GHC.Real.recip () Int)
(declare-fun ds_d2IT () Int)
(declare-fun lq_karg$36$ds_d2HK$35$$35$k_$35$$35$1587 () Int)
(declare-fun GHC.Maybe.Nothing () Int)
(declare-fun VV$35$$35$F$35$$35$27 () Int)
(declare-fun lq_karg$36$ds_d2IW$35$$35$k_$35$$35$1609 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804158$35$$35$d2Ki () Int)
(declare-fun Scratch.Sample1.die () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804154$35$$35$d2Ke () Str)
(declare-fun lq_tmp$36$x$35$$35$815 () Int)
(declare-fun GHC.Types.EQ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804152$35$$35$d2Kc () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792804156$35$$35$d2Kg () Str)
(declare-fun lq_tmp$36$x$35$$35$1764 () Int)
(declare-fun GHC.List.scanr () Int)
(declare-fun totalityError () Int)
(declare-fun GHC.Num.negate () Int)
(declare-fun lq_tmp$36$x$35$$35$1101 () Int)
(declare-fun GHC.Real.fromIntegral () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804162$35$$35$d2Km () Int)
(declare-fun lq_karg$36$ds_d2IW$35$$35$k_$35$$35$1587 () Int)
(declare-fun GHC.Maybe.Just () Int)
(declare-fun GHC.Classes.min () Int)
(declare-fun lq_karg$36$ds_d2HK$35$$35$k_$35$$35$1609 () Int)
(declare-fun ds_d2JJ () Int)
(declare-fun Scratch.Sample1.size () Int)
(declare-fun GHC.Types.$36$WKindRepVar () Int)
(declare-fun ds_d2JZ () Int)
(declare-fun x_Tuple32 () Int)
(declare-fun GHC.List.repeat () Int)
(declare-fun lit$36$src$47$Scratch$47$Sample1.hs () Str)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792804201$35$$35$d2KZ$35$$35$k_$35$$35$1587 () Bool)
(declare-fun ds_d2J5 () Int)
(declare-fun GHC.Classes.not () Int)
(declare-fun GHC.Num.$43$ () Int)
(declare-fun Data.Tuple.fst () Int)
(declare-fun GHC.Types.KindRepApp () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804194$35$$35$d2KS () Int)
(declare-fun lq_tmp$36$x$35$$35$996 () Int)
(declare-fun VV$35$$35$F$35$$35$16 () Int)
(declare-fun GHC.Err.error () Int)
(declare-fun snd () Int)
(declare-fun fst () Int)
(declare-fun Data.Tuple.snd () Int)
(declare-fun lq_karg$36$k2$35$$35$a1Ra$35$$35$k_$35$$35$1609 () Int)
(declare-fun lq_karg$36$ds_d2IX$35$$35$k_$35$$35$1587 () Int)
(declare-fun apply$35$$35$13 (Int (_ BitVec 32)) Bool)
(declare-fun apply$35$$35$9 (Int Str) Bool)
(declare-fun apply$35$$35$6 (Int Bool) Str)
(declare-fun apply$35$$35$11 (Int Str) (_ BitVec 32))
(declare-fun apply$35$$35$15 (Int (_ BitVec 32)) (_ BitVec 32))
(declare-fun apply$35$$35$0 (Int Int) Int)
(declare-fun apply$35$$35$8 (Int Str) Int)
(declare-fun apply$35$$35$1 (Int Int) Bool)
(declare-fun apply$35$$35$7 (Int Bool) (_ BitVec 32))
(declare-fun apply$35$$35$14 (Int (_ BitVec 32)) Str)
(declare-fun apply$35$$35$10 (Int Str) Str)
(declare-fun apply$35$$35$5 (Int Bool) Bool)
(declare-fun apply$35$$35$2 (Int Int) Str)
(declare-fun apply$35$$35$12 (Int (_ BitVec 32)) Int)
(declare-fun apply$35$$35$3 (Int Int) (_ BitVec 32))
(declare-fun apply$35$$35$4 (Int Bool) Int)
(declare-fun coerce$35$$35$13 ((_ BitVec 32)) Bool)
(declare-fun coerce$35$$35$9 (Str) Bool)
(declare-fun coerce$35$$35$6 (Bool) Str)
(declare-fun coerce$35$$35$11 (Str) (_ BitVec 32))
(declare-fun coerce$35$$35$15 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun coerce$35$$35$0 (Int) Int)
(declare-fun coerce$35$$35$8 (Str) Int)
(declare-fun coerce$35$$35$1 (Int) Bool)
(declare-fun coerce$35$$35$7 (Bool) (_ BitVec 32))
(declare-fun coerce$35$$35$14 ((_ BitVec 32)) Str)
(declare-fun coerce$35$$35$10 (Str) Str)
(declare-fun coerce$35$$35$5 (Bool) Bool)
(declare-fun coerce$35$$35$2 (Int) Str)
(declare-fun coerce$35$$35$12 ((_ BitVec 32)) Int)
(declare-fun coerce$35$$35$3 (Int) (_ BitVec 32))
(declare-fun coerce$35$$35$4 (Bool) Int)
(declare-fun smt_lambda$35$$35$13 ((_ BitVec 32) Bool) Int)
(declare-fun smt_lambda$35$$35$9 (Str Bool) Int)
(declare-fun smt_lambda$35$$35$6 (Bool Str) Int)
(declare-fun smt_lambda$35$$35$11 (Str (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$15 ((_ BitVec 32) (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$0 (Int Int) Int)
(declare-fun smt_lambda$35$$35$8 (Str Int) Int)
(declare-fun smt_lambda$35$$35$1 (Int Bool) Int)
(declare-fun smt_lambda$35$$35$7 (Bool (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$14 ((_ BitVec 32) Str) Int)
(declare-fun smt_lambda$35$$35$10 (Str Str) Int)
(declare-fun smt_lambda$35$$35$5 (Bool Bool) Int)
(declare-fun smt_lambda$35$$35$2 (Int Str) Int)
(declare-fun smt_lambda$35$$35$12 ((_ BitVec 32) Int) Int)
(declare-fun smt_lambda$35$$35$3 (Int (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$4 (Bool Int) Int)
(declare-fun lam_arg$35$$35$1$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$2$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$3$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$4$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$5$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$6$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$7$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$1$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$2$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$3$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$4$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$5$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$6$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$7$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$1$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$2$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$3$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$4$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$5$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$6$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$7$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$1$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$2$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$3$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$4$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$5$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$6$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$7$35$$35$4 () Bool)


(assert (distinct lit$36$src$47$Scratch$47$Sample1.hs lit$36$LH$45$verificacion$45$asistida$45$0.1.0.0$45$B0H5GdfJzuc2jwReQRD3tY lit$36$SkewH lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive lit$36$Scratch.Sample1 lit$36$$39$Skew lit$36$error lit$36$$39$Empty lit$36$src$47$Scratch$47$Sample1.hs$58$48$58$1$45$23$124$function$32$getKey))

(assert (distinct GHC.Types.True GHC.Types.False))
(assert (distinct GHC.Types.EQ GHC.Types.GT GHC.Types.LT))
(assert (= (strLen lit$36$src$47$Scratch$47$Sample1.hs$58$48$58$1$45$23$124$function$32$getKey) 46))
(assert (= (strLen lit$36$$39$Empty) 6))
(assert (= (strLen lit$36$error) 5))
(assert (= (strLen lit$36$$39$Skew) 5))
(assert (= (strLen lit$36$Scratch.Sample1) 15))
(assert (= (strLen lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive) 36))
(assert (= (strLen lit$36$SkewH) 5))
(assert (= (strLen lit$36$LH$45$verificacion$45$asistida$45$0.1.0.0$45$B0H5GdfJzuc2jwReQRD3tY) 55))
(assert (= (strLen lit$36$src$47$Scratch$47$Sample1.hs) 22))
(push 1)
(define-fun b$36$$35$$35$336 () Bool (and (= (apply$35$$35$0 (as Scratch.Sample1.size Int) VV$35$$35$F$35$$35$31) (+ 1 (apply$35$$35$0 (as Scratch.Sample1.size Int) lq_anf$36$$35$$35$7205759403792804189$35$$35$d2KN))) (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$31) lq_anf$36$$35$$35$7205759403792804176$35$$35$d2KA) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$31) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804189$35$$35$d2KN))) (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$31) lq_anf$36$$35$$35$7205759403792804189$35$$35$d2KN) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$31) 0)))
(define-fun b$36$$35$$35$128 () Bool (= lq_anf$36$$35$$35$7205759403792804162$35$$35$d2Km lq_anf$36$$35$$35$7205759403792804161$35$$35$d2Kl))
(define-fun b$36$$35$$35$160 () Bool (= lq_anf$36$$35$$35$7205759403792804182$35$$35$d2KG lq_anf$36$$35$$35$7205759403792804181$35$$35$d2KF))
(define-fun b$36$$35$$35$224 () Bool (= lq_anf$36$$35$$35$7205759403792804194$35$$35$d2KS ds_d2HK))
(define-fun b$36$$35$$35$129 () Bool (= lq_anf$36$$35$$35$7205759403792804163$35$$35$d2Kn 20))
(define-fun b$36$$35$$35$161 () Bool (= lq_anf$36$$35$$35$7205759403792804183$35$$35$d2KH 5))
(define-fun b$36$$35$$35$241 () Bool (and (= lq_anf$36$$35$$35$7205759403792804201$35$$35$d2KZ (<= ds_d2IT k2$35$$35$a1Ra)) (= lq_anf$36$$35$$35$7205759403792804201$35$$35$d2KZ lq_anf$36$$35$$35$7205759403792804200$35$$35$d2KY)))
(define-fun b$36$$35$$35$322 () Bool (<= ds_d2IT VV$35$$35$F$35$$35$17))
(define-fun b$36$$35$$35$130 () Bool (= lq_anf$36$$35$$35$7205759403792804164$35$$35$d2Ko lq_anf$36$$35$$35$7205759403792804163$35$$35$d2Kn))
(define-fun b$36$$35$$35$162 () Bool (= lq_anf$36$$35$$35$7205759403792804184$35$$35$d2KI lq_anf$36$$35$$35$7205759403792804183$35$$35$d2KH))
(define-fun b$36$$35$$35$242 () Bool (and lq_anf$36$$35$$35$7205759403792804201$35$$35$d2KZ (= lq_anf$36$$35$$35$7205759403792804201$35$$35$d2KZ (<= ds_d2IT k2$35$$35$a1Ra)) (= lq_anf$36$$35$$35$7205759403792804201$35$$35$d2KZ lq_anf$36$$35$$35$7205759403792804200$35$$35$d2KY)))
(define-fun b$36$$35$$35$115 () Bool (= lq_anf$36$$35$$35$7205759403792804149$35$$35$d2K9 lit$36$error))
(define-fun b$36$$35$$35$324 () Bool false)
(define-fun b$36$$35$$35$116 () Bool (and (= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792804150$35$$35$d2Ka) (strLen lq_anf$36$$35$$35$7205759403792804149$35$$35$d2K9)) (>= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792804150$35$$35$d2Ka) 0) (= lq_anf$36$$35$$35$7205759403792804150$35$$35$d2Ka lq_anf$36$$35$$35$7205759403792804149$35$$35$d2K9)))
(define-fun b$36$$35$$35$164 () Bool (and (= (apply$35$$35$0 (as Scratch.Sample1.size Int) lq_anf$36$$35$$35$7205759403792804185$35$$35$d2KJ) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804185$35$$35$d2KJ) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804185$35$$35$d2KJ) 0)))
(define-fun b$36$$35$$35$228 () Bool (and (apply$35$$35$1 (as Scratch.Sample1.isNonSkewEmpty Int) lq_anf$36$$35$$35$7205759403792804194$35$$35$d2KS) (= lq_anf$36$$35$$35$7205759403792804194$35$$35$d2KS ds_d2HK) (= lq_anf$36$$35$$35$7205759403792804194$35$$35$d2KS (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Scratch.Sample1.Skew Int) ds_d2IT) ds_d2IU) ds_d2IV)) (= (apply$35$$35$0 (as Scratch.Sample1.getKey Int) lq_anf$36$$35$$35$7205759403792804194$35$$35$d2KS) ds_d2IT) (= (apply$35$$35$0 (as Scratch.Sample1.sLeft Int) lq_anf$36$$35$$35$7205759403792804194$35$$35$d2KS) ds_d2IU) (= (apply$35$$35$0 (as Scratch.Sample1.sRight Int) lq_anf$36$$35$$35$7205759403792804194$35$$35$d2KS) ds_d2IV) (= (apply$35$$35$0 (as Scratch.Sample1.sk Int) lq_anf$36$$35$$35$7205759403792804194$35$$35$d2KS) ds_d2IT)))
(define-fun b$36$$35$$35$117 () Bool (= lq_anf$36$$35$$35$7205759403792804151$35$$35$d2Kb lit$36$LH$45$verificacion$45$asistida$45$0.1.0.0$45$B0H5GdfJzuc2jwReQRD3tY))
(define-fun b$36$$35$$35$133 () Bool (and (= (apply$35$$35$2 (as fst Int) lq_anf$36$$35$$35$7205759403792804166$35$$35$d2Kq) lq_anf$36$$35$$35$7205759403792804150$35$$35$d2Ka) (= (apply$35$$35$0 (as snd Int) lq_anf$36$$35$$35$7205759403792804166$35$$35$d2Kq) lq_anf$36$$35$$35$7205759403792804165$35$$35$d2Kp) (= (apply$35$$35$2 (as x_Tuple21 Int) lq_anf$36$$35$$35$7205759403792804166$35$$35$d2Kq) lq_anf$36$$35$$35$7205759403792804150$35$$35$d2Ka) (= (apply$35$$35$0 (as x_Tuple22 Int) lq_anf$36$$35$$35$7205759403792804166$35$$35$d2Kq) lq_anf$36$$35$$35$7205759403792804165$35$$35$d2Kp)))
(define-fun b$36$$35$$35$213 () Bool (= lq_anf$36$$35$$35$7205759403792804194$35$$35$d2KS ds_d2HK))
(define-fun b$36$$35$$35$229 () Bool (= lq_anf$36$$35$$35$7205759403792804199$35$$35$d2KX ds_d2HL))
(define-fun b$36$$35$$35$326 () Bool (<= a$35$$35$a1R0 VV$35$$35$F$35$$35$24))
(define-fun b$36$$35$$35$118 () Bool (and (= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792804152$35$$35$d2Kc) (strLen lq_anf$36$$35$$35$7205759403792804151$35$$35$d2Kb)) (>= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792804152$35$$35$d2Kc) 0) (= lq_anf$36$$35$$35$7205759403792804152$35$$35$d2Kc lq_anf$36$$35$$35$7205759403792804151$35$$35$d2Kb)))
(define-fun b$36$$35$$35$166 () Bool (and (= (apply$35$$35$0 (as Scratch.Sample1.size Int) lq_anf$36$$35$$35$7205759403792804186$35$$35$d2KK) (+ 1 (apply$35$$35$0 (as Scratch.Sample1.size Int) lq_anf$36$$35$$35$7205759403792804185$35$$35$d2KJ))) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792804186$35$$35$d2KK) lq_anf$36$$35$$35$7205759403792804184$35$$35$d2KI) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804186$35$$35$d2KK) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804185$35$$35$d2KJ))) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792804186$35$$35$d2KK) lq_anf$36$$35$$35$7205759403792804185$35$$35$d2KJ) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804186$35$$35$d2KK) 0)))
(define-fun b$36$$35$$35$327 () Bool (<= a$35$$35$a1R0 VV$35$$35$F$35$$35$25))
(define-fun b$36$$35$$35$119 () Bool (= lq_anf$36$$35$$35$7205759403792804153$35$$35$d2Kd lit$36$Scratch.Sample1))
(define-fun b$36$$35$$35$135 () Bool (= lq_anf$36$$35$$35$7205759403792804168$35$$35$d2Ks lq_anf$36$$35$$35$7205759403792804167$35$$35$d2Kr))
(define-fun b$36$$35$$35$120 () Bool (and (= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792804154$35$$35$d2Ke) (strLen lq_anf$36$$35$$35$7205759403792804153$35$$35$d2Kd)) (>= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792804154$35$$35$d2Ke) 0) (= lq_anf$36$$35$$35$7205759403792804154$35$$35$d2Ke lq_anf$36$$35$$35$7205759403792804153$35$$35$d2Kd)))
(define-fun b$36$$35$$35$168 () Bool (and (= (apply$35$$35$0 (as Scratch.Sample1.size Int) lq_anf$36$$35$$35$7205759403792804187$35$$35$d2KL) (+ 1 (apply$35$$35$0 (as Scratch.Sample1.size Int) lq_anf$36$$35$$35$7205759403792804186$35$$35$d2KK))) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792804187$35$$35$d2KL) lq_anf$36$$35$$35$7205759403792804182$35$$35$d2KG) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804187$35$$35$d2KL) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804186$35$$35$d2KK))) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792804187$35$$35$d2KL) lq_anf$36$$35$$35$7205759403792804186$35$$35$d2KK) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804187$35$$35$d2KL) 0)))
(define-fun b$36$$35$$35$200 () Bool (= lq_anf$36$$35$$35$7205759403792804193$35$$35$d2KR ds_d2Hu))
(define-fun b$36$$35$$35$232 () Bool (= lq_anf$36$$35$$35$7205759403792804199$35$$35$d2KX ds_d2HL))
(define-fun b$36$$35$$35$41 () Bool (not GHC.Types.False))
(define-fun b$36$$35$$35$329 () Bool (<= a$35$$35$a1R0 VV$35$$35$F$35$$35$26))
(define-fun b$36$$35$$35$121 () Bool (= lq_anf$36$$35$$35$7205759403792804155$35$$35$d2Kf lit$36$src$47$Scratch$47$Sample1.hs))
(define-fun b$36$$35$$35$153 () Bool (= lq_anf$36$$35$$35$7205759403792804175$35$$35$d2Kz 1))
(define-fun b$36$$35$$35$201 () Bool (= lq_anf$36$$35$$35$7205759403792804193$35$$35$d2KR ds_d2Hu))
(define-fun b$36$$35$$35$330 () Bool (<= ds_d2IT VV$35$$35$F$35$$35$11))
(define-fun b$36$$35$$35$122 () Bool (and (= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792804156$35$$35$d2Kg) (strLen lq_anf$36$$35$$35$7205759403792804155$35$$35$d2Kf)) (>= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792804156$35$$35$d2Kg) 0) (= lq_anf$36$$35$$35$7205759403792804156$35$$35$d2Kg lq_anf$36$$35$$35$7205759403792804155$35$$35$d2Kf)))
(define-fun b$36$$35$$35$154 () Bool (= lq_anf$36$$35$$35$7205759403792804176$35$$35$d2KA lq_anf$36$$35$$35$7205759403792804175$35$$35$d2Kz))
(define-fun b$36$$35$$35$170 () Bool (and (= (apply$35$$35$0 (as Scratch.Sample1.size Int) lq_anf$36$$35$$35$7205759403792804188$35$$35$d2KM) (+ 1 (apply$35$$35$0 (as Scratch.Sample1.size Int) lq_anf$36$$35$$35$7205759403792804187$35$$35$d2KL))) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792804188$35$$35$d2KM) lq_anf$36$$35$$35$7205759403792804180$35$$35$d2KE) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804188$35$$35$d2KM) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804187$35$$35$d2KL))) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792804188$35$$35$d2KM) lq_anf$36$$35$$35$7205759403792804187$35$$35$d2KL) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804188$35$$35$d2KM) 0)))
(define-fun b$36$$35$$35$202 () Bool (and (not (apply$35$$35$1 (as Scratch.Sample1.isNonSkewEmpty Int) lq_anf$36$$35$$35$7205759403792804193$35$$35$d2KR)) (= lq_anf$36$$35$$35$7205759403792804193$35$$35$d2KR (as Scratch.Sample1.Empty Int)) (= lq_anf$36$$35$$35$7205759403792804193$35$$35$d2KR ds_d2Hu)))
(define-fun b$36$$35$$35$331 () Bool (<= a$35$$35$a1R0 VV$35$$35$F$35$$35$27))
(define-fun b$36$$35$$35$123 () Bool (= lq_anf$36$$35$$35$7205759403792804157$35$$35$d2Kh 9))
(define-fun b$36$$35$$35$155 () Bool (= lq_anf$36$$35$$35$7205759403792804177$35$$35$d2KB 2))
(define-fun b$36$$35$$35$187 () Bool (apply$35$$35$1 (as Scratch.Sample1.isNonSkewEmpty Int) ds_d2J5))
(define-fun b$36$$35$$35$203 () Bool (= lq_anf$36$$35$$35$7205759403792804193$35$$35$d2KR ds_d2Hu))
(define-fun b$36$$35$$35$44 () Bool GHC.Types.True)
(define-fun b$36$$35$$35$332 () Bool (= VV$35$$35$F$35$$35$28 a$35$$35$a1R0))
(define-fun b$36$$35$$35$124 () Bool (= lq_anf$36$$35$$35$7205759403792804158$35$$35$d2Ki lq_anf$36$$35$$35$7205759403792804157$35$$35$d2Kh))
(define-fun b$36$$35$$35$156 () Bool (= lq_anf$36$$35$$35$7205759403792804178$35$$35$d2KC lq_anf$36$$35$$35$7205759403792804177$35$$35$d2KB))
(define-fun b$36$$35$$35$172 () Bool (and (= (apply$35$$35$0 (as Scratch.Sample1.size Int) lq_anf$36$$35$$35$7205759403792804189$35$$35$d2KN) (+ 1 (apply$35$$35$0 (as Scratch.Sample1.size Int) lq_anf$36$$35$$35$7205759403792804188$35$$35$d2KM))) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792804189$35$$35$d2KN) lq_anf$36$$35$$35$7205759403792804178$35$$35$d2KC) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804189$35$$35$d2KN) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804188$35$$35$d2KM))) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792804189$35$$35$d2KN) lq_anf$36$$35$$35$7205759403792804188$35$$35$d2KM) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804189$35$$35$d2KN) 0)))
(define-fun b$36$$35$$35$188 () Bool (and (apply$35$$35$1 (as Scratch.Sample1.isNonSkewEmpty Int) lq_anf$36$$35$$35$7205759403792804191$35$$35$d2KP) (= lq_anf$36$$35$$35$7205759403792804191$35$$35$d2KP ds_d2J5)))
(define-fun b$36$$35$$35$236 () Bool (and (apply$35$$35$1 (as Scratch.Sample1.isNonSkewEmpty Int) lq_anf$36$$35$$35$7205759403792804199$35$$35$d2KX) (= lq_anf$36$$35$$35$7205759403792804199$35$$35$d2KX ds_d2HL) (= lq_anf$36$$35$$35$7205759403792804199$35$$35$d2KX (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Scratch.Sample1.Skew Int) k2$35$$35$a1Ra) ds_d2IW) ds_d2IX)) (= (apply$35$$35$0 (as Scratch.Sample1.getKey Int) lq_anf$36$$35$$35$7205759403792804199$35$$35$d2KX) k2$35$$35$a1Ra) (= (apply$35$$35$0 (as Scratch.Sample1.sLeft Int) lq_anf$36$$35$$35$7205759403792804199$35$$35$d2KX) ds_d2IW) (= (apply$35$$35$0 (as Scratch.Sample1.sRight Int) lq_anf$36$$35$$35$7205759403792804199$35$$35$d2KX) ds_d2IX) (= (apply$35$$35$0 (as Scratch.Sample1.sk Int) lq_anf$36$$35$$35$7205759403792804199$35$$35$d2KX) k2$35$$35$a1Ra)))
(define-fun b$36$$35$$35$125 () Bool (= lq_anf$36$$35$$35$7205759403792804159$35$$35$d2Kj 11))
(define-fun b$36$$35$$35$157 () Bool (= lq_anf$36$$35$$35$7205759403792804179$35$$35$d2KD 3))
(define-fun b$36$$35$$35$189 () Bool (and (apply$35$$35$1 (as Scratch.Sample1.isNonSkewEmpty Int) lq_anf$36$$35$$35$7205759403792804191$35$$35$d2KP) (= lq_anf$36$$35$$35$7205759403792804191$35$$35$d2KP ds_d2J5)))
(define-fun b$36$$35$$35$237 () Bool (= lq_anf$36$$35$$35$7205759403792804200$35$$35$d2KY (<= ds_d2IT k2$35$$35$a1Ra)))
(define-fun b$36$$35$$35$126 () Bool (= lq_anf$36$$35$$35$7205759403792804160$35$$35$d2Kk lq_anf$36$$35$$35$7205759403792804159$35$$35$d2Kj))
(define-fun b$36$$35$$35$158 () Bool (= lq_anf$36$$35$$35$7205759403792804180$35$$35$d2KE lq_anf$36$$35$$35$7205759403792804179$35$$35$d2KD))
(define-fun b$36$$35$$35$174 () Bool (and (>= (apply$35$$35$0 (as len Int) Scratch.Sample1.algo) 0) (< 0 (apply$35$$35$0 (as Scratch.Sample1.size Int) Scratch.Sample1.algo))))
(define-fun b$36$$35$$35$190 () Bool (and (apply$35$$35$1 (as Scratch.Sample1.isNonSkewEmpty Int) lq_anf$36$$35$$35$7205759403792804191$35$$35$d2KP) (not (apply$35$$35$1 (as Scratch.Sample1.isNonSkewEmpty Int) lq_anf$36$$35$$35$7205759403792804191$35$$35$d2KP)) (= lq_anf$36$$35$$35$7205759403792804191$35$$35$d2KP (as Scratch.Sample1.Empty Int)) (= lq_anf$36$$35$$35$7205759403792804191$35$$35$d2KP ds_d2J5)))
(define-fun b$36$$35$$35$238 () Bool (and (= lq_anf$36$$35$$35$7205759403792804201$35$$35$d2KZ (<= ds_d2IT k2$35$$35$a1Ra)) (= lq_anf$36$$35$$35$7205759403792804201$35$$35$d2KZ lq_anf$36$$35$$35$7205759403792804200$35$$35$d2KY)))
(define-fun b$36$$35$$35$335 () Bool (and (= VV$35$$35$F$35$$35$30 lit$36$src$47$Scratch$47$Sample1.hs$58$48$58$1$45$23$124$function$32$getKey) (= VV$35$$35$F$35$$35$30 lq_anf$36$$35$$35$7205759403792804192$35$$35$d2KQ)))
(define-fun b$36$$35$$35$127 () Bool (= lq_anf$36$$35$$35$7205759403792804161$35$$35$d2Kl 9))
(define-fun b$36$$35$$35$159 () Bool (= lq_anf$36$$35$$35$7205759403792804181$35$$35$d2KF 4))
(define-fun b$36$$35$$35$191 () Bool (= lq_anf$36$$35$$35$7205759403792804192$35$$35$d2KQ lit$36$src$47$Scratch$47$Sample1.hs$58$48$58$1$45$23$124$function$32$getKey))
(define-fun b$36$$35$$35$207 () Bool (and (apply$35$$35$1 (as Scratch.Sample1.isNonSkewEmpty Int) lq_anf$36$$35$$35$7205759403792804193$35$$35$d2KR) (= lq_anf$36$$35$$35$7205759403792804193$35$$35$d2KR ds_d2Hu) (= lq_anf$36$$35$$35$7205759403792804193$35$$35$d2KR (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Scratch.Sample1.Skew Int) a$35$$35$a1R0) b$35$$35$a1R1) c$35$$35$a1R2)) (= (apply$35$$35$0 (as Scratch.Sample1.getKey Int) lq_anf$36$$35$$35$7205759403792804193$35$$35$d2KR) a$35$$35$a1R0) (= (apply$35$$35$0 (as Scratch.Sample1.sLeft Int) lq_anf$36$$35$$35$7205759403792804193$35$$35$d2KR) b$35$$35$a1R1) (= (apply$35$$35$0 (as Scratch.Sample1.sRight Int) lq_anf$36$$35$$35$7205759403792804193$35$$35$d2KR) c$35$$35$a1R2) (= (apply$35$$35$0 (as Scratch.Sample1.sk Int) lq_anf$36$$35$$35$7205759403792804193$35$$35$d2KR) a$35$$35$a1R0)))
(push 1)
(assert (and true b$36$$35$$35$324 b$36$$35$$35$41 b$36$$35$$35$44))
(push 1)
(assert (not false))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$8 (as Scratch.Sample1.size Int) VV$35$$35$F$35$$35$53) 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$8 (as len Int) VV$35$$35$F$35$$35$53) 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$8 (as len Int) VV$35$$35$F$35$$35$53) 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$8 (as len Int) VV$35$$35$F$35$$35$53) 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
(pop 1)
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
(pop 1)
(push 1)
(push 1)
(assert (and (or (exists ((lq_karg$36$c$35$$35$a1R2$35$$35$k_$35$$35$1374 Int) (lq_karg$36$a$35$$35$a1R0$35$$35$k_$35$$35$1374 Int) (lq_karg$36$ds_d2Hu$35$$35$k_$35$$35$1374 Int) (lq_karg$36$Scratch.Sample1.algo$35$$35$k_$35$$35$1374 Int) (lq_karg$36$VV$35$$35$1373$35$$35$k_$35$$35$1374 Int) (lq_karg$36$b$35$$35$a1R1$35$$35$k_$35$$35$1374 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792804193$35$$35$d2KR$35$$35$k_$35$$35$1374 Int)) (and (= lq_karg$36$Scratch.Sample1.algo$35$$35$k_$35$$35$1374 Scratch.Sample1.algo) (= lq_karg$36$VV$35$$35$1373$35$$35$k_$35$$35$1374 VV$35$$35$F$35$$35$23) (= lq_karg$36$a$35$$35$a1R0$35$$35$k_$35$$35$1374 a$35$$35$a1R0) (= lq_karg$36$b$35$$35$a1R1$35$$35$k_$35$$35$1374 b$35$$35$a1R1) (= lq_karg$36$c$35$$35$a1R2$35$$35$k_$35$$35$1374 c$35$$35$a1R2) (= lq_karg$36$ds_d2Hu$35$$35$k_$35$$35$1374 ds_d2Hu) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804193$35$$35$d2KR$35$$35$k_$35$$35$1374 lq_anf$36$$35$$35$7205759403792804193$35$$35$d2KR) (exists ((VV$35$$35$F$35$$35$28 Int)) (and (= VV$35$$35$F$35$$35$28 a$35$$35$a1R0) (= lq_karg$36$Scratch.Sample1.algo$35$$35$k_$35$$35$1374 Scratch.Sample1.algo) (= lq_karg$36$VV$35$$35$1373$35$$35$k_$35$$35$1374 VV$35$$35$F$35$$35$28) (= lq_karg$36$a$35$$35$a1R0$35$$35$k_$35$$35$1374 a$35$$35$a1R0) (= lq_karg$36$b$35$$35$a1R1$35$$35$k_$35$$35$1374 b$35$$35$a1R1) (= lq_karg$36$c$35$$35$a1R2$35$$35$k_$35$$35$1374 c$35$$35$a1R2) (= lq_karg$36$ds_d2Hu$35$$35$k_$35$$35$1374 ds_d2Hu) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804193$35$$35$d2KR$35$$35$k_$35$$35$1374 lq_anf$36$$35$$35$7205759403792804193$35$$35$d2KR))))) (exists ((lq_karg$36$c$35$$35$a1R2$35$$35$k_$35$$35$1374 Int) (lq_karg$36$a$35$$35$a1R0$35$$35$k_$35$$35$1374 Int) (lq_karg$36$ds_d2Hu$35$$35$k_$35$$35$1374 Int) (lq_karg$36$Scratch.Sample1.algo$35$$35$k_$35$$35$1374 Int) (lq_karg$36$VV$35$$35$1373$35$$35$k_$35$$35$1374 Int) (lq_karg$36$b$35$$35$a1R1$35$$35$k_$35$$35$1374 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792804193$35$$35$d2KR$35$$35$k_$35$$35$1374 Int)) (and (= lq_karg$36$Scratch.Sample1.algo$35$$35$k_$35$$35$1374 Scratch.Sample1.algo) (= lq_karg$36$VV$35$$35$1373$35$$35$k_$35$$35$1374 VV$35$$35$F$35$$35$23) (= lq_karg$36$a$35$$35$a1R0$35$$35$k_$35$$35$1374 a$35$$35$a1R0) (= lq_karg$36$b$35$$35$a1R1$35$$35$k_$35$$35$1374 b$35$$35$a1R1) (= lq_karg$36$c$35$$35$a1R2$35$$35$k_$35$$35$1374 c$35$$35$a1R2) (= lq_karg$36$ds_d2Hu$35$$35$k_$35$$35$1374 ds_d2Hu) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804193$35$$35$d2KR$35$$35$k_$35$$35$1374 lq_anf$36$$35$$35$7205759403792804193$35$$35$d2KR) (exists ((VV$35$$35$F$35$$35$27 Int)) (and (<= a$35$$35$a1R0 VV$35$$35$F$35$$35$27) (= lq_karg$36$Scratch.Sample1.algo$35$$35$k_$35$$35$1374 Scratch.Sample1.algo) (= lq_karg$36$VV$35$$35$1373$35$$35$k_$35$$35$1374 VV$35$$35$F$35$$35$27) (= lq_karg$36$a$35$$35$a1R0$35$$35$k_$35$$35$1374 a$35$$35$a1R0) (= lq_karg$36$b$35$$35$a1R1$35$$35$k_$35$$35$1374 b$35$$35$a1R1) (= lq_karg$36$c$35$$35$a1R2$35$$35$k_$35$$35$1374 c$35$$35$a1R2) (= lq_karg$36$ds_d2Hu$35$$35$k_$35$$35$1374 ds_d2Hu) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804193$35$$35$d2KR$35$$35$k_$35$$35$1374 lq_anf$36$$35$$35$7205759403792804193$35$$35$d2KR))))) (exists ((lq_karg$36$c$35$$35$a1R2$35$$35$k_$35$$35$1374 Int) (lq_karg$36$a$35$$35$a1R0$35$$35$k_$35$$35$1374 Int) (lq_karg$36$ds_d2Hu$35$$35$k_$35$$35$1374 Int) (lq_karg$36$Scratch.Sample1.algo$35$$35$k_$35$$35$1374 Int) (lq_karg$36$VV$35$$35$1373$35$$35$k_$35$$35$1374 Int) (lq_karg$36$b$35$$35$a1R1$35$$35$k_$35$$35$1374 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792804193$35$$35$d2KR$35$$35$k_$35$$35$1374 Int)) (and (= lq_karg$36$Scratch.Sample1.algo$35$$35$k_$35$$35$1374 Scratch.Sample1.algo) (= lq_karg$36$VV$35$$35$1373$35$$35$k_$35$$35$1374 VV$35$$35$F$35$$35$23) (= lq_karg$36$a$35$$35$a1R0$35$$35$k_$35$$35$1374 a$35$$35$a1R0) (= lq_karg$36$b$35$$35$a1R1$35$$35$k_$35$$35$1374 b$35$$35$a1R1) (= lq_karg$36$c$35$$35$a1R2$35$$35$k_$35$$35$1374 c$35$$35$a1R2) (= lq_karg$36$ds_d2Hu$35$$35$k_$35$$35$1374 ds_d2Hu) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804193$35$$35$d2KR$35$$35$k_$35$$35$1374 lq_anf$36$$35$$35$7205759403792804193$35$$35$d2KR) (exists ((VV$35$$35$F$35$$35$25 Int)) (and (<= a$35$$35$a1R0 VV$35$$35$F$35$$35$25) (= lq_karg$36$Scratch.Sample1.algo$35$$35$k_$35$$35$1374 Scratch.Sample1.algo) (= lq_karg$36$VV$35$$35$1373$35$$35$k_$35$$35$1374 VV$35$$35$F$35$$35$25) (= lq_karg$36$a$35$$35$a1R0$35$$35$k_$35$$35$1374 a$35$$35$a1R0) (= lq_karg$36$b$35$$35$a1R1$35$$35$k_$35$$35$1374 b$35$$35$a1R1) (= lq_karg$36$c$35$$35$a1R2$35$$35$k_$35$$35$1374 c$35$$35$a1R2) (= lq_karg$36$ds_d2Hu$35$$35$k_$35$$35$1374 ds_d2Hu) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804193$35$$35$d2KR$35$$35$k_$35$$35$1374 lq_anf$36$$35$$35$7205759403792804193$35$$35$d2KR)))))) b$36$$35$$35$200 b$36$$35$$35$41 b$36$$35$$35$203 b$36$$35$$35$44 b$36$$35$$35$174 b$36$$35$$35$207))
(push 1)
(assert (not (<= (apply$35$$35$0 (as Scratch.Sample1.getKey Int) ds_d2Hu) VV$35$$35$F$35$$35$23)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$326 b$36$$35$$35$200 b$36$$35$$35$41 b$36$$35$$35$203 b$36$$35$$35$44 b$36$$35$$35$174 b$36$$35$$35$207))
(push 1)
(assert (not (<= a$35$$35$a1R0 VV$35$$35$F$35$$35$24)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and false b$36$$35$$35$128 b$36$$35$$35$129 b$36$$35$$35$130 b$36$$35$$35$115 b$36$$35$$35$116 b$36$$35$$35$117 b$36$$35$$35$133 b$36$$35$$35$118 b$36$$35$$35$119 b$36$$35$$35$135 (and (= VV$35$$35$F$35$$35$57 msg$35$$35$a1QV) (>= (apply$35$$35$8 (as len Int) VV$35$$35$F$35$$35$57) 0)) b$36$$35$$35$120 b$36$$35$$35$41 b$36$$35$$35$121 b$36$$35$$35$122 (>= (apply$35$$35$8 (as len Int) msg$35$$35$a1QV) 0) b$36$$35$$35$123 b$36$$35$$35$44 b$36$$35$$35$124 b$36$$35$$35$125 b$36$$35$$35$126 b$36$$35$$35$127))
(push 1)
(assert (not false))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$200 b$36$$35$$35$41 b$36$$35$$35$329 b$36$$35$$35$203 b$36$$35$$35$44 b$36$$35$$35$174 b$36$$35$$35$207))
(push 1)
(assert (not (<= a$35$$35$a1R0 VV$35$$35$F$35$$35$26)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$224 b$36$$35$$35$241 b$36$$35$$35$242 b$36$$35$$35$228 b$36$$35$$35$213 b$36$$35$$35$229 b$36$$35$$35$232 b$36$$35$$35$41 b$36$$35$$35$330 b$36$$35$$35$44 b$36$$35$$35$236 b$36$$35$$35$237 b$36$$35$$35$174 b$36$$35$$35$238))
(push 1)
(assert (not (<= ds_d2IT VV$35$$35$F$35$$35$11)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (or (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403792804201$35$$35$d2KZ$35$$35$k_$35$$35$1609 Bool) (lq_karg$36$ds_d2IX$35$$35$k_$35$$35$1609 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792804202$35$$35$d2L0$35$$35$k_$35$$35$1609 Int) (lq_karg$36$ds_d2IT$35$$35$k_$35$$35$1609 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792804200$35$$35$d2KY$35$$35$k_$35$$35$1609 Bool) (lq_karg$36$ds_d2IU$35$$35$k_$35$$35$1609 Int) (lq_karg$36$ds_d2HL$35$$35$k_$35$$35$1609 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792804199$35$$35$d2KX$35$$35$k_$35$$35$1609 Int) (lq_karg$36$VV$35$$35$1608$35$$35$k_$35$$35$1609 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792804194$35$$35$d2KS$35$$35$k_$35$$35$1609 Int) (lq_karg$36$ds_d2IV$35$$35$k_$35$$35$1609 Int) (lq_karg$36$Scratch.Sample1.algo$35$$35$k_$35$$35$1609 Int) (lq_karg$36$ds_d2IW$35$$35$k_$35$$35$1609 Int) (lq_karg$36$ds_d2HK$35$$35$k_$35$$35$1609 Int) (lq_karg$36$k2$35$$35$a1Ra$35$$35$k_$35$$35$1609 Int)) (and (= lq_karg$36$Scratch.Sample1.algo$35$$35$k_$35$$35$1609 Scratch.Sample1.algo) (= lq_karg$36$VV$35$$35$1608$35$$35$k_$35$$35$1609 VV$35$$35$F$35$$35$13) (= lq_karg$36$ds_d2HK$35$$35$k_$35$$35$1609 ds_d2HK) (= lq_karg$36$ds_d2HL$35$$35$k_$35$$35$1609 ds_d2HL) (= lq_karg$36$ds_d2IT$35$$35$k_$35$$35$1609 ds_d2IT) (= lq_karg$36$ds_d2IU$35$$35$k_$35$$35$1609 ds_d2IU) (= lq_karg$36$ds_d2IV$35$$35$k_$35$$35$1609 ds_d2IV) (= lq_karg$36$ds_d2IW$35$$35$k_$35$$35$1609 ds_d2IW) (= lq_karg$36$ds_d2IX$35$$35$k_$35$$35$1609 ds_d2IX) (= lq_karg$36$k2$35$$35$a1Ra$35$$35$k_$35$$35$1609 k2$35$$35$a1Ra) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804194$35$$35$d2KS$35$$35$k_$35$$35$1609 lq_anf$36$$35$$35$7205759403792804194$35$$35$d2KS) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804199$35$$35$d2KX$35$$35$k_$35$$35$1609 lq_anf$36$$35$$35$7205759403792804199$35$$35$d2KX) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804200$35$$35$d2KY$35$$35$k_$35$$35$1609 lq_anf$36$$35$$35$7205759403792804200$35$$35$d2KY) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804201$35$$35$d2KZ$35$$35$k_$35$$35$1609 lq_anf$36$$35$$35$7205759403792804201$35$$35$d2KZ) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804202$35$$35$d2L0$35$$35$k_$35$$35$1609 lq_anf$36$$35$$35$7205759403792804202$35$$35$d2L0) (exists ((VV$35$$35$F$35$$35$17 Int)) (and (<= ds_d2IT VV$35$$35$F$35$$35$17) (= lq_karg$36$Scratch.Sample1.algo$35$$35$k_$35$$35$1609 Scratch.Sample1.algo) (= lq_karg$36$VV$35$$35$1608$35$$35$k_$35$$35$1609 VV$35$$35$F$35$$35$17) (= lq_karg$36$ds_d2HK$35$$35$k_$35$$35$1609 ds_d2HK) (= lq_karg$36$ds_d2HL$35$$35$k_$35$$35$1609 ds_d2HL) (= lq_karg$36$ds_d2IT$35$$35$k_$35$$35$1609 ds_d2IT) (= lq_karg$36$ds_d2IU$35$$35$k_$35$$35$1609 ds_d2IU) (= lq_karg$36$ds_d2IV$35$$35$k_$35$$35$1609 ds_d2IV) (= lq_karg$36$ds_d2IW$35$$35$k_$35$$35$1609 ds_d2IW) (= lq_karg$36$ds_d2IX$35$$35$k_$35$$35$1609 ds_d2IX) (= lq_karg$36$k2$35$$35$a1Ra$35$$35$k_$35$$35$1609 k2$35$$35$a1Ra) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804194$35$$35$d2KS$35$$35$k_$35$$35$1609 lq_anf$36$$35$$35$7205759403792804194$35$$35$d2KS) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804199$35$$35$d2KX$35$$35$k_$35$$35$1609 lq_anf$36$$35$$35$7205759403792804199$35$$35$d2KX) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804200$35$$35$d2KY$35$$35$k_$35$$35$1609 lq_anf$36$$35$$35$7205759403792804200$35$$35$d2KY) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804201$35$$35$d2KZ$35$$35$k_$35$$35$1609 lq_anf$36$$35$$35$7205759403792804201$35$$35$d2KZ) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804202$35$$35$d2L0$35$$35$k_$35$$35$1609 lq_anf$36$$35$$35$7205759403792804202$35$$35$d2L0))))) (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403792804201$35$$35$d2KZ$35$$35$k_$35$$35$1609 Bool) (lq_karg$36$ds_d2IX$35$$35$k_$35$$35$1609 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792804202$35$$35$d2L0$35$$35$k_$35$$35$1609 Int) (lq_karg$36$ds_d2IT$35$$35$k_$35$$35$1609 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792804200$35$$35$d2KY$35$$35$k_$35$$35$1609 Bool) (lq_karg$36$ds_d2IU$35$$35$k_$35$$35$1609 Int) (lq_karg$36$ds_d2HL$35$$35$k_$35$$35$1609 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792804199$35$$35$d2KX$35$$35$k_$35$$35$1609 Int) (lq_karg$36$VV$35$$35$1608$35$$35$k_$35$$35$1609 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792804194$35$$35$d2KS$35$$35$k_$35$$35$1609 Int) (lq_karg$36$ds_d2IV$35$$35$k_$35$$35$1609 Int) (lq_karg$36$Scratch.Sample1.algo$35$$35$k_$35$$35$1609 Int) (lq_karg$36$ds_d2IW$35$$35$k_$35$$35$1609 Int) (lq_karg$36$ds_d2HK$35$$35$k_$35$$35$1609 Int) (lq_karg$36$k2$35$$35$a1Ra$35$$35$k_$35$$35$1609 Int)) (and (= lq_karg$36$Scratch.Sample1.algo$35$$35$k_$35$$35$1609 Scratch.Sample1.algo) (= lq_karg$36$VV$35$$35$1608$35$$35$k_$35$$35$1609 VV$35$$35$F$35$$35$13) (= lq_karg$36$ds_d2HK$35$$35$k_$35$$35$1609 ds_d2HK) (= lq_karg$36$ds_d2HL$35$$35$k_$35$$35$1609 ds_d2HL) (= lq_karg$36$ds_d2IT$35$$35$k_$35$$35$1609 ds_d2IT) (= lq_karg$36$ds_d2IU$35$$35$k_$35$$35$1609 ds_d2IU) (= lq_karg$36$ds_d2IV$35$$35$k_$35$$35$1609 ds_d2IV) (= lq_karg$36$ds_d2IW$35$$35$k_$35$$35$1609 ds_d2IW) (= lq_karg$36$ds_d2IX$35$$35$k_$35$$35$1609 ds_d2IX) (= lq_karg$36$k2$35$$35$a1Ra$35$$35$k_$35$$35$1609 k2$35$$35$a1Ra) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804194$35$$35$d2KS$35$$35$k_$35$$35$1609 lq_anf$36$$35$$35$7205759403792804194$35$$35$d2KS) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804199$35$$35$d2KX$35$$35$k_$35$$35$1609 lq_anf$36$$35$$35$7205759403792804199$35$$35$d2KX) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804200$35$$35$d2KY$35$$35$k_$35$$35$1609 lq_anf$36$$35$$35$7205759403792804200$35$$35$d2KY) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804201$35$$35$d2KZ$35$$35$k_$35$$35$1609 lq_anf$36$$35$$35$7205759403792804201$35$$35$d2KZ) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804202$35$$35$d2L0$35$$35$k_$35$$35$1609 lq_anf$36$$35$$35$7205759403792804202$35$$35$d2L0) (exists ((VV$35$$35$F$35$$35$16 Int)) (and (exists ((lq_karg$36$k2$35$$35$a1Ra$35$$35$k_$35$$35$1587 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792804194$35$$35$d2KS$35$$35$k_$35$$35$1587 Int) (lq_karg$36$ds_d2IV$35$$35$k_$35$$35$1587 Int) (lq_karg$36$Scratch.Sample1.algo$35$$35$k_$35$$35$1587 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792804200$35$$35$d2KY$35$$35$k_$35$$35$1587 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792804199$35$$35$d2KX$35$$35$k_$35$$35$1587 Int) (lq_karg$36$VV$35$$35$1586$35$$35$k_$35$$35$1587 Int) (lq_karg$36$ds_d2IU$35$$35$k_$35$$35$1587 Int) (lq_karg$36$ds_d2HL$35$$35$k_$35$$35$1587 Int) (lq_karg$36$ds_d2IT$35$$35$k_$35$$35$1587 Int) (lq_karg$36$ds_d2HK$35$$35$k_$35$$35$1587 Int) (lq_karg$36$ds_d2IW$35$$35$k_$35$$35$1587 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792804201$35$$35$d2KZ$35$$35$k_$35$$35$1587 Bool) (lq_karg$36$ds_d2IX$35$$35$k_$35$$35$1587 Int)) (and (= lq_karg$36$Scratch.Sample1.algo$35$$35$k_$35$$35$1587 Scratch.Sample1.algo) (= lq_karg$36$VV$35$$35$1586$35$$35$k_$35$$35$1587 VV$35$$35$F$35$$35$16) (= lq_karg$36$ds_d2HK$35$$35$k_$35$$35$1587 ds_d2HK) (= lq_karg$36$ds_d2HL$35$$35$k_$35$$35$1587 ds_d2HL) (= lq_karg$36$ds_d2IT$35$$35$k_$35$$35$1587 ds_d2IT) (= lq_karg$36$ds_d2IU$35$$35$k_$35$$35$1587 ds_d2IU) (= lq_karg$36$ds_d2IV$35$$35$k_$35$$35$1587 ds_d2IV) (= lq_karg$36$ds_d2IW$35$$35$k_$35$$35$1587 ds_d2IW) (= lq_karg$36$ds_d2IX$35$$35$k_$35$$35$1587 ds_d2IX) (= lq_karg$36$k2$35$$35$a1Ra$35$$35$k_$35$$35$1587 k2$35$$35$a1Ra) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804194$35$$35$d2KS$35$$35$k_$35$$35$1587 lq_anf$36$$35$$35$7205759403792804194$35$$35$d2KS) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804199$35$$35$d2KX$35$$35$k_$35$$35$1587 lq_anf$36$$35$$35$7205759403792804199$35$$35$d2KX) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804200$35$$35$d2KY$35$$35$k_$35$$35$1587 lq_anf$36$$35$$35$7205759403792804200$35$$35$d2KY) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804201$35$$35$d2KZ$35$$35$k_$35$$35$1587 lq_anf$36$$35$$35$7205759403792804201$35$$35$d2KZ) (exists ((VV$35$$35$F$35$$35$18 Int)) (and (= lq_karg$36$Scratch.Sample1.algo$35$$35$k_$35$$35$1587 Scratch.Sample1.algo) (= lq_karg$36$VV$35$$35$1586$35$$35$k_$35$$35$1587 VV$35$$35$F$35$$35$18) (= lq_karg$36$ds_d2HK$35$$35$k_$35$$35$1587 ds_d2HK) (= lq_karg$36$ds_d2HL$35$$35$k_$35$$35$1587 ds_d2HL) (= lq_karg$36$ds_d2IT$35$$35$k_$35$$35$1587 ds_d2IT) (= lq_karg$36$ds_d2IU$35$$35$k_$35$$35$1587 ds_d2IU) (= lq_karg$36$ds_d2IV$35$$35$k_$35$$35$1587 ds_d2IV) (= lq_karg$36$ds_d2IW$35$$35$k_$35$$35$1587 ds_d2IW) (= lq_karg$36$ds_d2IX$35$$35$k_$35$$35$1587 ds_d2IX) (= lq_karg$36$k2$35$$35$a1Ra$35$$35$k_$35$$35$1587 k2$35$$35$a1Ra) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804194$35$$35$d2KS$35$$35$k_$35$$35$1587 lq_anf$36$$35$$35$7205759403792804194$35$$35$d2KS) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804199$35$$35$d2KX$35$$35$k_$35$$35$1587 lq_anf$36$$35$$35$7205759403792804199$35$$35$d2KX) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804200$35$$35$d2KY$35$$35$k_$35$$35$1587 lq_anf$36$$35$$35$7205759403792804200$35$$35$d2KY) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804201$35$$35$d2KZ$35$$35$k_$35$$35$1587 lq_anf$36$$35$$35$7205759403792804201$35$$35$d2KZ))))) (<= (apply$35$$35$0 (as Scratch.Sample1.getKey Int) ds_d2HL) VV$35$$35$F$35$$35$16) (= lq_karg$36$Scratch.Sample1.algo$35$$35$k_$35$$35$1609 Scratch.Sample1.algo) (= lq_karg$36$VV$35$$35$1608$35$$35$k_$35$$35$1609 VV$35$$35$F$35$$35$16) (= lq_karg$36$ds_d2HK$35$$35$k_$35$$35$1609 ds_d2HK) (= lq_karg$36$ds_d2HL$35$$35$k_$35$$35$1609 ds_d2HL) (= lq_karg$36$ds_d2IT$35$$35$k_$35$$35$1609 ds_d2IT) (= lq_karg$36$ds_d2IU$35$$35$k_$35$$35$1609 ds_d2IU) (= lq_karg$36$ds_d2IV$35$$35$k_$35$$35$1609 ds_d2IV) (= lq_karg$36$ds_d2IW$35$$35$k_$35$$35$1609 ds_d2IW) (= lq_karg$36$ds_d2IX$35$$35$k_$35$$35$1609 ds_d2IX) (= lq_karg$36$k2$35$$35$a1Ra$35$$35$k_$35$$35$1609 k2$35$$35$a1Ra) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804194$35$$35$d2KS$35$$35$k_$35$$35$1609 lq_anf$36$$35$$35$7205759403792804194$35$$35$d2KS) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804199$35$$35$d2KX$35$$35$k_$35$$35$1609 lq_anf$36$$35$$35$7205759403792804199$35$$35$d2KX) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804200$35$$35$d2KY$35$$35$k_$35$$35$1609 lq_anf$36$$35$$35$7205759403792804200$35$$35$d2KY) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804201$35$$35$d2KZ$35$$35$k_$35$$35$1609 lq_anf$36$$35$$35$7205759403792804201$35$$35$d2KZ) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804202$35$$35$d2L0$35$$35$k_$35$$35$1609 lq_anf$36$$35$$35$7205759403792804202$35$$35$d2L0)))))) b$36$$35$$35$224 b$36$$35$$35$241 b$36$$35$$35$242 b$36$$35$$35$228 b$36$$35$$35$213 b$36$$35$$35$229 b$36$$35$$35$232 b$36$$35$$35$41 b$36$$35$$35$44 b$36$$35$$35$236 b$36$$35$$35$237 b$36$$35$$35$174 b$36$$35$$35$238))
(push 1)
(assert (not (<= ds_d2IT VV$35$$35$F$35$$35$13)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and false b$36$$35$$35$200 b$36$$35$$35$41 b$36$$35$$35$201 b$36$$35$$35$202 b$36$$35$$35$44 b$36$$35$$35$174))
(push 1)
(assert (not (<= (apply$35$$35$0 (as Scratch.Sample1.getKey Int) ds_d2Hu) VV$35$$35$F$35$$35$29)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$41 b$36$$35$$35$187 b$36$$35$$35$44 b$36$$35$$35$188 b$36$$35$$35$189 b$36$$35$$35$174 b$36$$35$$35$190 b$36$$35$$35$335 b$36$$35$$35$191))
(push 1)
(assert (not (apply$35$$35$9 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$336 b$36$$35$$35$160 b$36$$35$$35$161 b$36$$35$$35$162 b$36$$35$$35$164 b$36$$35$$35$166 b$36$$35$$35$168 b$36$$35$$35$41 b$36$$35$$35$153 b$36$$35$$35$154 b$36$$35$$35$170 b$36$$35$$35$155 b$36$$35$$35$44 b$36$$35$$35$156 b$36$$35$$35$172 b$36$$35$$35$157 b$36$$35$$35$158 b$36$$35$$35$159))
(push 1)
(assert (not (< 0 (apply$35$$35$0 (as Scratch.Sample1.size Int) VV$35$$35$F$35$$35$31))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(pop 1)
(pop 1)
(exit)
