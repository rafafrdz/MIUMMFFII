1:1-1:1::Scratch.Sample2.$trModule :: "GHC.Types.Module"
9:1-9:4::Scratch.Sample2.die :: "forall a . {VV : [GHC.Types.Char] | false} -> a"
9:5-9:8::msg :: "{VV : [GHC.Types.Char] | false}"
9:17-9:20::msg :: "{v : [GHC.Types.Char] | false}"
18:1-18:7::Scratch.Sample2.okList :: "(Scratch.Sample2.IncList GHC.Integer.Type.Integer)"
18:10-18:11::lq_anf$##7205759403792804562 :: "{v : GHC.Integer.Type.Integer | v == 1}"
18:15-18:16::lq_anf$##7205759403792804563 :: "{v : GHC.Integer.Type.Integer | v == 2}"
18:20-18:21::lq_anf$##7205759403792804564 :: "{v : GHC.Integer.Type.Integer | v == 3}"
18:25-18:28::_ :: "{VV : forall a . (Scratch.Sample2.IncList a) | VV == Emp}"
21:1-21:11::Scratch.Sample2.insertSort :: "forall a . (Ord<[]> a) => [a] -> (Scratch.Sample2.IncList a)"
21:17-21:20::_ :: "{VV : forall a . (Scratch.Sample2.IncList a) | VV == Emp}"
22:21-22:45::Scratch.Sample2.insert :: "forall a .\n(Ord<[]> a) =>\na -> (Scratch.Sample2.IncList a) -> (Scratch.Sample2.IncList a)"
22:28-22:29::x :: "{VV : a | VV == x}"
22:30-22:45::lq_anf$##7205759403792804576 :: "(Scratch.Sample2.IncList a)"
22:42-22:44::xs :: "{v : [a] | v == xs\n           && len v >= 0}"
25:1-25:7::Scratch.Sample2.insert :: "forall a .\n(Ord<[]> a) =>\na -> (Scratch.Sample2.IncList a) -> (Scratch.Sample2.IncList a)"
25:8-25:9::y :: "a"
25:16-25:17::y :: "{VV : a | VV == y}"
25:21-25:24::_ :: "{VV : forall a . (Scratch.Sample2.IncList a) | VV == Emp}"
27:7-27:8::y :: "{VV : a | VV == y}"
27:12-27:13::x :: "{VV : a | VV == x}"
27:16-27:17::y :: "{VV : a | VV == y}"
27:21-27:22::x :: "{VV : a | VV == x}"
27:26-27:28::xs :: "{v : (Scratch.Sample2.IncList {VV : a | x <= VV}) | v == xs}"
28:19-28:20::x :: "{VV : a | VV == x}"
28:24-28:35::lq_anf$##7205759403792804572 :: "(Scratch.Sample2.IncList a)"
28:31-28:32::y :: "{VV : a | VV == y}"
28:33-28:35::xs :: "{v : (Scratch.Sample2.IncList {VV : a | x <= VV}) | v == xs}"
33:1-33:12::Scratch.Sample2.insertSort' :: "forall a . (Ord<[]> a) => [a] -> (Scratch.Sample2.IncList a)"
33:13-33:15::xs :: "[a]"
33:18-33:30::lq_anf$##7205759403792804574 :: "(Scratch.Sample2.IncList a)"
33:24-33:25::f :: "a -> (Scratch.Sample2.IncList a) -> (Scratch.Sample2.IncList a)"
33:26-33:27::_ :: "{VV : forall a . (Scratch.Sample2.IncList a) | VV == Emp\n                                               && VV == b}"
33:28-33:30::xs :: "{v : [a] | v == xs\n           && len v >= 0}"
35:9-35:10::f :: "a -> (Scratch.Sample2.IncList a) -> (Scratch.Sample2.IncList a)"
35:13-35:19::Scratch.Sample2.insert :: "forall a .\n(Ord<[]> a) =>\na -> (Scratch.Sample2.IncList a) -> (Scratch.Sample2.IncList a)"
36:9-36:10::b :: "{VV : forall a . (Scratch.Sample2.IncList a) | VV == Emp}"
36:13-36:16::_ :: "{VV : forall a . (Scratch.Sample2.IncList a) | VV == Emp}"