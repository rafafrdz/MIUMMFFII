(set-option :auto-config false)
(set-option :model true)
(set-option :model.partial false)

(set-option :smt.mbqi false)

(define-sort Str () Int)
(declare-fun strLen (Str) Int)
(declare-fun subString (Str Int Int) Str)
(declare-fun concatString (Str Str) Str)
(define-sort Elt () Int)
(define-sort LSet () (Array Elt Bool))
(define-fun smt_set_emp () LSet ((as const LSet) false))
(define-fun smt_set_sng ((x Elt)) LSet (store ((as const LSet) false) x true))
(define-fun smt_set_mem ((x Elt) (s LSet)) Bool (select s x))
(define-fun smt_set_add ((s LSet) (x Elt)) LSet (store s x true))
(define-fun smt_set_cup ((s1 LSet) (s2 LSet)) LSet ((_ map or) s1 s2))
(define-fun smt_set_cap ((s1 LSet) (s2 LSet)) LSet ((_ map and) s1 s2))
(define-fun smt_set_com ((s LSet)) LSet ((_ map not) s))
(define-fun smt_set_dif ((s1 LSet) (s2 LSet)) LSet (smt_set_cap s1 (smt_set_com s2)))
(define-fun smt_set_sub ((s1 LSet) (s2 LSet)) Bool (= smt_set_emp (smt_set_dif s1 s2)))
(define-sort Map () (Array Elt Elt))
(define-fun smt_map_sel ((m Map) (k Elt)) Elt (select m k))
(define-fun smt_map_sto ((m Map) (k Elt) (v Elt)) Map (store m k v))
(define-fun smt_map_cup ((m1 Map) (m2 Map)) Map ((_ map (+ (Elt Elt) Elt)) m1 m2))
(define-fun smt_map_def ((v Elt)) Map ((as const (Map)) v))
(define-fun bool_to_int ((b Bool)) Int (ite b 1 0))
(define-fun Z3_OP_MUL ((x Int) (y Int)) Int (* x y))
(define-fun Z3_OP_DIV ((x Int) (y Int)) Int (div x y))
(declare-fun lq_anf$36$$35$$35$7205759403792804548$35$$35$d2QA () Str)
(declare-fun x$35$$35$a29v () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804598$35$$35$d2Ro () Int)
(declare-fun GHC.Base.id () Int)
(declare-fun cast_as_int () Int)
(declare-fun lq_tmp$36$x$35$$35$1211 () Int)
(declare-fun VV$35$$35$F$35$$35$31 () Int)
(declare-fun GHC.Real.rem () Int)
(declare-fun GHC.List.init () Int)
(declare-fun lq_karg$36$VV$35$$35$920$35$$35$k_$35$$35$921 () Int)
(declare-fun addrLen () Int)
(declare-fun Scratch.Sample2.hd () Int)
(declare-fun lq_karg$36$xs$35$$35$a29w$35$$35$k_$35$$35$1060 () Int)
(declare-fun papp5 () Int)
(declare-fun GHC.List.iterate () Int)
(declare-fun x_Tuple21 () Int)
(declare-fun lit$36$$39$$58$$60$ () Str)
(declare-fun GHC.Classes.$61$$61$ () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792804568$35$$35$d2QU$35$$35$k_$35$$35$1098 () Int)
(declare-fun GHC.Types.C$35$ () Int)
(declare-fun GHC.List.drop () Int)
(declare-fun Scratch.Sample2.insert () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804573$35$$35$d2QZ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804571$35$$35$d2QX () Bool)
(declare-fun lq_tmp$36$x$35$$35$1119 () Int)
(declare-fun Data.Foldable.length () Int)
(declare-fun x_Tuple33 () Int)
(declare-fun GHC.Types.LT () Int)
(declare-fun VV$35$$35$F$35$$35$45 () Int)
(declare-fun lq_karg$36$VV$35$$35$1059$35$$35$k_$35$$35$1060 () Int)
(declare-fun fix$36$$36$dOrd_a2b0 () Int)
(declare-fun GHC.List.replicate () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804586$35$$35$d2Rc () Int)
(declare-fun GHC.List.zipWith () Int)
(declare-fun GHC.Classes.$62$$61$ () Int)
(declare-fun GHC.Num.fromInteger () Int)
(declare-fun papp3 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792804571$35$$35$d2QX$35$$35$k_$35$$35$1098 () Bool)
(declare-fun lq_anf$36$$35$$35$7205759403792804560$35$$35$d2QM () Int)
(declare-fun GHC.List.span () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804562$35$$35$d2QO () Int)
(declare-fun GHC.Classes.$62$ () Int)
(declare-fun Scratch.Sample2.insertSort$39$ () Int)
(declare-fun lq_karg$36$y$35$$35$a29t$35$$35$k_$35$$35$1098 () Int)
(declare-fun VV$35$$35$F$35$$35$37 () Int)
(declare-fun GHC.Types.False () Bool)
(declare-fun lit$36$$39$Emp () Str)
(declare-fun GHC.List.scanr1 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804568$35$$35$d2QU () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792804562$35$$35$d2QO$35$$35$k_$35$$35$937 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804546$35$$35$d2Qy () Str)
(declare-fun lq_karg$36$VV$35$$35$907$35$$35$k_$35$$35$908 () Int)
(declare-fun lq_karg$36$VV$35$$35$1097$35$$35$k_$35$$35$1098 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792804564$35$$35$d2QQ$35$$35$k_$35$$35$921 () Int)
(declare-fun f$35$$35$a29y () Int)
(declare-fun GHC.Types.$58$ () Int)
(declare-fun GHC.Real.div () Int)
(declare-fun GHC.List.scanl () Int)
(declare-fun lit$36$error () Str)
(declare-fun Control.Exception.Base.recSelError () Int)
(declare-fun GHC.Tuple.$40$$44$$44$$41$ () Int)
(declare-fun papp4 () Int)
(declare-fun GHC.Types.Module () Int)
(declare-fun GHC.List.zip () Int)
(declare-fun GHC.Tuple.$40$$41$ () Int)
(declare-fun GHC.Types.I$35$ () Int)
(declare-fun GHC.Stack.Types.SrcLoc () Int)
(declare-fun GHC.CString.unpackCString$35$ () Int)
(declare-fun VV$35$$35$F$35$$35$30 () Int)
(declare-fun GHC.Types.KindRepFun () Int)
(declare-fun lit$36$tl () Str)
(declare-fun Scratch.Sample2.die () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792804563$35$$35$d2QP$35$$35$k_$35$$35$908 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804541$35$$35$d2Qt () Str)
(declare-fun VV$35$$35$F$35$$35$42 () Int)
(declare-fun GHC.Types.KindRepTYPE () Int)
(declare-fun lq_tmp$36$x$35$$35$1125 () Int)
(declare-fun GHC.List.dropWhile () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804543$35$$35$d2Qv () Str)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792804565$35$$35$d2QR$35$$35$k_$35$$35$937 () Int)
(declare-fun Scratch.Sample2.Emp () Int)
(declare-fun autolen () Int)
(declare-fun Data.Foldable.null () Int)
(declare-fun GHC.Integer.Type.$36$WJn$35$ () Int)
(declare-fun GHC.Real.$94$ () Int)
(declare-fun head () Int)
(declare-fun lq_rnm$36$fldList$35$$35$254 () Int)
(declare-fun GHC.Real.mod () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804565$35$$35$d2QR () Int)
(declare-fun VV$35$$35$F$35$$35$24 () Int)
(declare-fun lq_karg$36$Scratch.Sample2.okList$35$$35$k_$35$$35$1098 () Int)
(declare-fun lq_tmp$36$x$35$$35$1173 () Int)
(declare-fun GHC.Types.$36$WKindRepTYPE () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792804563$35$$35$d2QP$35$$35$k_$35$$35$921 () Int)
(declare-fun GHC.Real.divMod () Int)
(declare-fun lq_karg$36$y$35$$35$a29t$35$$35$k_$35$$35$980 () Int)
(declare-fun GHC.Integer.Type.Jn$35$ () Int)
(declare-fun GHC.Classes.compare () Int)
(declare-fun lq_tmp$36$x$35$$35$783 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804552$35$$35$d2QE () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792804570$35$$35$d2QW$35$$35$k_$35$$35$1060 () Bool)
(declare-fun ds_d2Pm () Int)
(declare-fun papp2 () Int)
(declare-fun VV$35$$35$F$35$$35$50 () Str)
(declare-fun GHC.Real.toInteger () Int)
(declare-fun GHC.Real.quotRem () Int)
(declare-fun GHC.Stack.Types.EmptyCallStack () Int)
(declare-fun GHC.Types.krep$36$$42$Arr$42$ () Int)
(declare-fun GHC.Stack.Types.emptyCallStack () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792804568$35$$35$d2QU$35$$35$k_$35$$35$980 () Int)
(declare-fun GHC.List.reverse () Int)
(declare-fun GHC.Integer.Type.$36$WJp$35$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804549$35$$35$d2QB () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792804562$35$$35$d2QO$35$$35$k_$35$$35$908 () Int)
(declare-fun GHC.List.filter () Int)
(declare-fun lq_karg$36$ds_d2Pm$35$$35$k_$35$$35$1098 () Int)
(declare-fun fromJust () Int)
(declare-fun GHC.Types.KindRepTyConApp () Int)
(declare-fun GHC.List.cycle () Int)
(declare-fun GHC.List.$33$$33$ () Int)
(declare-fun GHC.List.tail () Int)
(declare-fun lit$36$Use$32$of$32$partial$32$record$32$field$32$selector () Str)
(declare-fun xs$35$$35$a29w () Int)
(declare-fun papp7 () Int)
(declare-fun GHC.Classes.$47$$61$ () Int)
(declare-fun lq_karg$36$ds_d2Pm$35$$35$k_$35$$35$1060 () Int)
(declare-fun fix$36$$36$dIP_a2c7 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804576$35$$35$d2R2 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804557$35$$35$d2QJ () Int)
(declare-fun GHC.List.break () Int)
(declare-fun GHC.Types.True () Bool)
(declare-fun lq_tmp$36$x$35$$35$619 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804555$35$$35$d2QH () Int)
(declare-fun VV$35$$35$F$35$$35$25 () Int)
(declare-fun GHC.Types.$91$$93$ () Int)
(declare-fun GHC.List.splitAt () Int)
(declare-fun GHC.Base.$43$$43$ () Int)
(declare-fun VV$35$$35$F$35$$35$43 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804574$35$$35$d2R0 () Int)
(declare-fun GHC.Real.$58$$37$ () Int)
(declare-fun lq_tmp$36$x$35$$35$1447 () Int)
(declare-fun GHC.Tuple.$40$$44$$41$ () Int)
(declare-fun GHC.Real.quot () Int)
(declare-fun GHC.Real.$47$ () Int)
(declare-fun fldList () Int)
(declare-fun lq_karg$36$VV$35$$35$936$35$$35$k_$35$$35$937 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792804570$35$$35$d2QW$35$$35$k_$35$$35$1098 () Bool)
(declare-fun GHC.Classes.$38$$38$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804580$35$$35$d2R6 () Int)
(declare-fun lq_karg$36$VV$35$$35$622$35$$35$k_$35$$35$623 () Str)
(declare-fun lq_tmp$36$x$35$$35$1291 () Int)
(declare-fun lq_tmp$36$x$35$$35$740 () Int)
(declare-fun Data.Foldable.$36$fFoldable$91$$93$ () Int)
(declare-fun GHC.Types.GT () Int)
(declare-fun GHC.Classes.C$58$IP () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804563$35$$35$d2QP () Int)
(declare-fun GHC.Classes.$124$$124$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804567$35$$35$d2QT () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792804563$35$$35$d2QP$35$$35$k_$35$$35$937 () Int)
(declare-fun lq_tmp$36$x$35$$35$830 () Int)
(declare-fun Data.Either.Left () Int)
(declare-fun GHC.List.last () Int)
(declare-fun VV$35$$35$F$35$$35$46 () Str)
(declare-fun lq_karg$36$Scratch.Sample2.okList$35$$35$k_$35$$35$1060 () Int)
(declare-fun GHC.Integer.Type.S$35$ () Int)
(declare-fun lq_tmp$36$x$35$$35$1121 () Int)
(declare-fun GHC.List.scanl1 () Int)
(declare-fun y$35$$35$a29t () Int)
(declare-fun Data.Either.Right () Int)
(declare-fun lq_karg$36$ds_d2Pm$35$$35$k_$35$$35$980 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804554$35$$35$d2QG () Int)
(declare-fun GHC.Num.$45$ () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792804565$35$$35$d2QR$35$$35$k_$35$$35$921 () Int)
(declare-fun len () Int)
(declare-fun papp6 () Int)
(declare-fun GHC.Base.. () Int)
(declare-fun x_Tuple22 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804550$35$$35$d2QC () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804558$35$$35$d2QK () Int)
(declare-fun VV$35$$35$F$35$$35$26 () Int)
(declare-fun fix$36$$36$dOrd_a2bu () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804564$35$$35$d2QQ () Int)
(declare-fun GHC.Types.KindRepTypeLitS () Int)
(declare-fun GHC.Real.$36$W$58$$37$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804566$35$$35$d2QS () Int)
(declare-fun VV$35$$35$F$35$$35$40 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792804564$35$$35$d2QQ$35$$35$k_$35$$35$937 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804542$35$$35$d2Qu () Str)
(declare-fun msg$35$$35$a29q () Str)
(declare-fun GHC.Real.fromRational () Int)
(declare-fun isJust () Int)
(declare-fun lit$36$src$47$Scratch$47$Sample2.hs () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792804593$35$$35$d2Rj () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792804566$35$$35$d2QS$35$$35$k_$35$$35$937 () Int)
(declare-fun GHC.List.takeWhile () Int)
(declare-fun GHC.Types.TrNameD () Int)
(declare-fun lq_karg$36$Scratch.Sample2.okList$35$$35$k_$35$$35$980 () Int)
(declare-fun fix$36$$36$dOrd_a2aN () Int)
(declare-fun lit$36$LH$45$verificacion$45$asistida$45$0.1.0.0$45$B0H5GdfJzuc2jwReQRD3tY () Str)
(declare-fun GHC.Types.KindRepVar () Int)
(declare-fun GHC.Stack.Types.pushCallStack () Int)
(declare-fun GHC.Types.KindRepTypeLitD () Int)
(declare-fun VV$35$$35$F$35$$35$21 () Int)
(declare-fun fix$36$$36$krep_a2cr () Int)
(declare-fun x_Tuple31 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792804571$35$$35$d2QX$35$$35$k_$35$$35$1060 () Bool)
(declare-fun GHC.Integer.Type.Jp$35$ () Int)
(declare-fun Scratch.Sample2.insertSort () Int)
(declare-fun lq_tmp$36$x$35$$35$1120 () Int)
(declare-fun GHC.IO.Exception.IOError () Int)
(declare-fun GHC.List.take () Int)
(declare-fun GHC.Stack.Types.PushCallStack () Int)
(declare-fun lq_karg$36$y$35$$35$a29t$35$$35$k_$35$$35$1060 () Int)
(declare-fun GHC.Classes.$60$$61$ () Int)
(declare-fun GHC.Types.TrNameS () Int)
(declare-fun GHC.Enum.C$58$Bounded () Int)
(declare-fun GHC.Base.map () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804572$35$$35$d2QY () Int)
(declare-fun lq_tmp$36$x$35$$35$741 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792804562$35$$35$d2QO$35$$35$k_$35$$35$921 () Int)
(declare-fun GHC.Base.$36$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804561$35$$35$d2QN () Int)
(declare-fun papp1 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792804568$35$$35$d2QU$35$$35$k_$35$$35$1060 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804547$35$$35$d2Qz () Str)
(declare-fun x$35$$35$a29r () Int)
(declare-fun GHC.Classes.$60$ () Int)
(declare-fun tail () Int)
(declare-fun cast_as () Int)
(declare-fun lq_tmp$36$x$35$$35$777 () Int)
(declare-fun GHC.Types.TyCon () Int)
(declare-fun GHC.Stack.Types.FreezeCallStack () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804569$35$$35$d2QV () Int)
(declare-fun Scratch.Sample2.tl () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804545$35$$35$d2Qx () Str)
(declare-fun Data.Foldable.foldr () Int)
(declare-fun GHC.Num.$42$ () Int)
(declare-fun lq_tmp$36$x$35$$35$1423 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804556$35$$35$d2QI () Int)
(declare-fun GHC.Real.recip () Int)
(declare-fun lit$36$IncList () Str)
(declare-fun lq_karg$36$xs$35$$35$a29w$35$$35$k_$35$$35$1098 () Int)
(declare-fun lq_karg$36$VV$35$$35$979$35$$35$k_$35$$35$980 () Int)
(declare-fun lit$36$Scratch.Sample2 () Str)
(declare-fun GHC.Maybe.Nothing () Int)
(declare-fun VV$35$$35$F$35$$35$27 () Int)
(declare-fun VV$35$$35$F$35$$35$41 () Int)
(declare-fun GHC.Types.EQ () Int)
(declare-fun lq_tmp$36$x$35$$35$1467 () Int)
(declare-fun GHC.List.scanr () Int)
(declare-fun lq_tmp$36$x$35$$35$1440 () Int)
(declare-fun totalityError () Int)
(declare-fun GHC.Num.negate () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792804564$35$$35$d2QQ$35$$35$k_$35$$35$908 () Int)
(declare-fun GHC.Real.fromIntegral () Int)
(declare-fun GHC.Maybe.Just () Int)
(declare-fun Scratch.Sample2.okList () Int)
(declare-fun GHC.Classes.min () Int)
(declare-fun lq_tmp$36$x$35$$35$742 () Int)
(declare-fun Scratch.Sample2.$58$$60$ () Int)
(declare-fun lq_tmp$36$x$35$$35$876 () Int)
(declare-fun lq_karg$36$x$35$$35$a29v$35$$35$k_$35$$35$1060 () Int)
(declare-fun GHC.Types.$36$WKindRepVar () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804544$35$$35$d2Qw () Str)
(declare-fun fix$36$$36$krep_a2cq () Int)
(declare-fun x_Tuple32 () Int)
(declare-fun VV$35$$35$F$35$$35$44 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804559$35$$35$d2QL () Int)
(declare-fun VV$35$$35$F$35$$35$34 () Int)
(declare-fun GHC.List.repeat () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804551$35$$35$d2QD () Int)
(declare-fun GHC.Classes.not () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804570$35$$35$d2QW () Bool)
(declare-fun lit$36$hd () Str)
(declare-fun GHC.Num.$43$ () Int)
(declare-fun Data.Tuple.fst () Int)
(declare-fun GHC.Types.KindRepApp () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804578$35$$35$d2R4 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804553$35$$35$d2QF () Int)
(declare-fun GHC.Err.error () Int)
(declare-fun snd () Int)
(declare-fun fst () Int)
(declare-fun lq_karg$36$x$35$$35$a29v$35$$35$k_$35$$35$1098 () Int)
(declare-fun Data.Tuple.snd () Int)
(declare-fun apply$35$$35$13 (Int (_ BitVec 32)) Bool)
(declare-fun apply$35$$35$9 (Int Str) Bool)
(declare-fun apply$35$$35$6 (Int Bool) Str)
(declare-fun apply$35$$35$11 (Int Str) (_ BitVec 32))
(declare-fun apply$35$$35$15 (Int (_ BitVec 32)) (_ BitVec 32))
(declare-fun apply$35$$35$0 (Int Int) Int)
(declare-fun apply$35$$35$8 (Int Str) Int)
(declare-fun apply$35$$35$1 (Int Int) Bool)
(declare-fun apply$35$$35$7 (Int Bool) (_ BitVec 32))
(declare-fun apply$35$$35$14 (Int (_ BitVec 32)) Str)
(declare-fun apply$35$$35$10 (Int Str) Str)
(declare-fun apply$35$$35$5 (Int Bool) Bool)
(declare-fun apply$35$$35$2 (Int Int) Str)
(declare-fun apply$35$$35$12 (Int (_ BitVec 32)) Int)
(declare-fun apply$35$$35$3 (Int Int) (_ BitVec 32))
(declare-fun apply$35$$35$4 (Int Bool) Int)
(declare-fun coerce$35$$35$13 ((_ BitVec 32)) Bool)
(declare-fun coerce$35$$35$9 (Str) Bool)
(declare-fun coerce$35$$35$6 (Bool) Str)
(declare-fun coerce$35$$35$11 (Str) (_ BitVec 32))
(declare-fun coerce$35$$35$15 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun coerce$35$$35$0 (Int) Int)
(declare-fun coerce$35$$35$8 (Str) Int)
(declare-fun coerce$35$$35$1 (Int) Bool)
(declare-fun coerce$35$$35$7 (Bool) (_ BitVec 32))
(declare-fun coerce$35$$35$14 ((_ BitVec 32)) Str)
(declare-fun coerce$35$$35$10 (Str) Str)
(declare-fun coerce$35$$35$5 (Bool) Bool)
(declare-fun coerce$35$$35$2 (Int) Str)
(declare-fun coerce$35$$35$12 ((_ BitVec 32)) Int)
(declare-fun coerce$35$$35$3 (Int) (_ BitVec 32))
(declare-fun coerce$35$$35$4 (Bool) Int)
(declare-fun smt_lambda$35$$35$13 ((_ BitVec 32) Bool) Int)
(declare-fun smt_lambda$35$$35$9 (Str Bool) Int)
(declare-fun smt_lambda$35$$35$6 (Bool Str) Int)
(declare-fun smt_lambda$35$$35$11 (Str (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$15 ((_ BitVec 32) (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$0 (Int Int) Int)
(declare-fun smt_lambda$35$$35$8 (Str Int) Int)
(declare-fun smt_lambda$35$$35$1 (Int Bool) Int)
(declare-fun smt_lambda$35$$35$7 (Bool (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$14 ((_ BitVec 32) Str) Int)
(declare-fun smt_lambda$35$$35$10 (Str Str) Int)
(declare-fun smt_lambda$35$$35$5 (Bool Bool) Int)
(declare-fun smt_lambda$35$$35$2 (Int Str) Int)
(declare-fun smt_lambda$35$$35$12 ((_ BitVec 32) Int) Int)
(declare-fun smt_lambda$35$$35$3 (Int (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$4 (Bool Int) Int)
(declare-fun lam_arg$35$$35$1$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$2$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$3$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$4$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$5$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$6$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$7$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$1$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$2$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$3$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$4$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$5$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$6$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$7$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$1$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$2$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$3$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$4$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$5$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$6$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$7$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$1$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$2$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$3$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$4$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$5$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$6$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$7$35$$35$4 () Bool)

(assert (distinct lit$36$hd lit$36$Scratch.Sample2 lit$36$IncList lit$36$LH$45$verificacion$45$asistida$45$0.1.0.0$45$B0H5GdfJzuc2jwReQRD3tY lit$36$src$47$Scratch$47$Sample2.hs lit$36$Use$32$of$32$partial$32$record$32$field$32$selector lit$36$tl lit$36$error lit$36$$39$Emp lit$36$$39$$58$$60$))


(assert (distinct GHC.Types.True GHC.Types.False))
(assert (distinct GHC.Types.EQ GHC.Types.GT GHC.Types.LT))
(assert (= (strLen lit$36$$39$$58$$60$) 3))
(assert (= (strLen lit$36$$39$Emp) 4))
(assert (= (strLen lit$36$error) 5))
(assert (= (strLen lit$36$tl) 2))
(assert (= (strLen lit$36$Use$32$of$32$partial$32$record$32$field$32$selector) 36))
(assert (= (strLen lit$36$src$47$Scratch$47$Sample2.hs) 22))
(assert (= (strLen lit$36$LH$45$verificacion$45$asistida$45$0.1.0.0$45$B0H5GdfJzuc2jwReQRD3tY) 55))
(assert (= (strLen lit$36$IncList) 7))
(assert (= (strLen lit$36$Scratch.Sample2) 15))
(assert (= (strLen lit$36$hd) 2))
(push 1)
(define-fun b$36$$35$$35$128 () Bool (= lq_anf$36$$35$$35$7205759403792804550$35$$35$d2QC lq_anf$36$$35$$35$7205759403792804549$35$$35$d2QB))
(define-fun b$36$$35$$35$144 () Bool (= lq_anf$36$$35$$35$7205759403792804562$35$$35$d2QO 1))
(define-fun b$36$$35$$35$273 () Bool (and (= VV$35$$35$F$35$$35$45 3) (= VV$35$$35$F$35$$35$45 lq_anf$36$$35$$35$7205759403792804564$35$$35$d2QQ)))
(define-fun b$36$$35$$35$129 () Bool (= lq_anf$36$$35$$35$7205759403792804551$35$$35$d2QD 11))
(define-fun b$36$$35$$35$145 () Bool (= lq_anf$36$$35$$35$7205759403792804563$35$$35$d2QP 2))
(define-fun b$36$$35$$35$274 () Bool (<= x$35$$35$a29v VV$35$$35$F$35$$35$30))
(define-fun b$36$$35$$35$130 () Bool (= lq_anf$36$$35$$35$7205759403792804552$35$$35$d2QE lq_anf$36$$35$$35$7205759403792804551$35$$35$d2QD))
(define-fun b$36$$35$$35$146 () Bool (= lq_anf$36$$35$$35$7205759403792804564$35$$35$d2QQ 3))
(define-fun b$36$$35$$35$162 () Bool (and (= lq_anf$36$$35$$35$7205759403792804568$35$$35$d2QU ds_d2Pm) (= lq_anf$36$$35$$35$7205759403792804568$35$$35$d2QU (apply$35$$35$0 (apply$35$$35$0 (as Scratch.Sample2.$58$$60$ Int) x$35$$35$a29v) xs$35$$35$a29w)) (= (apply$35$$35$0 (as Scratch.Sample2.hd Int) lq_anf$36$$35$$35$7205759403792804568$35$$35$d2QU) x$35$$35$a29v) (= (apply$35$$35$0 (as Scratch.Sample2.tl Int) lq_anf$36$$35$$35$7205759403792804568$35$$35$d2QU) xs$35$$35$a29w)))
(define-fun b$36$$35$$35$275 () Bool false)
(define-fun b$36$$35$$35$131 () Bool (= lq_anf$36$$35$$35$7205759403792804553$35$$35$d2QF 9))
(define-fun b$36$$35$$35$163 () Bool (= lq_anf$36$$35$$35$7205759403792804570$35$$35$d2QW (<= y$35$$35$a29t x$35$$35$a29v)))
(define-fun b$36$$35$$35$276 () Bool (= VV$35$$35$F$35$$35$31 y$35$$35$a29t))
(define-fun b$36$$35$$35$132 () Bool (= lq_anf$36$$35$$35$7205759403792804554$35$$35$d2QG lq_anf$36$$35$$35$7205759403792804553$35$$35$d2QF))
(define-fun b$36$$35$$35$148 () Bool (and (= (apply$35$$35$0 (as Scratch.Sample2.hd Int) lq_anf$36$$35$$35$7205759403792804566$35$$35$d2QS) lq_anf$36$$35$$35$7205759403792804564$35$$35$d2QQ) (= (apply$35$$35$0 (as Scratch.Sample2.tl Int) lq_anf$36$$35$$35$7205759403792804566$35$$35$d2QS) lq_anf$36$$35$$35$7205759403792804565$35$$35$d2QR)))
(define-fun b$36$$35$$35$164 () Bool (and (= lq_anf$36$$35$$35$7205759403792804571$35$$35$d2QX (<= y$35$$35$a29t x$35$$35$a29v)) (= lq_anf$36$$35$$35$7205759403792804571$35$$35$d2QX lq_anf$36$$35$$35$7205759403792804570$35$$35$d2QW)))
(define-fun b$36$$35$$35$133 () Bool (= lq_anf$36$$35$$35$7205759403792804555$35$$35$d2QH 20))
(define-fun b$36$$35$$35$149 () Bool (and (= (apply$35$$35$0 (as Scratch.Sample2.hd Int) lq_anf$36$$35$$35$7205759403792804567$35$$35$d2QT) lq_anf$36$$35$$35$7205759403792804563$35$$35$d2QP) (= (apply$35$$35$0 (as Scratch.Sample2.tl Int) lq_anf$36$$35$$35$7205759403792804567$35$$35$d2QT) lq_anf$36$$35$$35$7205759403792804566$35$$35$d2QS)))
(define-fun b$36$$35$$35$165 () Bool (and (= lq_anf$36$$35$$35$7205759403792804571$35$$35$d2QX (<= y$35$$35$a29t x$35$$35$a29v)) (= lq_anf$36$$35$$35$7205759403792804571$35$$35$d2QX lq_anf$36$$35$$35$7205759403792804570$35$$35$d2QW)))
(define-fun b$36$$35$$35$134 () Bool (= lq_anf$36$$35$$35$7205759403792804556$35$$35$d2QI lq_anf$36$$35$$35$7205759403792804555$35$$35$d2QH))
(define-fun b$36$$35$$35$166 () Bool (and (not lq_anf$36$$35$$35$7205759403792804571$35$$35$d2QX) (= lq_anf$36$$35$$35$7205759403792804571$35$$35$d2QX (<= y$35$$35$a29t x$35$$35$a29v)) (= lq_anf$36$$35$$35$7205759403792804571$35$$35$d2QX lq_anf$36$$35$$35$7205759403792804570$35$$35$d2QW)))
(define-fun b$36$$35$$35$119 () Bool (= lq_anf$36$$35$$35$7205759403792804541$35$$35$d2Qt lit$36$error))
(define-fun b$36$$35$$35$264 () Bool (<= x$35$$35$a29v VV$35$$35$F$35$$35$24))
(define-fun b$36$$35$$35$120 () Bool (and (= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792804542$35$$35$d2Qu) (strLen lq_anf$36$$35$$35$7205759403792804541$35$$35$d2Qt)) (>= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792804542$35$$35$d2Qu) 0) (= lq_anf$36$$35$$35$7205759403792804542$35$$35$d2Qu lq_anf$36$$35$$35$7205759403792804541$35$$35$d2Qt)))
(define-fun b$36$$35$$35$168 () Bool (and (= lq_anf$36$$35$$35$7205759403792804571$35$$35$d2QX (<= y$35$$35$a29t x$35$$35$a29v)) (= lq_anf$36$$35$$35$7205759403792804571$35$$35$d2QX lq_anf$36$$35$$35$7205759403792804570$35$$35$d2QW)))
(define-fun b$36$$35$$35$121 () Bool (= lq_anf$36$$35$$35$7205759403792804543$35$$35$d2Qv lit$36$LH$45$verificacion$45$asistida$45$0.1.0.0$45$B0H5GdfJzuc2jwReQRD3tY))
(define-fun b$36$$35$$35$137 () Bool (and (= (apply$35$$35$2 (as fst Int) lq_anf$36$$35$$35$7205759403792804558$35$$35$d2QK) lq_anf$36$$35$$35$7205759403792804542$35$$35$d2Qu) (= (apply$35$$35$0 (as snd Int) lq_anf$36$$35$$35$7205759403792804558$35$$35$d2QK) lq_anf$36$$35$$35$7205759403792804557$35$$35$d2QJ) (= (apply$35$$35$2 (as x_Tuple21 Int) lq_anf$36$$35$$35$7205759403792804558$35$$35$d2QK) lq_anf$36$$35$$35$7205759403792804542$35$$35$d2Qu) (= (apply$35$$35$0 (as x_Tuple22 Int) lq_anf$36$$35$$35$7205759403792804558$35$$35$d2QK) lq_anf$36$$35$$35$7205759403792804557$35$$35$d2QJ)))
(define-fun b$36$$35$$35$169 () Bool (and lq_anf$36$$35$$35$7205759403792804571$35$$35$d2QX (= lq_anf$36$$35$$35$7205759403792804571$35$$35$d2QX (<= y$35$$35$a29t x$35$$35$a29v)) (= lq_anf$36$$35$$35$7205759403792804571$35$$35$d2QX lq_anf$36$$35$$35$7205759403792804570$35$$35$d2QW)))
(define-fun b$36$$35$$35$266 () Bool (<= x$35$$35$a29v VV$35$$35$F$35$$35$25))
(define-fun b$36$$35$$35$122 () Bool (and (= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792804544$35$$35$d2Qw) (strLen lq_anf$36$$35$$35$7205759403792804543$35$$35$d2Qv)) (>= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792804544$35$$35$d2Qw) 0) (= lq_anf$36$$35$$35$7205759403792804544$35$$35$d2Qw lq_anf$36$$35$$35$7205759403792804543$35$$35$d2Qv)))
(define-fun b$36$$35$$35$170 () Bool (and (= (apply$35$$35$0 (as Scratch.Sample2.hd Int) lq_anf$36$$35$$35$7205759403792804573$35$$35$d2QZ) x$35$$35$a29v) (= (apply$35$$35$0 (as Scratch.Sample2.tl Int) lq_anf$36$$35$$35$7205759403792804573$35$$35$d2QZ) xs$35$$35$a29w)))
(define-fun b$36$$35$$35$43 () Bool (not GHC.Types.False))
(define-fun b$36$$35$$35$123 () Bool (= lq_anf$36$$35$$35$7205759403792804545$35$$35$d2Qx lit$36$Scratch.Sample2))
(define-fun b$36$$35$$35$139 () Bool (= lq_anf$36$$35$$35$7205759403792804560$35$$35$d2QM lq_anf$36$$35$$35$7205759403792804559$35$$35$d2QL))
(define-fun b$36$$35$$35$155 () Bool (= lq_anf$36$$35$$35$7205759403792804568$35$$35$d2QU ds_d2Pm))
(define-fun b$36$$35$$35$268 () Bool (= VV$35$$35$F$35$$35$26 x$35$$35$a29v))
(define-fun b$36$$35$$35$124 () Bool (and (= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792804546$35$$35$d2Qy) (strLen lq_anf$36$$35$$35$7205759403792804545$35$$35$d2Qx)) (>= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792804546$35$$35$d2Qy) 0) (= lq_anf$36$$35$$35$7205759403792804546$35$$35$d2Qy lq_anf$36$$35$$35$7205759403792804545$35$$35$d2Qx)))
(define-fun b$36$$35$$35$156 () Bool (= lq_anf$36$$35$$35$7205759403792804568$35$$35$d2QU ds_d2Pm))
(define-fun b$36$$35$$35$269 () Bool (and (= VV$35$$35$F$35$$35$42 2) (= VV$35$$35$F$35$$35$42 lq_anf$36$$35$$35$7205759403792804563$35$$35$d2QP)))
(define-fun b$36$$35$$35$125 () Bool (= lq_anf$36$$35$$35$7205759403792804547$35$$35$d2Qz lit$36$src$47$Scratch$47$Sample2.hs))
(define-fun b$36$$35$$35$157 () Bool (and (= lq_anf$36$$35$$35$7205759403792804568$35$$35$d2QU (as Scratch.Sample2.Emp Int)) (= lq_anf$36$$35$$35$7205759403792804568$35$$35$d2QU ds_d2Pm)))
(define-fun b$36$$35$$35$46 () Bool GHC.Types.True)
(define-fun b$36$$35$$35$126 () Bool (and (= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792804548$35$$35$d2QA) (strLen lq_anf$36$$35$$35$7205759403792804547$35$$35$d2Qz)) (>= (apply$35$$35$8 (as len Int) lq_anf$36$$35$$35$7205759403792804548$35$$35$d2QA) 0) (= lq_anf$36$$35$$35$7205759403792804548$35$$35$d2QA lq_anf$36$$35$$35$7205759403792804547$35$$35$d2Qz)))
(define-fun b$36$$35$$35$127 () Bool (= lq_anf$36$$35$$35$7205759403792804549$35$$35$d2QB 9))
(define-fun b$36$$35$$35$159 () Bool (= lq_anf$36$$35$$35$7205759403792804568$35$$35$d2QU ds_d2Pm))
(push 1)
(assert (and true b$36$$35$$35$275 b$36$$35$$35$43 b$36$$35$$35$46))
(push 1)
(assert (not false))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$8 (as len Int) VV$35$$35$F$35$$35$46) 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$8 (as len Int) VV$35$$35$F$35$$35$46) 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$8 (as len Int) VV$35$$35$F$35$$35$46) 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
(pop 1)
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
(pop 1)
(push 1)
(push 1)
(assert (and false b$36$$35$$35$43 b$36$$35$$35$155 b$36$$35$$35$156 b$36$$35$$35$157 b$36$$35$$35$46))
(push 1)
(assert (not (<= y$35$$35$a29t VV$35$$35$F$35$$35$34)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and false b$36$$35$$35$128 b$36$$35$$35$129 b$36$$35$$35$130 b$36$$35$$35$131 b$36$$35$$35$132 (and (= VV$35$$35$F$35$$35$50 msg$35$$35$a29q) (>= (apply$35$$35$8 (as len Int) VV$35$$35$F$35$$35$50) 0)) b$36$$35$$35$133 b$36$$35$$35$134 b$36$$35$$35$119 b$36$$35$$35$120 b$36$$35$$35$121 b$36$$35$$35$137 b$36$$35$$35$122 b$36$$35$$35$43 b$36$$35$$35$123 b$36$$35$$35$139 b$36$$35$$35$124 b$36$$35$$35$125 b$36$$35$$35$46 b$36$$35$$35$126 (>= (apply$35$$35$8 (as len Int) msg$35$$35$a29q) 0) b$36$$35$$35$127))
(push 1)
(assert (not false))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (or (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403792804568$35$$35$d2QU$35$$35$k_$35$$35$1098 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792804571$35$$35$d2QX$35$$35$k_$35$$35$1098 Bool) (lq_karg$36$y$35$$35$a29t$35$$35$k_$35$$35$1098 Int) (lq_karg$36$VV$35$$35$1097$35$$35$k_$35$$35$1098 Int) (lq_karg$36$Scratch.Sample2.okList$35$$35$k_$35$$35$1098 Int) (lq_karg$36$ds_d2Pm$35$$35$k_$35$$35$1098 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792804570$35$$35$d2QW$35$$35$k_$35$$35$1098 Bool) (lq_karg$36$xs$35$$35$a29w$35$$35$k_$35$$35$1098 Int) (lq_karg$36$x$35$$35$a29v$35$$35$k_$35$$35$1098 Int)) (and (= lq_karg$36$Scratch.Sample2.okList$35$$35$k_$35$$35$1098 Scratch.Sample2.okList) (= lq_karg$36$VV$35$$35$1097$35$$35$k_$35$$35$1098 VV$35$$35$F$35$$35$21) (= lq_karg$36$ds_d2Pm$35$$35$k_$35$$35$1098 ds_d2Pm) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804568$35$$35$d2QU$35$$35$k_$35$$35$1098 lq_anf$36$$35$$35$7205759403792804568$35$$35$d2QU) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804570$35$$35$d2QW$35$$35$k_$35$$35$1098 lq_anf$36$$35$$35$7205759403792804570$35$$35$d2QW) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804571$35$$35$d2QX$35$$35$k_$35$$35$1098 lq_anf$36$$35$$35$7205759403792804571$35$$35$d2QX) (= lq_karg$36$x$35$$35$a29v$35$$35$k_$35$$35$1098 x$35$$35$a29v) (= lq_karg$36$xs$35$$35$a29w$35$$35$k_$35$$35$1098 xs$35$$35$a29w) (= lq_karg$36$y$35$$35$a29t$35$$35$k_$35$$35$1098 y$35$$35$a29t) (exists ((VV$35$$35$F$35$$35$26 Int)) (and (= VV$35$$35$F$35$$35$26 x$35$$35$a29v) (= lq_karg$36$Scratch.Sample2.okList$35$$35$k_$35$$35$1098 Scratch.Sample2.okList) (= lq_karg$36$VV$35$$35$1097$35$$35$k_$35$$35$1098 VV$35$$35$F$35$$35$26) (= lq_karg$36$ds_d2Pm$35$$35$k_$35$$35$1098 ds_d2Pm) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804568$35$$35$d2QU$35$$35$k_$35$$35$1098 lq_anf$36$$35$$35$7205759403792804568$35$$35$d2QU) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804570$35$$35$d2QW$35$$35$k_$35$$35$1098 lq_anf$36$$35$$35$7205759403792804570$35$$35$d2QW) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804571$35$$35$d2QX$35$$35$k_$35$$35$1098 lq_anf$36$$35$$35$7205759403792804571$35$$35$d2QX) (= lq_karg$36$x$35$$35$a29v$35$$35$k_$35$$35$1098 x$35$$35$a29v) (= lq_karg$36$xs$35$$35$a29w$35$$35$k_$35$$35$1098 xs$35$$35$a29w) (= lq_karg$36$y$35$$35$a29t$35$$35$k_$35$$35$1098 y$35$$35$a29t))))) (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403792804568$35$$35$d2QU$35$$35$k_$35$$35$1098 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792804571$35$$35$d2QX$35$$35$k_$35$$35$1098 Bool) (lq_karg$36$y$35$$35$a29t$35$$35$k_$35$$35$1098 Int) (lq_karg$36$VV$35$$35$1097$35$$35$k_$35$$35$1098 Int) (lq_karg$36$Scratch.Sample2.okList$35$$35$k_$35$$35$1098 Int) (lq_karg$36$ds_d2Pm$35$$35$k_$35$$35$1098 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792804570$35$$35$d2QW$35$$35$k_$35$$35$1098 Bool) (lq_karg$36$xs$35$$35$a29w$35$$35$k_$35$$35$1098 Int) (lq_karg$36$x$35$$35$a29v$35$$35$k_$35$$35$1098 Int)) (and (= lq_karg$36$Scratch.Sample2.okList$35$$35$k_$35$$35$1098 Scratch.Sample2.okList) (= lq_karg$36$VV$35$$35$1097$35$$35$k_$35$$35$1098 VV$35$$35$F$35$$35$21) (= lq_karg$36$ds_d2Pm$35$$35$k_$35$$35$1098 ds_d2Pm) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804568$35$$35$d2QU$35$$35$k_$35$$35$1098 lq_anf$36$$35$$35$7205759403792804568$35$$35$d2QU) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804570$35$$35$d2QW$35$$35$k_$35$$35$1098 lq_anf$36$$35$$35$7205759403792804570$35$$35$d2QW) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804571$35$$35$d2QX$35$$35$k_$35$$35$1098 lq_anf$36$$35$$35$7205759403792804571$35$$35$d2QX) (= lq_karg$36$x$35$$35$a29v$35$$35$k_$35$$35$1098 x$35$$35$a29v) (= lq_karg$36$xs$35$$35$a29w$35$$35$k_$35$$35$1098 xs$35$$35$a29w) (= lq_karg$36$y$35$$35$a29t$35$$35$k_$35$$35$1098 y$35$$35$a29t) (exists ((VV$35$$35$F$35$$35$25 Int)) (and (<= x$35$$35$a29v VV$35$$35$F$35$$35$25) (= lq_karg$36$Scratch.Sample2.okList$35$$35$k_$35$$35$1098 Scratch.Sample2.okList) (= lq_karg$36$VV$35$$35$1097$35$$35$k_$35$$35$1098 VV$35$$35$F$35$$35$25) (= lq_karg$36$ds_d2Pm$35$$35$k_$35$$35$1098 ds_d2Pm) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804568$35$$35$d2QU$35$$35$k_$35$$35$1098 lq_anf$36$$35$$35$7205759403792804568$35$$35$d2QU) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804570$35$$35$d2QW$35$$35$k_$35$$35$1098 lq_anf$36$$35$$35$7205759403792804570$35$$35$d2QW) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804571$35$$35$d2QX$35$$35$k_$35$$35$1098 lq_anf$36$$35$$35$7205759403792804571$35$$35$d2QX) (= lq_karg$36$x$35$$35$a29v$35$$35$k_$35$$35$1098 x$35$$35$a29v) (= lq_karg$36$xs$35$$35$a29w$35$$35$k_$35$$35$1098 xs$35$$35$a29w) (= lq_karg$36$y$35$$35$a29t$35$$35$k_$35$$35$1098 y$35$$35$a29t)))))) b$36$$35$$35$162 b$36$$35$$35$163 b$36$$35$$35$164 b$36$$35$$35$168 b$36$$35$$35$169 b$36$$35$$35$170 b$36$$35$$35$43 b$36$$35$$35$155 b$36$$35$$35$46 b$36$$35$$35$159))
(push 1)
(assert (not (<= y$35$$35$a29t VV$35$$35$F$35$$35$21)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (or (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403792804562$35$$35$d2QO$35$$35$k_$35$$35$937 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792804565$35$$35$d2QR$35$$35$k_$35$$35$937 Int) (lq_karg$36$VV$35$$35$936$35$$35$k_$35$$35$937 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792804563$35$$35$d2QP$35$$35$k_$35$$35$937 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792804564$35$$35$d2QQ$35$$35$k_$35$$35$937 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792804566$35$$35$d2QS$35$$35$k_$35$$35$937 Int)) (and (= lq_karg$36$VV$35$$35$936$35$$35$k_$35$$35$937 VV$35$$35$F$35$$35$37) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804562$35$$35$d2QO$35$$35$k_$35$$35$937 lq_anf$36$$35$$35$7205759403792804562$35$$35$d2QO) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804563$35$$35$d2QP$35$$35$k_$35$$35$937 lq_anf$36$$35$$35$7205759403792804563$35$$35$d2QP) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804564$35$$35$d2QQ$35$$35$k_$35$$35$937 lq_anf$36$$35$$35$7205759403792804564$35$$35$d2QQ) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804565$35$$35$d2QR$35$$35$k_$35$$35$937 lq_anf$36$$35$$35$7205759403792804565$35$$35$d2QR) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804566$35$$35$d2QS$35$$35$k_$35$$35$937 lq_anf$36$$35$$35$7205759403792804566$35$$35$d2QS) (exists ((VV$35$$35$F$35$$35$42 Int)) (and (= VV$35$$35$F$35$$35$42 2) (= VV$35$$35$F$35$$35$42 lq_anf$36$$35$$35$7205759403792804563$35$$35$d2QP) (= lq_karg$36$VV$35$$35$936$35$$35$k_$35$$35$937 VV$35$$35$F$35$$35$42) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804562$35$$35$d2QO$35$$35$k_$35$$35$937 lq_anf$36$$35$$35$7205759403792804562$35$$35$d2QO) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804563$35$$35$d2QP$35$$35$k_$35$$35$937 lq_anf$36$$35$$35$7205759403792804563$35$$35$d2QP) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804564$35$$35$d2QQ$35$$35$k_$35$$35$937 lq_anf$36$$35$$35$7205759403792804564$35$$35$d2QQ) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804565$35$$35$d2QR$35$$35$k_$35$$35$937 lq_anf$36$$35$$35$7205759403792804565$35$$35$d2QR) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804566$35$$35$d2QS$35$$35$k_$35$$35$937 lq_anf$36$$35$$35$7205759403792804566$35$$35$d2QS))))) (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403792804562$35$$35$d2QO$35$$35$k_$35$$35$937 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792804565$35$$35$d2QR$35$$35$k_$35$$35$937 Int) (lq_karg$36$VV$35$$35$936$35$$35$k_$35$$35$937 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792804563$35$$35$d2QP$35$$35$k_$35$$35$937 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792804564$35$$35$d2QQ$35$$35$k_$35$$35$937 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792804566$35$$35$d2QS$35$$35$k_$35$$35$937 Int)) (and (= lq_karg$36$VV$35$$35$936$35$$35$k_$35$$35$937 VV$35$$35$F$35$$35$37) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804562$35$$35$d2QO$35$$35$k_$35$$35$937 lq_anf$36$$35$$35$7205759403792804562$35$$35$d2QO) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804563$35$$35$d2QP$35$$35$k_$35$$35$937 lq_anf$36$$35$$35$7205759403792804563$35$$35$d2QP) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804564$35$$35$d2QQ$35$$35$k_$35$$35$937 lq_anf$36$$35$$35$7205759403792804564$35$$35$d2QQ) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804565$35$$35$d2QR$35$$35$k_$35$$35$937 lq_anf$36$$35$$35$7205759403792804565$35$$35$d2QR) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804566$35$$35$d2QS$35$$35$k_$35$$35$937 lq_anf$36$$35$$35$7205759403792804566$35$$35$d2QS) (exists ((VV$35$$35$F$35$$35$41 Int)) (and (or (exists ((lq_karg$36$VV$35$$35$920$35$$35$k_$35$$35$921 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792804564$35$$35$d2QQ$35$$35$k_$35$$35$921 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792804563$35$$35$d2QP$35$$35$k_$35$$35$921 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792804565$35$$35$d2QR$35$$35$k_$35$$35$921 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792804562$35$$35$d2QO$35$$35$k_$35$$35$921 Int)) (and (= lq_karg$36$VV$35$$35$920$35$$35$k_$35$$35$921 VV$35$$35$F$35$$35$41) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804562$35$$35$d2QO$35$$35$k_$35$$35$921 lq_anf$36$$35$$35$7205759403792804562$35$$35$d2QO) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804563$35$$35$d2QP$35$$35$k_$35$$35$921 lq_anf$36$$35$$35$7205759403792804563$35$$35$d2QP) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804564$35$$35$d2QQ$35$$35$k_$35$$35$921 lq_anf$36$$35$$35$7205759403792804564$35$$35$d2QQ) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804565$35$$35$d2QR$35$$35$k_$35$$35$921 lq_anf$36$$35$$35$7205759403792804565$35$$35$d2QR) (exists ((VV$35$$35$F$35$$35$45 Int)) (and (= VV$35$$35$F$35$$35$45 3) (= VV$35$$35$F$35$$35$45 lq_anf$36$$35$$35$7205759403792804564$35$$35$d2QQ) (= lq_karg$36$VV$35$$35$920$35$$35$k_$35$$35$921 VV$35$$35$F$35$$35$45) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804562$35$$35$d2QO$35$$35$k_$35$$35$921 lq_anf$36$$35$$35$7205759403792804562$35$$35$d2QO) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804563$35$$35$d2QP$35$$35$k_$35$$35$921 lq_anf$36$$35$$35$7205759403792804563$35$$35$d2QP) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804564$35$$35$d2QQ$35$$35$k_$35$$35$921 lq_anf$36$$35$$35$7205759403792804564$35$$35$d2QQ) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804565$35$$35$d2QR$35$$35$k_$35$$35$921 lq_anf$36$$35$$35$7205759403792804565$35$$35$d2QR))))) (exists ((lq_karg$36$VV$35$$35$920$35$$35$k_$35$$35$921 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792804564$35$$35$d2QQ$35$$35$k_$35$$35$921 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792804563$35$$35$d2QP$35$$35$k_$35$$35$921 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792804565$35$$35$d2QR$35$$35$k_$35$$35$921 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792804562$35$$35$d2QO$35$$35$k_$35$$35$921 Int)) (and (= lq_karg$36$VV$35$$35$920$35$$35$k_$35$$35$921 VV$35$$35$F$35$$35$41) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804562$35$$35$d2QO$35$$35$k_$35$$35$921 lq_anf$36$$35$$35$7205759403792804562$35$$35$d2QO) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804563$35$$35$d2QP$35$$35$k_$35$$35$921 lq_anf$36$$35$$35$7205759403792804563$35$$35$d2QP) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804564$35$$35$d2QQ$35$$35$k_$35$$35$921 lq_anf$36$$35$$35$7205759403792804564$35$$35$d2QQ) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804565$35$$35$d2QR$35$$35$k_$35$$35$921 lq_anf$36$$35$$35$7205759403792804565$35$$35$d2QR) (exists ((VV$35$$35$F$35$$35$44 Int)) false)))) (= lq_karg$36$VV$35$$35$936$35$$35$k_$35$$35$937 VV$35$$35$F$35$$35$41) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804562$35$$35$d2QO$35$$35$k_$35$$35$937 lq_anf$36$$35$$35$7205759403792804562$35$$35$d2QO) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804563$35$$35$d2QP$35$$35$k_$35$$35$937 lq_anf$36$$35$$35$7205759403792804563$35$$35$d2QP) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804564$35$$35$d2QQ$35$$35$k_$35$$35$937 lq_anf$36$$35$$35$7205759403792804564$35$$35$d2QQ) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804565$35$$35$d2QR$35$$35$k_$35$$35$937 lq_anf$36$$35$$35$7205759403792804565$35$$35$d2QR) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804566$35$$35$d2QS$35$$35$k_$35$$35$937 lq_anf$36$$35$$35$7205759403792804566$35$$35$d2QS)))))) b$36$$35$$35$144 b$36$$35$$35$145 b$36$$35$$35$146 b$36$$35$$35$148 b$36$$35$$35$149 b$36$$35$$35$43 b$36$$35$$35$46))
(push 1)
(assert (not (<= lq_anf$36$$35$$35$7205759403792804562$35$$35$d2QO VV$35$$35$F$35$$35$37)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$162 b$36$$35$$35$163 b$36$$35$$35$164 b$36$$35$$35$264 b$36$$35$$35$168 b$36$$35$$35$169 b$36$$35$$35$43 b$36$$35$$35$155 b$36$$35$$35$46 b$36$$35$$35$159))
(push 1)
(assert (not (<= x$35$$35$a29v VV$35$$35$F$35$$35$24)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (or (exists ((lq_karg$36$VV$35$$35$920$35$$35$k_$35$$35$921 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792804564$35$$35$d2QQ$35$$35$k_$35$$35$921 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792804563$35$$35$d2QP$35$$35$k_$35$$35$921 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792804565$35$$35$d2QR$35$$35$k_$35$$35$921 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792804562$35$$35$d2QO$35$$35$k_$35$$35$921 Int)) (and (= lq_karg$36$VV$35$$35$920$35$$35$k_$35$$35$921 VV$35$$35$F$35$$35$40) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804562$35$$35$d2QO$35$$35$k_$35$$35$921 lq_anf$36$$35$$35$7205759403792804562$35$$35$d2QO) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804563$35$$35$d2QP$35$$35$k_$35$$35$921 lq_anf$36$$35$$35$7205759403792804563$35$$35$d2QP) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804564$35$$35$d2QQ$35$$35$k_$35$$35$921 lq_anf$36$$35$$35$7205759403792804564$35$$35$d2QQ) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804565$35$$35$d2QR$35$$35$k_$35$$35$921 lq_anf$36$$35$$35$7205759403792804565$35$$35$d2QR) (exists ((VV$35$$35$F$35$$35$45 Int)) (and (= VV$35$$35$F$35$$35$45 3) (= VV$35$$35$F$35$$35$45 lq_anf$36$$35$$35$7205759403792804564$35$$35$d2QQ) (= lq_karg$36$VV$35$$35$920$35$$35$k_$35$$35$921 VV$35$$35$F$35$$35$45) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804562$35$$35$d2QO$35$$35$k_$35$$35$921 lq_anf$36$$35$$35$7205759403792804562$35$$35$d2QO) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804563$35$$35$d2QP$35$$35$k_$35$$35$921 lq_anf$36$$35$$35$7205759403792804563$35$$35$d2QP) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804564$35$$35$d2QQ$35$$35$k_$35$$35$921 lq_anf$36$$35$$35$7205759403792804564$35$$35$d2QQ) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804565$35$$35$d2QR$35$$35$k_$35$$35$921 lq_anf$36$$35$$35$7205759403792804565$35$$35$d2QR))))) (exists ((lq_karg$36$VV$35$$35$920$35$$35$k_$35$$35$921 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792804564$35$$35$d2QQ$35$$35$k_$35$$35$921 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792804563$35$$35$d2QP$35$$35$k_$35$$35$921 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792804565$35$$35$d2QR$35$$35$k_$35$$35$921 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792804562$35$$35$d2QO$35$$35$k_$35$$35$921 Int)) (and (= lq_karg$36$VV$35$$35$920$35$$35$k_$35$$35$921 VV$35$$35$F$35$$35$40) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804562$35$$35$d2QO$35$$35$k_$35$$35$921 lq_anf$36$$35$$35$7205759403792804562$35$$35$d2QO) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804563$35$$35$d2QP$35$$35$k_$35$$35$921 lq_anf$36$$35$$35$7205759403792804563$35$$35$d2QP) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804564$35$$35$d2QQ$35$$35$k_$35$$35$921 lq_anf$36$$35$$35$7205759403792804564$35$$35$d2QQ) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804565$35$$35$d2QR$35$$35$k_$35$$35$921 lq_anf$36$$35$$35$7205759403792804565$35$$35$d2QR) (exists ((VV$35$$35$F$35$$35$44 Int)) false)))) b$36$$35$$35$144 b$36$$35$$35$145 b$36$$35$$35$146 b$36$$35$$35$148 b$36$$35$$35$43 b$36$$35$$35$46))
(push 1)
(assert (not (<= lq_anf$36$$35$$35$7205759403792804563$35$$35$d2QP VV$35$$35$F$35$$35$40)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (or (exists ((lq_karg$36$xs$35$$35$a29w$35$$35$k_$35$$35$1060 Int) (lq_karg$36$VV$35$$35$1059$35$$35$k_$35$$35$1060 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792804570$35$$35$d2QW$35$$35$k_$35$$35$1060 Bool) (lq_karg$36$ds_d2Pm$35$$35$k_$35$$35$1060 Int) (lq_karg$36$Scratch.Sample2.okList$35$$35$k_$35$$35$1060 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792804571$35$$35$d2QX$35$$35$k_$35$$35$1060 Bool) (lq_karg$36$y$35$$35$a29t$35$$35$k_$35$$35$1060 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792804568$35$$35$d2QU$35$$35$k_$35$$35$1060 Int) (lq_karg$36$x$35$$35$a29v$35$$35$k_$35$$35$1060 Int)) (and (= lq_karg$36$Scratch.Sample2.okList$35$$35$k_$35$$35$1060 Scratch.Sample2.okList) (= lq_karg$36$VV$35$$35$1059$35$$35$k_$35$$35$1060 VV$35$$35$F$35$$35$27) (= lq_karg$36$ds_d2Pm$35$$35$k_$35$$35$1060 ds_d2Pm) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804568$35$$35$d2QU$35$$35$k_$35$$35$1060 lq_anf$36$$35$$35$7205759403792804568$35$$35$d2QU) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804570$35$$35$d2QW$35$$35$k_$35$$35$1060 lq_anf$36$$35$$35$7205759403792804570$35$$35$d2QW) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804571$35$$35$d2QX$35$$35$k_$35$$35$1060 lq_anf$36$$35$$35$7205759403792804571$35$$35$d2QX) (= lq_karg$36$x$35$$35$a29v$35$$35$k_$35$$35$1060 x$35$$35$a29v) (= lq_karg$36$xs$35$$35$a29w$35$$35$k_$35$$35$1060 xs$35$$35$a29w) (= lq_karg$36$y$35$$35$a29t$35$$35$k_$35$$35$1060 y$35$$35$a29t) (exists ((VV$35$$35$F$35$$35$31 Int)) (and (= VV$35$$35$F$35$$35$31 y$35$$35$a29t) (= lq_karg$36$Scratch.Sample2.okList$35$$35$k_$35$$35$1060 Scratch.Sample2.okList) (= lq_karg$36$VV$35$$35$1059$35$$35$k_$35$$35$1060 VV$35$$35$F$35$$35$31) (= lq_karg$36$ds_d2Pm$35$$35$k_$35$$35$1060 ds_d2Pm) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804568$35$$35$d2QU$35$$35$k_$35$$35$1060 lq_anf$36$$35$$35$7205759403792804568$35$$35$d2QU) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804570$35$$35$d2QW$35$$35$k_$35$$35$1060 lq_anf$36$$35$$35$7205759403792804570$35$$35$d2QW) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804571$35$$35$d2QX$35$$35$k_$35$$35$1060 lq_anf$36$$35$$35$7205759403792804571$35$$35$d2QX) (= lq_karg$36$x$35$$35$a29v$35$$35$k_$35$$35$1060 x$35$$35$a29v) (= lq_karg$36$xs$35$$35$a29w$35$$35$k_$35$$35$1060 xs$35$$35$a29w) (= lq_karg$36$y$35$$35$a29t$35$$35$k_$35$$35$1060 y$35$$35$a29t))))) (exists ((lq_karg$36$xs$35$$35$a29w$35$$35$k_$35$$35$1060 Int) (lq_karg$36$VV$35$$35$1059$35$$35$k_$35$$35$1060 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792804570$35$$35$d2QW$35$$35$k_$35$$35$1060 Bool) (lq_karg$36$ds_d2Pm$35$$35$k_$35$$35$1060 Int) (lq_karg$36$Scratch.Sample2.okList$35$$35$k_$35$$35$1060 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792804571$35$$35$d2QX$35$$35$k_$35$$35$1060 Bool) (lq_karg$36$y$35$$35$a29t$35$$35$k_$35$$35$1060 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792804568$35$$35$d2QU$35$$35$k_$35$$35$1060 Int) (lq_karg$36$x$35$$35$a29v$35$$35$k_$35$$35$1060 Int)) (and (= lq_karg$36$Scratch.Sample2.okList$35$$35$k_$35$$35$1060 Scratch.Sample2.okList) (= lq_karg$36$VV$35$$35$1059$35$$35$k_$35$$35$1060 VV$35$$35$F$35$$35$27) (= lq_karg$36$ds_d2Pm$35$$35$k_$35$$35$1060 ds_d2Pm) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804568$35$$35$d2QU$35$$35$k_$35$$35$1060 lq_anf$36$$35$$35$7205759403792804568$35$$35$d2QU) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804570$35$$35$d2QW$35$$35$k_$35$$35$1060 lq_anf$36$$35$$35$7205759403792804570$35$$35$d2QW) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804571$35$$35$d2QX$35$$35$k_$35$$35$1060 lq_anf$36$$35$$35$7205759403792804571$35$$35$d2QX) (= lq_karg$36$x$35$$35$a29v$35$$35$k_$35$$35$1060 x$35$$35$a29v) (= lq_karg$36$xs$35$$35$a29w$35$$35$k_$35$$35$1060 xs$35$$35$a29w) (= lq_karg$36$y$35$$35$a29t$35$$35$k_$35$$35$1060 y$35$$35$a29t) (exists ((VV$35$$35$F$35$$35$30 Int)) (and (<= x$35$$35$a29v VV$35$$35$F$35$$35$30) (= lq_karg$36$Scratch.Sample2.okList$35$$35$k_$35$$35$1060 Scratch.Sample2.okList) (= lq_karg$36$VV$35$$35$1059$35$$35$k_$35$$35$1060 VV$35$$35$F$35$$35$30) (= lq_karg$36$ds_d2Pm$35$$35$k_$35$$35$1060 ds_d2Pm) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804568$35$$35$d2QU$35$$35$k_$35$$35$1060 lq_anf$36$$35$$35$7205759403792804568$35$$35$d2QU) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804570$35$$35$d2QW$35$$35$k_$35$$35$1060 lq_anf$36$$35$$35$7205759403792804570$35$$35$d2QW) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792804571$35$$35$d2QX$35$$35$k_$35$$35$1060 lq_anf$36$$35$$35$7205759403792804571$35$$35$d2QX) (= lq_karg$36$x$35$$35$a29v$35$$35$k_$35$$35$1060 x$35$$35$a29v) (= lq_karg$36$xs$35$$35$a29w$35$$35$k_$35$$35$1060 xs$35$$35$a29w) (= lq_karg$36$y$35$$35$a29t$35$$35$k_$35$$35$1060 y$35$$35$a29t)))))) b$36$$35$$35$162 b$36$$35$$35$163 b$36$$35$$35$164 b$36$$35$$35$165 b$36$$35$$35$166 b$36$$35$$35$43 b$36$$35$$35$155 b$36$$35$$35$46 b$36$$35$$35$159))
(push 1)
(assert (not (<= x$35$$35$a29v VV$35$$35$F$35$$35$27)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and false b$36$$35$$35$144 b$36$$35$$35$145 b$36$$35$$35$146 b$36$$35$$35$43 b$36$$35$$35$46))
(push 1)
(assert (not (<= lq_anf$36$$35$$35$7205759403792804564$35$$35$d2QQ VV$35$$35$F$35$$35$43)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(pop 1)
(pop 1)
(exit)
